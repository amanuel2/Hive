{"version":3,"sources":["filters/dateFilter.js","app.module.js","app.min.js","app.route.js","directives/customngChange.js","directives/otherUserCard.js","directives/replyDateDirective.js","directives/userCardDirective.js","filters/emoteFilter.js","filters/nonFullDateFilter.js","filters/rangeDupe.js","filters/tagsMultiple.js","services/authCheckTrue.js","services/badgesService.js","services/dateService.js","services/editReplyService.js","services/editTopicService.js","services/emojiList.js","services/emojieTool.js","services/encodeImageToBase64.js","services/letterAvatarService.js","services/loadingService.js","services/otherUserProfilePageService.js","services/otherUserService.js","services/refService.js","services/replaceService.js","services/replyService.js","services/timeService.js","services/topicLikesService.js","404/controllers/404Controller.js","auth/controllers/authCtrl.js","authDesc/controllers/authDescCtrl.js","editReply/controllers/editReplyCtrl.js","editTopicPanel/controllers/editTopicPanelCtrl.js","home/controller/homeCtrl.js","loading/controllers/loadingCtrl.js","newTopic/controllers/newTopicCtrl.js","otherUserProfile/controllers/otherUserProfileCtrl.js","otherUserProfilePage/controllers/otherUserProfilePageCtrl.js","profile/controllers/profileCtrl.js","settings/controllers/settingsCtrl.js","topic/controllers/topicCtrl.js","authHome/authHomeCtrl.js","emojieTool/emojieToolCtrl.js","settings/desciptonChange.js","settings/emailSettingsCtrl.js","settings/imageChangeCtrl.js","settings/passwordChangeCtrl.js","settings/usernameChangeCtrl.js","viewTopicLikes/viewTopicLikes.js"],"names":["dateFilter","timeService","input","getTimeF","Date","parseInt","angular","module","stateParams","$stateProvider","$urlRouterProvider","$mdThemingProvider","theme","primaryPalette","otherwise","state","url","templateUrl","controller","resolve","currentAuth","refService","$inject","config","customOnChange","restrict","link","scope","element","attrs","onChangeHandler","$eval","bind","directive","otherUserCard","transclude","name","image","Moderator","desc","elem","ctrl","$scope","replyDirective","template","elm","dateNotParsed","innerText","console","log","app","userCardDirective","uid","email","filter","emoteFilterfunc","$sce","emojiListService","replace","string","str1","str2","RegExp","emojieList","getEmojies","marked","emoji","hasOwnProperty","trustAsHtml","nonFullDateFilterFunc","JSON","stringify","substring","min","max","range","i","push","String","prototype","replaceAll","ignore","this","authCheckService","$state","checkAuth","dest","getAuth","go","service","badgesServiceFunc","getDaysVisitedBadges","daysVisited","bronze","rankone","Title","Type","Rank","Days","pushObj","activeUser","ranktwo","rankthree","rankfour","silver","gold","platinum","getTopicBadges","questionLover","Topics","getReplyBadges","Replies","dateService","formatDate","date","year","getFullYear","month","getUTCMonth","day","getUTCDate","slice","toString","substr","formattedDate","editReplyService","topicCreatorName","nonParsedDate","topicCreatorUID","pushK","setInfo","getName","getDatee","getTopicUID","getPushK","editTopicFuncService","dateCreated","setDateCreated","value","getDateCreated","emojiListFunc","replaceAt","index","character","length","currentRenderEmojies","valRend",":)",":smile:",":(",":sad:",":D",":smiley:",":;",":very_happy:",":P",":tounge_stuck_out:",":X",":cant_talk:","xD",":laugh_dang:","-1",":minus_one:","+1",":plus_one:","emojieToolfunc","elementInfo","setElementInfo","getElementInfo","resetElementInfo","b64toBlob","b64","onsuccess","onerror","img","Image","onload","canvas","document","createElement","width","height","ctx","getContext","drawImage","toBlob","src","encodeImageToBase64","replyService","encode","file","ref","UID","fileToLoad","fileReader","FileReader","fileLoadedEvent","srcData","target","result","blob","window","URL","createObjectURL","child","update","once","snapshot","forEach","childSnapshot","childData","key","val","pushKey","Avatar","EvenChild","childDataNest","replyCreatorUID","replyCreatorAvatar","error","readAsDataURL","letterAvatarServiceFunc","$http","letters","a","letter","b","c","d","e","f","g","h","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","numbers","0","number","1","2","3","4","5","6","7","8","9","Mystery","loadJSON","get","then","data","logLetter","getLetterURL","loaderData","char","charAt","len","lenNum","URLVALUE","toLowerCase","loadingServiceFunc","loadingTo","setLoadingTo","getLoadingTo","otherUserProfilePageServicefunc","otherUserID","setID","ID","getID","otherUserInfo","otherACTUALINFO","setUserInfo","info","getUserInfo","ACTUALsetUserInfo","ACTUALgetUserInfo","$firebaseAuth","Firebase","refAuth","replaceServicefunc","replaceAllString","topicTitle","creatorTitle","creatorUID","creatorUsername","creatorValue","creatorDate","creatorAvatar","creatorEmail","timeSinceCreated","postNum","setTopicInfo","title","creator","username","since","avatar","getTopicInfo","time","constructor","getTime","time_formats","seconds","token","list_choice","Math","abs","format","floor","getTimeS","interval","topicLikesServiceFunc","info1","info2","resetInfo","getInfo","getInfo1","getInfo2","ErrControllerFunc","authCtrl","$firebaseObject","authCheckTrueService","$firebaseArray","$mdDialog","letterAvatarService","PASSWORDRESET","possibleChars","password","random","loadImageJSON","toggleClass","enabled","close","forgotPass","alertify","prompt","evt","resetPassword","code","success","oAuthLogin","provider","authWithOAuthPopup","authData","unauth","usernames","snapLog","vex","dialog","message","placeholder","callback","$loaded","Username","isDupe","createUser","userData","set","displayName","Email","profileImageURL","BronzeBadge","SilverBadge","GoldBadge","PlatinumBadge","newUser","profileBackground","followers","following","profileViews","Precence","Points","DateJoined","now","cachedUserProfile","profile_background_image_url_https","isUsernameDupeNested","setTimeout","location","reload","loginAUTH","authWithPassword","user","regissterForm","isUsernameDupe","on","childSNap","register","$evalAsync","setResponse","show","alert","clickOutsideToClose","textContent","ariaLabel","ok","openFrom","top","closeTo","left","cancel","authDescCtrl","$mdMedia","$mdBottomSheet","$timeout","bookmarked","rep","returne","snapshotBookMarkOutlineTopic","evenChildBook","bookchildData","Bookmarks","authDataDesc","Bookmark","topic","topicName","topicViewsLen","dataChild","Views","times","ViewsLen","goToPerson","person","event","targetEvent","loadUsers","tagsOption","Tags","showNewTopic","ev","useFullScreen","customFullscreen","parent","body","$requireAuth","fullscreen","clickedItem","goToTOPICAUTCOMPLETE","USERNAME","POST","Postnum","goToTopic","postnum","editReplyFunc","editTopicService","hide","answer","dataTrib","dataTribHash","snapUser","snapUserEach","tribute","Tribute","trigger","values","ready","attach","getElementById","snapTopic","snapTopicEven","tribute_hash","selectTemplate","item","original","setOptions","renderer","Renderer","gfm","tables","breaks","pedantic","sanitize","smartLists","smartypants","highlight","lang","hljs","highlightAuto","myConfig","create","onChange","valueField","labelField","maxItems","required","$watch","current","outputText","prop","shortcuts","shortcutName","clipboardData","getData","open","editREPLY","topicPushKey","childSnap","replyCreatorValue","editValue","editTopicPanelCtrlfunc","$stateParams","$","select2","allowClear","matcher","term","text","toUpperCase","indexOf","outputTextFirebaseObject","defaultTags","daDATA","daDATASNAP","editTitle","Value","valTag","editTopicPan","tagsSelectedFireBase","editTextStuff","homeCtrl","loadingService","openMenu","circle","classList","toggle","ham","main","preventDefault","stopImmediatePropagation","closeMenu","contains","remove","querySelector","querySelectorAll","win","addEventListener","goTo","loc","loadingCtrlfunc","currentAuthGet","subTitle","loaderLoc","href","newTopicCtrl","emojieTool","logicToGoBack","isThereTag","tagCheckPrev","dataC","Default","Name","undoAndRedo","opt","Clipboard","markdownData","emojieStart","submitNewTopic","search","userAvatar","userName","userEmail","pushing","DateCreated","LastActivity","IsAcceptedAnwser","Votes","AcceptedAnwserReplyNum","sentence","showhide","id","style","display","otherUserProfileCtrl","otherUserProfilePageService","otherUserService","obj","topicLenObj","precence","timeSinceNoPageOBJ","timeSinceNoPage","currentAuthGetOTHER","otherUserUID","otherUserUsername","ACTUALinfo","otherUserEmail","replyCreatorEmail","otherUserImage","replyCreatorUsername","numFollowing","numFollowers","otherMod","otherDesc","Description","count","topicData","timeSINCEOBJ","dataLOAD","OBJPRECENCE","presence","userRef","snapshotPrecence","goToPage","addFolower","followerCheck","followingCheck","dataCheckFollower","$id","$value","snap","Desc","dataCheckFollowing","snapp","privateMessageStart","mod","AVATAR","DATE","EMAIL","TITLE","VALUE","otherUserProfilePageCtrlFunc","otherUSERIDPAGE","profileCtrl","currentAuthGetPro","objPres","backImage","ProfileViews","Followers","Following","count_b","count_s","coung_g","coung_p","count_g","count_p","isPresent","settingsCtrl","isPassChange","currentAuthSet","userInfo","passwordSHARP","changeEmail","wantsFullScreen","descriptonChange","changePassword","getElementsByTagName","changeUsername","changeImage","deleteUser","confirm","err","removeUser","topicCtrl","localStorageService","topicLikesService","badgesService","generateUUID","uuid","voteHelper","didVote","viewsCheck","snapshotViews","snapShotViewsForEach","childDataSNAPVIEWS","upVoteRegister","TOTAL_POINTS","Point","downVoteCheck","downVotePointRegister","isCheckedHelper","returnerCheck","snapshotBestAnwserOutlineTopic","snapBest","isBestAnwser","replyNumber","Replynum","bestAnwserRegister","TOTAL_POINTS_BEST_ANWSERY_LIKES","unbestAnwserRegister","TOTAL_POINTS_BEST_ANSWERN_LIKES","liked","returner","snapshotLikeOutlineTopic","Like","likeRegister","TOTAL_POINTS_REPLIES_LIKES","unLikeRegister","VoteHelper","snapSHOT","Vote","notAuthReplyTopic","myAlert","EVEN","repliesNum","RepliesNum","dateCheck","creatorDateParsed","actualReplyUser","thisUser","isModerator","currentUserAvatar","views","countViews","numChildren","votedAlready","side","sideFunctoin","events","badgeClass","badgeIconClass","content","scrollDownReply","animate","scrollTop","upVote","upVoteIcon","add","downVoteIcon","downVote","countVote","votesViewing","snapshotVote","VoteChild","evenChildVote","childDataCHILD","replies","tagsTopic","snapDataTag","tagsTopicRep","goToProfile","editReply","reps","deletePost","warn","urlSHARINGCURRENT","openShareMenu","$mdOpenMenu","funcCheckEDIT","goBackTopic","isReplyable","isLikeable","isShareble","isFlaggable","isBookmarkable","isChecked","classBestAnwser","notChecked","checked","likeBoxNo","likeBoxYes","likeBox","likeBoxNoNgClick","likeBoxYesNgClick","Avarar","bookmarkBoxNo","bookmarkBoxYes","bookmarkBoxNoNgClick","bookmarkBoxYesNgClick","upVoteCheck","objBookmark","dataBook","snapap","bookMarkToggleTopic","bookmarkClickOutlineTopic","bookmarkClickNonOutlineTopic","editTopicPriv","flagSee","editTopic","titleReply","replyTagsShow","canDeleteCheck","deleteTopicPriv","deleteTopic","snapshotTopic","repliesLikesNum","count_likes","snapRepNum","snapRepNumChild","Likes","seeTopicLikes","num_likes","submitNewReply","numRepliesAlready","pushingR","replyCreatorDate","replyCreatorDateParsed","topicCreatorUsername","topicCreatorTitle","topicCreatorAvatar","topicCreatorSince","lastAct","dataLast","snapDataLastAct","snapREPVIEWS","authHomeCtrl","currentAuthGetHome","amOnline","onDisconnect","ServerValue","TIMESTAMP","onIdle","onAway","onBack","isIdle","isAway","setup","buttons","focus","prepare","setContent","onAuth","logout","goToSettings","snapTour","arrBadges","activeUserBadgeCount","repSnap","repSnapChild","repSnapChild2","topicBadges","topicCount","snapBadTopics","snapBadTopicsChild","Platinum","daysVistedBadge","daysSinceJoined","moment","duration","diff","_days","Bronze","Silver","Gold","emojieToolCtrlfunc","$rootScope","emojieListCtrl","emojieClick","descChangeCtrl","change","emailSettingsCtrl","getUID","changeEmailDialog","emailChange","oldEmail","emailChangeOld","newEmail","passwordChangeOld","imageChangeCtrl","uploadFile","doc","files","passwordChangeCtrl","changePasswordDialog","emailNormal","oldPassword","newPassword","passwordChangeNew","usernameChangeCtrl","changeUsernameDialog","usernameNew","viewTopicLikesfunc","avatars"],"mappings":"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","file":"app.min.js","sourcesContent":["angular.module('ForumApp')\r\n    .filter(\"dateFilter\", [\"timeService\", dateFilter]);\r\n\r\nfunction dateFilter(timeService){\r\n    return function(input){\r\n        return timeService.getTimeF(new Date(parseInt(input)));\r\n    };\r\n}","(function (angular) {\n\n    angular.module('ForumApp', [\n            //Deps\n            'ui.router',\n            'ngMaterial',\n            'firebase',\n            'ngMessages',\n            'ngMdIcons',\n            'ngSanitize',\n            'vcRecaptcha',\n            'angularScreenfull',\n            'LocalStorageModule',\n            '720kb.socialshare'\n        ]\n    );\n})(angular);\n/*\n Release 1.1\n ----------------\n PRODUCTION MODE DATABASE - https://uniquecoders.firebaseio.com/\n DEVELOPMENT MODE DATABASE - https://uniquecodersforums.firebaseio.com/\n\n POINTS\n ---------------\n Points Change----|\n |__ Lower-----------|\n |__ Higher---|      |__ TOPIC DOWNVOTE\n |___ TOPIC UPVOTE\n |___ REPLY LIKE\n |___ REPLY BEST_ANWSER\n\n\n TECHNIQUE:\n\n CHANGE DATABASE DIFFRENT SYSTEM. DONT\n CHANGE ACTUAL POINTS TO STOP HIJACK OF POINTS.\n\n LIKESOBJ-----\n |___UID___\n |__ +{POINT} , -{POINT}\n\n\nTODO BEFORE RELEASE 1.3\n------------------------\n404\nProfile\nNew Topic\nBOOKMARK\n------------------------\n\n BACKEND\n --------\n Aman\n ------\n TODO : DISCOURSE REPLY BAR\n TODO : PROFILE\n TODO : BADGES\n TODO : TOURING\n TODO: Add Drag Drop Image upload\n TODO : OTHERUSERPROFILEPAGE\n TODO : PRIVATE MESSAGE/PUBLIC\n TODO : FLAG = PRIVATE MESSAGING MODERATORS\n TODO : Notifications\n TODO: Online icon profile\n TODO : SESSIONS\n TODO : CHATS\n \n\n\n\n FRONTEND\n ---------$_\n\n Kyle\n -----\n TODO : FIX DESCRIPTON IN PROFILE PAGE\n TODO: LOADING SCREEN.. <-- NEED TO FIX AND SHOW ME HOW TO MAKE RESPONSIVE\n TODO : NEW TOPIC.HTML\n\n Shim\n ------\n TODO: 404 Page\n\n Jeff\n -----\n TODO : DOCS .(LATER WE WILL PUT A GUIDE FOR COMPANIES TO USE THIS FORUM)\n\n BACKEND AND FRONTENDs\n ---------------\n\n \n -------LATER RELEASES IDEAS--------\n\n TODO : GZIP\n TODO : SESSIONS, for POEPLE TO WORK COLLABORATIVELY\n TODO : PYTHON INTERPRETOR : http://www.skulpt.org/ PHP: https://phpjs.hertzen.com/console.html. C++: https://ide.c9.io/amanuel2/ruby_interpreator_in_js#openfile-README.md\n\n\n HELPERS\n -----\n LAYOUTS\n ------\n SETTINGS : http://cdn1.tnwcdn.com/wp-content/blogs.dir/1/files/2016/01/MD3.png\n Forum MAterial : http://www.one-click-forum.com/live-preview/\n Google Forum Material : https://productforums.google.com/forum/#!topic/docs/FQVnUuzZusQ\n ----------------\n */\n","(function (angular) {\n\n    angular.module('ForumApp', [\n            //Deps\n            'ui.router',\n            'ngMaterial',\n            'firebase',\n            'ngMessages',\n            'ngMdIcons',\n            'ngSanitize',\n            'vcRecaptcha',\n            'angularScreenfull',\n            'LocalStorageModule',\n            '720kb.socialshare'\n        ]\n    );\n})(angular);\n/*\n Release 1.1\n ----------------\n PRODUCTION MODE DATABASE - https://uniquecoders.firebaseio.com/\n DEVELOPMENT MODE DATABASE - https://uniquecodersforums.firebaseio.com/\n\n POINTS\n ---------------\n Points Change----|\n |__ Lower-----------|\n |__ Higher---|      |__ TOPIC DOWNVOTE\n |___ TOPIC UPVOTE\n |___ REPLY LIKE\n |___ REPLY BEST_ANWSER\n\n\n TECHNIQUE:\n\n CHANGE DATABASE DIFFRENT SYSTEM. DONT\n CHANGE ACTUAL POINTS TO STOP HIJACK OF POINTS.\n\n LIKESOBJ-----\n |___UID___\n |__ +{POINT} , -{POINT}\n\n\nTODO BEFORE RELEASE 1.3\n------------------------\n404\nProfile\nNew Topic\nBOOKMARK\n------------------------\n\n BACKEND\n --------\n Aman\n ------\n TODO : DISCOURSE REPLY BAR\n TODO : PROFILE\n TODO : BADGES\n TODO : TOURING\n TODO: Add Drag Drop Image upload\n TODO : OTHERUSERPROFILEPAGE\n TODO : PRIVATE MESSAGE/PUBLIC\n TODO : FLAG = PRIVATE MESSAGING MODERATORS\n TODO : Notifications\n TODO: Online icon profile\n TODO : SESSIONS\n TODO : CHATS\n \n\n\n\n FRONTEND\n ---------$_\n\n Kyle\n -----\n TODO : FIX DESCRIPTON IN PROFILE PAGE\n TODO: LOADING SCREEN.. <-- NEED TO FIX AND SHOW ME HOW TO MAKE RESPONSIVE\n TODO : NEW TOPIC.HTML\n\n Shim\n ------\n TODO: 404 Page\n\n Jeff\n -----\n TODO : DOCS .(LATER WE WILL PUT A GUIDE FOR COMPANIES TO USE THIS FORUM)\n\n BACKEND AND FRONTENDs\n ---------------\n\n \n -------LATER RELEASES IDEAS--------\n\n TODO : GZIP\n TODO : SESSIONS, for POEPLE TO WORK COLLABORATIVELY\n TODO : PYTHON INTERPRETOR : http://www.skulpt.org/ PHP: https://phpjs.hertzen.com/console.html. C++: https://ide.c9.io/amanuel2/ruby_interpreator_in_js#openfile-README.md\n\n\n HELPERS\n -----\n LAYOUTS\n ------\n SETTINGS : http://cdn1.tnwcdn.com/wp-content/blogs.dir/1/files/2016/01/MD3.png\n Forum MAterial : http://www.one-click-forum.com/live-preview/\n Google Forum Material : https://productforums.google.com/forum/#!topic/docs/FQVnUuzZusQ\n ----------------\n */\n\n(function (angular) {\n    stateParams.$inject = [\"$stateProvider\", \"$urlRouterProvider\", \"$mdThemingProvider\"];\n    angular.module('ForumApp')\n        .config(stateParams);\n\n    /* @ngInject */\n    function stateParams($stateProvider, $urlRouterProvider, $mdThemingProvider) {\n        $mdThemingProvider.theme(\"default\").primaryPalette(\"blue\");\n        $urlRouterProvider.otherwise('404');\n\n        $stateProvider\n            .state('home', {\n                url: '',\n                templateUrl: 'app/components/home/home.html',\n                controller: 'homeCtrl'\n            })\n            .state('auth', {\n                url: '/auth',\n                templateUrl: 'app/components/auth/auth.html',\n                controller: 'authCtrl'\n            })\n            .state('authHome', {\n                url: '/authHome',\n                templateUrl: 'app/components/authHome/authHome.html',\n                controller: 'authHome',\n                resolve: {\n                    // controller will not be loaded until $waitForAuth resolves\n                    // Auth refers to our $firebaseAuth wrapper in the example above\n                }\n            })\n            .state('authHome.desc', {\n                url: '/desc',\n                templateUrl: 'app/components/authDesc/authDesc.html',\n                controller: 'authDescCtrl',\n                resolve: {\n                    // controller will not be loaded until $waitForAuth resolves\n                    // Auth refers to our $firebaseAuth wrapper in the example above\n                    \"currentAuth\": [\"refService\", function (refService) {\n                    }]\n                }\n            })\n            .state('authHome.topic', {\n                url: '/topic/:POST/:USERNAME',\n                templateUrl: 'app/components/topic/topicDesc.html',\n                controller: 'topicCtrl',\n                resolve: {\n                    // controller will not be loaded until $waitForAuth resolves\n                    // Auth refers to our $firebaseAuth wrapper in the example above\n                }\n            })\n            .state('authHome.profile', {\n                url: '/profile/:UID',\n                templateUrl: 'app/components/profile/profile.html',\n                controller: 'profileCtrl',\n                resolve: {\n                    // controller will not be loaded until $waitForAuth resolves\n                    // Auth refers to our $firebaseAuth wrapper in the example above\n                }\n            })\n            .state('authHome.settings', {\n                url: '/settings?UID?USERNAME',\n                templateUrl: 'app/components/settings/settings.html',\n                controller: 'settingsCtrl',\n                resolve: {\n                    // controller will not be loaded until $waitForAuth resolves\n                    // Auth refers to our $firebaseAuth wrapper in the example above\n                }\n            })\n            .state('authHome.otherUser', {\n                url: '/otherUser?DATE?UID',\n                templateUrl: 'app/components/otherUserProfile/otherUserProfile.html',\n                controller: 'otherUserProfileCtrl',\n                resolve: {\n                    // controller will not be loaded until $waitForAuth resolves\n                    // Auth refers to our $firebaseAuth wrapper in the example above\n                }\n            })\n            .state('ErrorFourOFour', {\n                url: '/404',\n                templateUrl: 'app/components/404/404.html',\n                controller: '404Controller',\n                resolve: {\n                    // controller will not be loaded until $waitForAuth resolves\n                    // Auth refers to our $firebaseAuth wrapper in the example above\n                }\n            })\n            .state('loading', {\n                url: '/loading',\n                templateUrl: 'app/components/loading/loading.html',\n                controller: 'loadingCtrl',\n                resolve: {\n                    // controller will not be loaded until $waitForAuth resolves\n                    // Auth refers to our $firebaseAuth wrapper in the example above\n                }\n            })\n            .state('authHome.otherUserPage', {\n                url: '/:USERNAME/Activity',\n                templateUrl: 'app/components/otherUserProfilePage/otherUserProfilePage.html',\n                controller: 'otherUserProfilePageCtrl',\n                resolve: {\n                    // controller will not be loaded until $waitForAuth resolves\n                    // Auth refers to our $firebaseAuth wrapper in the example above\n                }\n            });\n    }\n})(angular);\n(function(angular){\n    'use strict';\n    \n    angular\n    .module('ForumApp')\n    .directive('customOnChange', customOnChange);\n\n    function customOnChange(){\n        return {\n        restrict: 'A',\n        link: function (scope, element, attrs) {\n          var onChangeHandler = scope.$eval(attrs.customOnChange);\n          element.bind('change', onChangeHandler);\n        }\n      };\n    }\n})(angular);\n\n(function(angular) {\n   'use strict'; \n     angular\n     .module('ForumApp')\n     .directive('otherUserCard', otherUserCard)\n\n    function otherUserCard() {\n        return {\n            restrict: 'E',\n            transclude: true,\n            scope: {\n                name: '@',\n                theme: '@',\n                image : '@',\n                Moderator : '@',\n                desc:'@'\n            },\n            templateUrl: 'views/directiveViews/otherUserCard.html',\n            link: function(scope, elem, attrs, ctrl) {\n\n            },\n            controller: [\"$scope\", function($scope) {\n                $scope.theme = $scope.theme || 'default'\n            }]\n        }\n    }\n})(angular);\n(function(angular){\r\n    var app = angular.module('ForumApp')\r\n\r\n    app.directive('replyDateDirective', [\"timeService\",replyDirective])\r\n\r\n    function replyDirective(timeService){\r\n        return {\r\n            restrict:'E',\r\n            transclude:true,\r\n            template : \"<span><ng-transclude></ng-transclude></span>\",\r\n            link:function(scope, elm, attrs){\r\n                var elemzero = elm[0];\r\n                var dateNotParsed = elm[0].innerText;\r\n                console.log(\"DATE NOT PARSED\" , dateNotParsed)\r\n                var dateParsed = timeService.getTimeF(new Date(parseInt(dateNotParsed)))\r\n                //elemzero.innerText = dateParsed;\r\n            }\r\n        }\r\n    }\r\n})(angular);\n(function(angular) {\n    var app = angular.module('ForumApp')\n\n    app.directive('userCardDirective', userCardDirective)\n\n    function userCardDirective() {\n        return {\n            restrict: 'E',\n            transclude: true,\n            scope: {\n                name: '@',\n                theme: '@',\n                image : '@',\n                uid : '@',\n                email:'@',\n                desc:'@'\n            },\n            templateUrl: 'views/directiveViews/userCard.html',\n            link: function(scope, elem, attrs, ctrl) {\n\n            },\n            controller: [\"$scope\", function($scope) {\n                $scope.theme = $scope.theme || 'default'\n            }]\n        }\n    }\n})(angular);\nangular.module('ForumApp')\r\n    .filter(\"dateFilter\", [\"timeService\", dateFilter]);\r\n\r\nfunction dateFilter(timeService){\r\n    return function(input){\r\n        return timeService.getTimeF(new Date(parseInt(input)));\r\n    };\r\n}\n(function(angular) {\n    'use strict';\n\n    angular\n        .module('ForumApp')\n        .filter('emoteFilter', ['$sce','emojiListService', emoteFilterfunc]);\n\n    function emoteFilterfunc($sce,emojiListService) {\n//EMOJIE LIST {PARAM} {https://github.com/amanuel2/ng-forum/wiki/How-to-write-emotions}\n        function replace(string, str1, str2) {\n            return string.replace(\n                new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g, \"\\\\$&\"), 'g'),\n                str2\n            );\n        }\n        \n        function replaceAt(index,character){\n            return this.substr(0, index) \n                                + character \n                                + this.substr(\n                                                index + character.length\n                                             );\n        }\n\n        var emojieList = emojiListService.getEmojies();\n\n        return function(string) {\n\n            if (typeof string === 'string') {\n\n                string = marked(string);\n\n                for (var emoji in emojieList) {\n                    if (emojieList.hasOwnProperty(emoji)) {\n                        string = replace(string, emoji, emojieList[emoji]);\n                    }\n                }\n\n                return $sce.trustAsHtml(string);\n            }\n\n        };\n    }\n})(angular);\n(function(angular){\n    var app = angular.module('ForumApp');\n\n    app.filter(\"nonFullDateFilter\", [\"timeService\",nonFullDateFilterFunc]);\n\n    function nonFullDateFilterFunc(timeService){\n        return function(input){\n            return (((JSON.stringify((new Date(parseInt(input))))).replace('\"','')).substring(0,10))\n        }\n    }\n})(angular);\n(function(){\n    angular\n            .module('ForumApp')\n            .filter('range', function() {\n                return function(input, min, max) {\n                    var range = [];\n                    min = parseInt(min); //Make string input int\n                    max = parseInt(max);\n                    for (var i=min; i<=max; i++)\n                        input[i] && range.push(input[i]);\n                    return range;\n                };\n            });\n})(angular);\n(function() {\n    'use strict';\n    angular\n        .module('ForumApp')\n        .filter('tagsMultiple', function() {\n            return function(input) {\n                String.prototype.replaceAll = function(str1, str2, ignore) {\n                    return this.replace(new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g, \"\\\\$&\"), (ignore ? \"gi\" : \"g\")), (typeof(str2) == \"string\") ? str2.replace(/\\$/g, \"$$$$\") : str2);\n                }\n                return ((JSON.stringify(input)).replaceAll('[', '').replaceAll('\"', '').replaceAll(']', ''))\n            };\n        });\n})(angular);\n(function(angular){\r\n    var app = angular.module('ForumApp');\r\n    \r\n    app.service('authCheckTrueService', [\"$state\" , authCheckService]);\r\n    \r\n    function authCheckService($state){\r\n        this.checkAuth = function(refService,dest){\r\n            if(refService.getAuth())\r\n                $state.go(dest);\r\n            else\r\n                return null;\r\n            \r\n        }\r\n    }\r\n})(angular);\n(function() {\n\n    'use strict';\n\n    angular\n        .module('ForumApp')\n        .service(\"badgesService\", badgesServiceFunc)\n\n    function badgesServiceFunc() {\n        //BADGES\n        //////5 REPLIES = ACTIVE USER - BRONZE Rank 1 \n        //////25 REPLIES = ACTIVE USER - Bronze Rank 2\n        //////50 REPLIES = ACTIVE USER - Bronze Rank3\n        ///// 75 Replies = active User - Bronze Rank 4\n        //// 100 Replies = active User - Silver Rank 1 \n        //// 130 Replies = Active User - Silver Rank 2 \n        //// 165 Replies = Active User - Silver Rank 3 \n        //// 215 Replies = Active User - Silver Rank 4 \n        /// 235 Replies = Active User - Gold Rank 1\n        //// 275 Replies = Active User - Gold Rank 2 \n        /// 315 Replies = Active User - Gold Rank 3 \n        /// 350 Replies = Active user - Gold Rank 4\n        //// 401+ Replies = Active User - ? Rank \n\n\n\n\n        //2 Topics Bronze 1 \n        //10 Bronze Rank 2 \n        //15  Bronze Rank 3 \n        //20 Bronze Rank 4 \n        // 25 Silver Rank 1 \n        // 35 Silver Rank 2 \n        // 50 silver Rank 3 \n        // 75 silver Rank 4  \n        // 100 Gold  Rank 1 \n        // 125 Gold Rank 2 \n        // 150 Gold Rank 3 \n        // 175 Gold Rank4 \n        // 200 Plat Rank1  \n        // 240 Plat Rank2 \n        // 275 plat Rank3 \n        // 300 plat Rank4 \n\n\n\n        //1st day bronze 1\n        //5day bronze 2\n        //20day bronze 3\n        //30day bronze 4\n        //50day silver 1\n        //100day silver 2\n        //120day silver 3\n        //150day silver 4\n        //200day gold 1\n        //225day gold 2\n        //250day gold 3\n        //275 day gold 4\n        //280 day platunum 1\n        //300day playinum 2\n        //330 day playinum 3\n        //350 day platinum 4\n\n\n        this.getDaysVisitedBadges = function() {\n\n            return ({\n\n                daysVisited: {\n\n                    bronze: {\n\n                        rankone: {\n                            Title: \"New Comer |\",\n                            Type: \"Bronze\",\n                            Rank: \"Rank1\",\n                            Days: 1,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"New Comer |\",\n                                        Type: \"Bronze\",\n                                        Rank: \"Rank1\",\n                                        Days: 1,\n                                    }\n                                }\n                            }\n\n                        },\n\n                        ranktwo: {\n\n                            Title: \"New Comer ||\",\n                            Type: \"Bronze\",\n                            Rank: \"Rank2\",\n                            Days: 5,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"New Comer ||\",\n                                        Type: \"Bronze\",\n                                        Rank: \"Rank2\",\n                                        Days: 5,\n                                    }\n                                }\n                            }\n\n                        },\n\n                        rankthree: {\n\n                            Title: \"New Comer |||\",\n                            Type: \"Bronze\",\n                            Rank: \"Rank3\",\n                            Days: 20,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"New Comer |||\",\n                                        Type: \"Bronze\",\n                                        Rank: \"Rank3\",\n                                        Days: 20,\n                                    }\n                                }\n                            }\n\n                        },\n\n                        rankfour: {\n\n                            Title: \"New Comer ||||\",\n                            Type: \"Bronze\",\n                            Rank: \"Rank4\",\n                            Days: 30,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"New Comer ||||\",\n                                        Type: \"Bronze\",\n                                        Rank: \"Rank4\",\n                                        Days: 30,\n                                    }\n                                }\n                            }\n\n                        },\n\n                    },\n                    silver: {\n\n                        rankone: {\n\n                            Title: \"Moderate Comer |\",\n                            Type: \"Silver\",\n                            Rank: \"Rank1\",\n                            Days: 50,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Moderate Comer |\",\n                                        Type: \"Silver\",\n                                        Rank: \"Rank1\",\n                                        Days: 50,\n                                    }\n                                }\n                            }\n\n                        },\n\n                        ranktwo: {\n\n                            Title: \"Moderate Comer ||\",\n                            Type: \"Silver\",\n                            Rank: \"Rank2\",\n                            Days: 100,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Moderate Comer ||\",\n                                        Type: \"Silver\",\n                                        Rank: \"Rank2\",\n                                        Days: 100,\n                                    }\n                                }\n                            }\n\n                        },\n\n                        rankthree: {\n\n                            Title: \"Moderate Comer |||\",\n                            Type: \"Silver\",\n                            Rank: \"Rank3\",\n                            Days: 120,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Moderate Comer |||\",\n                                        Type: \"Silver\",\n                                        Rank: \"Rank3\",\n                                        Days: 120,\n                                    }\n                                }\n                            }\n\n                        },\n\n                        rankfour: {\n\n                            Title: \"Moderate Comer ||||\",\n                            Type: \"Silver\",\n                            Rank: \"Rank4\",\n                            Days: 150,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Moderate Comer ||||\",\n                                        Type: \"Silver\",\n                                        Rank: \"Rank4\",\n                                        Days: 150,\n                                    }\n                                }\n                            }\n\n                        },\n\n                    },\n                    gold: {\n\n                        rankone: {\n\n                            Title: \"Welcome Back |\",\n                            Type: \"Gold\",\n                            Rank: \"Rank1\",\n                            Days: 200,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Welcome Back |\",\n                                        Type: \"Gold\",\n                                        Rank: \"Rank1\",\n                                        Days: 200,\n                                    }\n                                }\n                            }\n\n                        },\n\n                        ranktwo: {\n\n\n                            Title: \"Welcome Back ||\",\n                            Type: \"Gold\",\n                            Rank: \"Rank2\",\n                            Days: 225,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Welcome Back ||\",\n                                        Type: \"Gold\",\n                                        Rank: \"Rank2\",\n                                        Days: 225,\n                                    }\n                                }\n                            }\n\n                        },\n\n                        rankthree: {\n\n                            Title: \"Welcome Back |||\",\n                            Type: \"Gold\",\n                            Rank: \"Rank3\",\n                            Days: 250,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Welcome Back |||\",\n                                        Type: \"Gold\",\n                                        Rank: \"Rank3\",\n                                        Days: 250,\n                                    }\n                                }\n                            }\n\n                        },\n\n                        rankfour: {\n\n                            Title: \"Welcome Back ||||\",\n                            Type: \"Gold\",\n                            Rank: \"Rank4\",\n                            Days: 275,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Welcome Back ||||\",\n                                        Type: \"Gold\",\n                                        Rank: \"Rank4\",\n                                        Days: 275,\n                                    }\n                                }\n                            }\n\n                        },\n\n                    },\n                    platinum: {\n\n                        rankone: {\n\n                            Title: \"Oldie |\",\n                            Type: \"Platinum\",\n                            Rank: \"Rank1\",\n                            Days: 280,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Oldie |\",\n                                        Type: \"Platinum\",\n                                        Rank: \"Rank1\",\n                                        Days: 280,\n                                    }\n                                }\n                            }\n\n                        },\n\n                        ranktwo: {\n\n                            Title: \"Oldie ||\",\n                            Type: \"Platinum\",\n                            Rank: \"Rank2\",\n                            Days: 300,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Oldie ||\",\n                                        Type: \"Platinum\",\n                                        Rank: \"Rank2\",\n                                        Days: 300,\n                                    }\n                                }\n                            }\n\n\n                        },\n\n                        rankthree: {\n\n                            Title: \"Oldie |||\",\n                            Type: \"Platinum\",\n                            Rank: \"Rank3\",\n                            Days: 330,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Oldie |||\",\n                                        Type: \"Platinum\",\n                                        Rank: \"Rank3\",\n                                        Days: 330,\n                                    }\n                                }\n                            }\n\n\n                        },\n\n                        rankfour: {\n\n                            Title: \"Oldie ||||\",\n                            Type: \"Platinum\",\n                            Rank: \"Rank4\",\n                            Days: 350,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Oldie ||||\",\n                                        Type: \"Platinum\",\n                                        Rank: \"Rank4\",\n                                        Days: 350,\n                                    }\n                                }\n                            }\n\n\n                        },\n\n                    },\n\n                }\n            })\n\n        }\n\n\n        this.getTopicBadges = function() {\n            return ({\n                questionLover: {\n\n                    bronze: {\n                        rankone: {\n                            Title: \"Question Lover |\",\n                            Type: \"Bronze\",\n                            Rank: \"Rank1\",\n                            Topics: 2,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Question Lover |\",\n                                        Type: \"Bronze\",\n                                        Rank: \"Rank1\",\n                                        Topics: 2,\n                                    }\n                                }\n                            }\n                        },\n                        ranktwo: {\n\n                            Title: \"Question Lover ||\",\n                            Type: \"Bronze\",\n                            Rank: \"Rank2\",\n                            Topics: 10,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Question Lover ||\",\n                                        Type: \"Bronze\",\n                                        Rank: \"Rank2\",\n                                        Topics: 10,\n                                    }\n                                }\n                            },\n                        },\n                        rankthree: {\n                            Title: \"Question Lover |||\",\n                            Type: \"Bronze\",\n                            Rank: \"Rank2\",\n                            Topics: 15,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Question Lover |||\",\n                                        Type: \"Bronze\",\n                                        Rank: \"Rank3\",\n                                        Topics: 15,\n                                    }\n                                }\n                            },\n                        },\n                        rankfour: {\n                            Title: \"Question Lover ||||\",\n                            Type: \"Bronze\",\n                            Rank: \"Rank4\",\n                            Topics: 20,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Question Lover ||||\",\n                                        Type: \"Bronze\",\n                                        Rank: \"Rank4\",\n                                        Topics: 20,\n                                    }\n                                }\n\n                            }\n                        },\n                    },\n                    silver: {\n                        rankone: {\n\n                            Title: \"Questionare |\",\n                            Type: \"Silver\",\n                            Rank: \"Rank1\",\n                            Topics: 25,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Questionare |\",\n                                        Type: \"Silver\",\n                                        Rank: \"Rank1\",\n                                        Topics: 25,\n                                    }\n                                }\n\n                            }\n\n\n\n                        },\n                        ranktwo: {\n\n                            Title: \"Questionare ||\",\n                            Type: \"Silver\",\n                            Rank: \"Rank2\",\n                            Topics: 35,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Questionare ||\",\n                                        Type: \"Silver\",\n                                        Rank: \"Rank2\",\n                                        Topics: 35,\n                                    }\n                                }\n\n                            }\n\n                        },\n                        rankthree: {\n                            Title: \"Questionare |||\",\n                            Type: \"Silver\",\n                            Rank: \"Rank3\",\n                            Topics: 50,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Questionare |||\",\n                                        Type: \"Silver\",\n                                        Rank: \"Rank3\",\n                                        Topics: 50,\n                                    }\n                                }\n\n                            }\n                        },\n                        rankfour: {\n                            Title: \"Questionare ||||\",\n                            Type: \"Silver\",\n                            Rank: \"Rank4\",\n                            Topics: 75,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Questionare ||||\",\n                                        Type: \"Silver\",\n                                        Rank: \"Rank4\",\n                                        Topics: 75,\n                                    }\n                                }\n\n                            }\n\n                        }\n                    },\n                    gold: {\n                        rankone: {\n                            Title: \"Monsterous |\",\n                            Type: \"Gold\",\n                            Rank: \"Rank1\",\n                            Topics: 100,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Monsterous |\",\n                                        Type: \"Gold\",\n                                        Rank: \"Rank1\",\n                                        Topics: 100,\n                                    }\n                                }\n\n                            }\n                        },\n                        ranktwo: {\n                            Title: \"Monsterous ||\",\n                            Type: \"Gold\",\n                            Rank: \"Rank2\",\n                            Topics: 125,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Monsterous ||\",\n                                        Type: \"Gold\",\n                                        Rank: \"Rank2\",\n                                        Topics: 125,\n                                    }\n                                }\n\n                            }\n                        },\n                        rankthree: {\n                            Title: \"Monsterous |||\",\n                            Type: \"Gold\",\n                            Rank: \"Rank3\",\n                            Topics: 150,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Monsterous |||\",\n                                        Type: \"Gold\",\n                                        Rank: \"Rank3\",\n                                        Topics: 150,\n                                    }\n                                }\n                            }\n                        },\n                        rankfour: {\n                            Title: \"Monsterous ||||\",\n                            Type: \"Gold\",\n                            Rank: \"Rank4\",\n                            Topics: 175,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Monsterous ||||\",\n                                        Type: \"Gold\",\n                                        Rank: \"Rank4\",\n                                        Topics: 175,\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    platinum: {\n                        rankone: {\n                            Title: \"Crusher |\",\n                            Type: \"Platinum\",\n                            Rank: \"Rank1\",\n                            Topics: 200,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Crusher |\",\n                                        Type: \"Platinum\",\n                                        Rank: \"Rank1\",\n                                        Topics: 200,\n                                    }\n                                }\n                            }\n                        },\n                        ranktwo: {\n                            Title: \"Crusher ||\",\n                            Type: \"Platinum\",\n                            Rank: \"Rank2\",\n                            Topics: 240,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Crusher ||\",\n                                        Type: \"Platinum\",\n                                        Rank: \"Rank2\",\n                                        Topics: 240,\n                                    }\n                                }\n\n                            }\n\n                        },\n                        rankthree: {\n                            Title: \"Crusher |||\",\n                            Type: \"Platinum\",\n                            Rank: \"Rank3\",\n                            Topics: 275,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Crusher |||\",\n                                        Type: \"Platinum\",\n                                        Rank: \"Rank3\",\n                                        Topics: 275,\n                                    }\n                                }\n                            }\n                        },\n                        rankfour: {\n                            Title: \"Crusher ||||\",\n                            Type: \"Platinum\",\n                            Rank: \"Rank4\",\n                            Topics: 300,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Crusher ||||\",\n                                        Type: \"Platinum\",\n                                        Rank: \"Rank4\",\n                                        Topics: 300,\n                                    }\n                                }\n\n                            }\n\n                        }\n                    }\n\n\n                }\n            })\n        }\n\n        this.getReplyBadges = function() {\n            return ({\n                activeUser: {\n                    bronze: {\n                        rankone: {\n                            Title: \"Active User\",\n                            Type: \"Bronze\",\n                            Rank: \"Rank1\",\n                            Replies: 5,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Active User\",\n                                        Type: \"Bronze\",\n                                        Rank: \"Rank1\",\n                                        Replies: 5,\n                                    }\n                                }\n                            }\n                        },\n                        ranktwo: {\n                            Title: \"Active User\",\n                            Type: \"Bronze\",\n                            Rank: \"Rank2\",\n                            Replies: 25,\n                            pushObj: {\n                                activeUser: {\n                                    ranktwo: {\n                                        Title: \"Active User\",\n                                        Type: \"Bronze\",\n                                        Rank: \"Rank2\",\n                                        Replies: 25,\n                                    }\n                                }\n                            }\n                        },\n                        rankthree: {\n                            Title: \"Active User\",\n                            Type: \"Bronze\",\n                            Rank: \"Rank3\",\n                            Replies: 50,\n                            pushObj: {\n                                activeUser: {\n                                    rankthree: {\n                                        Title: \"Active User\",\n                                        Type: \"Bronze\",\n                                        Rank: \"Rank3\",\n                                        Replies: 50,\n                                    }\n                                }\n                            }\n                        },\n                        rankfour: {\n                            Title: \"Active User\",\n                            Type: \"Bronze\",\n                            Rank: \"Rank4\",\n                            Replies: 75,\n                            pushObj: {\n                                activeUser: {\n                                    rankfour: {\n                                        Title: \"Active User\",\n                                        Type: \"Bronze\",\n                                        Rank: \"Rank4\",\n                                        Replies: 75,\n                                    }\n                                }\n                            }\n                        },\n                    },\n                    silver: {\n                        rankone: {\n                            Title: \"Active User\",\n                            Type: \"Silver\",\n                            Rank: \"Rank1\",\n                            Replies: 100,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Active User\",\n                                        Type: \"Silver\",\n                                        Rank: \"Rank1\",\n                                        Replies: 100,\n                                    }\n                                }\n                            }\n                        },\n                        ranktwo: {\n                            Title: \"Active User\",\n                            Type: \"Silver\",\n                            Rank: \"Rank2\",\n                            Replies: 130,\n                            pushObj: {\n                                activeUser: {\n                                    ranktwo: {\n                                        Title: \"Active User\",\n                                        Type: \"Silver\",\n                                        Rank: \"Rank2\",\n                                        Replies: 130,\n                                    }\n                                }\n                            }\n                        },\n                        rankthree: {\n                            Title: \"Active User\",\n                            Type: \"Silver\",\n                            Rank: \"Rank3\",\n                            Replies: 165,\n                            pushObj: {\n                                activeUser: {\n                                    rankthree: {\n                                        Title: \"Active User\",\n                                        Type: \"Silver\",\n                                        Rank: \"Rank3\",\n                                        Replies: 165,\n                                    }\n                                }\n                            }\n                        },\n                        rankfour: {\n                            Title: \"Active User\",\n                            Type: \"Silver\",\n                            Rank: \"Rank4\",\n                            Replies: 215,\n                            pushObj: {\n                                activeUser: {\n                                    rankfour: {\n                                        Title: \"Active User\",\n                                        Type: \"Silver\",\n                                        Rank: \"Rank4\",\n                                        Replies: 215,\n                                    }\n                                }\n                            }\n                        },\n                    },\n                    gold: {\n                        rankone: {\n                            Title: \"Active User\",\n                            Type: \"Gold\",\n                            Rank: \"Rank1\",\n                            Replies: 235,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Active User\",\n                                        Type: \"Gold\",\n                                        Rank: \"Rank1\",\n                                        Replies: 235,\n                                    }\n                                }\n                            }\n                        },\n                        ranktwo: {\n                            Title: \"Active User\",\n                            Type: \"Gold\",\n                            Rank: \"Rank2\",\n                            Replies: 275,\n                            pushObj: {\n                                activeUser: {\n                                    ranktwo: {\n                                        Title: \"Active User\",\n                                        Type: \"Gold\",\n                                        Rank: \"Rank2\",\n                                        Replies: 275,\n                                    }\n                                }\n                            }\n                        },\n                        rankthree: {\n                            Title: \"Active User\",\n                            Type: \"Gold\",\n                            Rank: \"Rank3\",\n                            Replies: 315,\n                            pushObj: {\n                                activeUser: {\n                                    rankthree: {\n                                        Title: \"Active User\",\n                                        Type: \"Gold\",\n                                        Rank: \"Rank3\",\n                                        Replies: 315,\n                                    }\n                                }\n                            }\n                        },\n                        rankfour: {\n                            Title: \"Active User\",\n                            Type: \"Gold\",\n                            Rank: \"Rank4\",\n                            Replies: 350,\n                            pushObj: {\n                                activeUser: {\n                                    rankfour: {\n                                        Title: \"Active User\",\n                                        Type: \"Gold\",\n                                        Rank: \"Rank4\",\n                                        Replies: 350,\n                                    }\n                                }\n                            }\n                        },\n                    },\n                    platinum: {\n                        rankone: {\n                            Title: \"Active User\",\n                            Type: \"Platinum\",\n                            Rank: \"Rank1\",\n                            Replies: 401,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Active User\",\n                                        Type: \"Platinum\",\n                                        Rank: \"Rank1\",\n                                        Replies: 401,\n                                    }\n                                }\n                            }\n                        },\n                        ranktwo: {\n                            Title: \"Active User\",\n                            Type: \"Platinum\",\n                            Rank: \"Rank2\",\n                            Replies: 580,\n                            pushObj: {\n                                activeUser: {\n                                    ranktwo: {\n                                        Title: \"Active User\",\n                                        Type: \"Platinum\",\n                                        Rank: \"Rank2\",\n                                        Replies: 580,\n                                    }\n                                }\n                            }\n                        },\n                        rankthree: {\n                            Title: \"Active User\",\n                            Type: \"Platinum\",\n                            Rank: \"Rank3\",\n                            Replies: 1000,\n                            pushObj: {\n                                activeUser: {\n                                    rankthree: {\n                                        Title: \"Active User\",\n                                        Type: \"Platinum\",\n                                        Rank: \"Rank3\",\n                                        Replies: 1000,\n                                    }\n                                }\n                            }\n                        },\n                        rankfour: {\n                            Title: \"Active User\",\n                            Type: \"Platinum\",\n                            Rank: \"Rank4\",\n                            Replies: 5000,\n                            pushObj: {\n                                activeUser: {\n                                    rankfour: {\n                                        Title: \"Active User\",\n                                        Type: \"Platinum\",\n                                        Rank: \"Rank4\",\n                                        Replies: 5000,\n                                    }\n                                }\n                            }\n\n                        },\n                    }\n                }\n            })\n        }\n    }\n\n})(angular);\n(function(angular) {\n    var app = angular.module('ForumApp');\n\n    app.service('dateService', dateService)\n\n    function dateService() {\n        this.formatDate = function(date) {\n\n            switch (date) {\n                case (typeof date != 'object'):\n                    return null;\n                    break;\n\n                default:\n                    var year = date.getFullYear();\n                    var month = date.getUTCMonth();\n                    var day = date.getUTCDate();\n\n                    //month 2 digits\n                    month = (\"0\" + (month + 1)).slice(-2);\n\n                    //year 2 digits\n                    year = year.toString().substr(2, 2);\n\n                    var formattedDate = month + '/' + day + \"/\" + year;\n                      \n                      return formattedDate;\n\n            }\n\n\n\n        }\n    }\n})(angular);\n(function(){\n    var app = angular.module('ForumApp')\n    \n    app.service('editReplyService', [editReplyService])\n    \n    function editReplyService(){\n        this.topicCreatorName = null;\n        this.nonParsedDate = null;\n        this.topicCreatorUID = null;\n        this.pushK = null;\n        \n        this.setInfo = function(push,name,date,uid){\n            this.topicCreatorName = name;\n            this.nonParsedDate = date;\n            this.topicCreatorUID = uid;\n            this.pushK = push;\n        }\n        this.getName = function(){\n            return (this.topicCreatorName);\n        }\n        \n        this.getDatee = function(){\n            return (this.nonParsedDate);\n        }\n        \n        this.getTopicUID = function(){\n            return (this.topicCreatorUID);\n        }\n        this.getPushK = function(){\n            return (this.pushK);\n        }\n    }\n})(angular);\n(function(angular){\n    var app = angular.module('ForumApp');\n    \n    app.service('editTopicService', [ editTopicFuncService])\n    \n    function editTopicFuncService(){\n        this.dateCreated = null;\n        this.setDateCreated = function(value){\n            this.dateCreated = value;\n        }\n        this.getDateCreated = function(){\n            return (this.dateCreated);\n        }\n    }\n})(angular);\n(function(angular){\n    var app = angular.module('ForumApp');\n    \n    app.service('emojiListService', [emojiListFunc]);\n    \n    function emojiListFunc(){\n        String.prototype.replaceAt=function(index, character) {\n            return this.substr(0, index) + character + this.substr(index+character.length);\n        }\n        String.prototype.replaceAll = function(str1, str2, ignore) {\n            return this.replace(new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g,\"\\\\$&\"),(ignore?\"gi\":\"g\")),(typeof(str2)==\"string\")?str2.replace(/\\$/g,\"$$$$\"):str2);\n        } \n        this.currentRenderEmojies = function(valRend) {\n             valRend = valRend.replaceAll(':)', 'views/assets/emoji/emoji-E056.png');\n        }\n        this.getEmojies = function(){\n            return({\n            ':)': '<img src=\"assets/emoji/emoji-E056.png\"/>',\n            ':smile:': '<img src=\"assets/emoji/emoji-E056.png\"/>',\n            ':(': '<img src=\"assets/emoji/emoji-E058.png\"/> ',\n            ':sad:': '<img src=\"assets/emoji/emoji-E058.png\"/> ',\n            ':D': '<img src=\"assets/emoji/emoji-E415.png\"/> ',\n            ':smiley:': '<img src=\"assets/emoji/emoji-E415.png\"/> ',\n            ':;': '<img src=\"assets/emoji/emoji-E057.png\"/> ',\n            ':very_happy:': '<img src=\"assets/emoji/emoji-E057.png\"/> ',\n            ':P': '<img src=\"assets/emoji/emoji-E105.png\"/> ',\n            ':tounge_stuck_out:': '<img src=\"assets/emoji/emoji-E105.png\"/> ',\n            ':X': '<img src=\"assets/emoji/emoji-E40C.png\"/>',\n            ':cant_talk:': '<img src=\"assets/emoji/emoji-E40C.png\"/>',\n            'xD': '<img src=\"assets/emoji/emoji-E770.png\"/>',\n            ':laugh_dang:' : '<img src=\"assets/emoji/emoji-E770.png\"/>',\n            '-1': '<img src=\"assets/emoji/emoji-E421.png\"/>',\n            ':minus_one:': '<img src=\"assets/emoji/emoji-E421.png\"/>',\n            '+1': '<img src=\"assets/emoji/emoji-E00E.png\"/>',\n            ':plus_one:': '<img src=\"assets/emoji/emoji-E00E.png\"/>'\n          })\n        }\n    }\n})(angular);\n(function(){\n    angular \n           .module('ForumApp')\n           .service('emojieTool', [emojieToolfunc])\n           \n           function emojieToolfunc() {\n                   this.elementInfo = null;\n                   this.setElementInfo = function(elem){\n                       this.elementInfo = elem;\n                   }\n                   this.getElementInfo = function(){\n                       return(this.elementInfo);\n                   }\n                   this.resetElementInfo = function(){\n                       this.elementInfo = null;\n                   }\n           }\n})(angular);\n\n(function(angular) {\n    var app = angular.module('ForumApp')\n\n    app.service('encodeImageToBase64', ['replyService', encodeImageToBase64]);\n    \n    function b64toBlob(b64, onsuccess, onerror) {\n    var img = new Image();\n\n    img.onerror = onerror;\n\n    img.onload = function onload() {\n        var canvas = document.createElement('canvas');\n        canvas.width = img.width;\n        canvas.height = img.height;\n\n        var ctx = canvas.getContext('2d');\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n        canvas.toBlob(onsuccess);\n    };\n\n    img.src = b64;\n}\n\n    function encodeImageToBase64(replyService) {\n\n        this.encode = function(document, file, ref, UID) {\n\n            if (file.length > 0) {\n                var fileToLoad = file[0];\n                var fileReader = new FileReader();\n\n                fileReader.onload = function(fileLoadedEvent) {\n                    var srcData = fileLoadedEvent.target.result; // <--- data: base64\n                   \n\n\nb64toBlob(srcData,\n    function(blob) {\n        var url = window.URL.createObjectURL(blob);\n        \n        ref.child(\"UserAuthInfo\").child(UID).update({\n                              Image: srcData\n                     })\n                     ref.child(\"Topics\").once(\"value\", function(snapshot) {\n\n                         snapshot.forEach(function(childSnapshot) {\n                             var key = childSnapshot.key();\n                             var childData = childSnapshot.val();\n                             if (childData.UID == UID) {\n                                 ref.child(\"Topics\").child(childData.pushKey).update({\n                                     Avatar: srcData\n                                 })\n                             }\n                         })\n                     })\n                    \n                     ref.child(\"Replies\").once(\"value\", function(snapshot) {\n\n                         snapshot.forEach(function(childSnapshot) {\n                             var key = childSnapshot.key();\n                             var childData = childSnapshot.val();\n                             childSnapshot.forEach(function(EvenChild){\n                                 var keyNest = EvenChild.key();\n                                 var childDataNest = EvenChild.val();\n                                 if(childDataNest.replyCreatorUID == UID){\n                                   ref.child(\"Replies\").child(key).child(childDataNest.pushKey).update\n                                     ({\n                                         replyCreatorAvatar : srcData                   \n                                     })\n                                 }\n                             })\n                         })\n                     })\n        \n        \n    }, function(error) {\n        // handle error\n    });\n                    return srcData;\n                }\n\n                fileReader.readAsDataURL(fileToLoad);\n            }\n\n        }\n\n    }\n})(angular);\n(function(angular){\n    \n    var app = angular.module('ForumApp')\n    \n    app.service('letterAvatarService', ['$http',letterAvatarServiceFunc])\n    \n    function letterAvatarServiceFunc($http){\n        \n        this.letters = {\n\t\"letters\": {\n\n\t\t\"a\": {\n\t\t\t\"letter\": \"A\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/80702e6a48.png\"\n\t\t},\n\n\t\t\"b\": {\n\t\t\t\"letter\": \"B\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/8071bc0a44.png\"\n\t\t},\n\n\t\t\"c\": {\n\t\t\t\"letter\": \"C\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/8074bcecd7.png\"\n\t\t},\n\n\t\t\"d\": {\n\t\t\t\"letter\": \"D\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/8076021adb.png\"\n\t\t},\n\n\t\t\"e\": {\n\t\t\t\"letter\": \"E\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/8076c1e58c.png\"\n\t\t},\n\n\t\t\"f\": {\n\t\t\t\"letter\": \"F\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/8077d37398.png\"\n\t\t},\n\t\t\"g\": {\n\t\t\t\"letter\": \"G\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/8078c68317.png\"\n\t\t},\n\t\t\"h\": {\n\t\t\t\"letter\": \"H\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/807961a8bd.png\"\n\t\t},\n\t\t\"i\": {\n\t\t\t\"letter\": \"I\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/8079fcc67d.png\"\n\t\t},\n\t\t\"j\": {\n\t\t\t\"letter\": \"J\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/807a8d7f0f.png\"\n\t\t},\n\t\t\"k\": {\n\t\t\t\"letter\": \"K\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/807b86c6f3.png\"\n\t\t},\n\t\t\"l\": {\n\t\t\t\"letter\": \"L\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/807c95d97d.png\"\n\t\t},\n\t\t\"m\": {\n\t\t\t\"letter\": \"M\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/807e3ac2d8.png\"\n\t\t},\n\t\t\"n\": {\n\t\t\t\"letter\": \"N\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/807f4f28f3.png\"\n\t\t},\n\t\t\"o\": {\n\t\t\t\"letter\": \"O\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/80804f11ee.png\"\n\t\t},\n\t\t\"p\": {\n\t\t\t\"letter\": \"P\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/808141e6d7.png\"\n\t\t},\n\t\t\"q\": {\n\t\t\t\"letter\": \"Q\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/8081fc5643.png\"\n\t\t},\n\t\t\"r\": {\n\t\t\t\"letter\": \"R\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/8082bc920e.png\"\n\t\t},\n\t\t\"s\": {\n\t\t\t\"letter\": \"S\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/808407a7c8.png\"\n\t\t},\n\t\t\"t\": {\n\t\t\t\"letter\": \"T\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/80850ef5bc.png\"\n\t\t},\n\t\t\"u\": {\n\t\t\t\"letter\": \"U\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/8085d081ef.png\"\n\t\t},\n\t\t\"v\": {\n\t\t\t\"letter\": \"V\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/8086a80704.png\"\n\t\t},\n\t\t\"w\": {\n\t\t\t\"letter\": \"W\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/80876e07ac.png\"\n\t\t},\n\t\t\"x\": {\n\t\t\t\"letter\": \"X\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/808811fc04.png\"\n\t\t},\n\t\t\"y\": {\n\t\t\t\"letter\": \"Y\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/8088daddd7.png\"\n\t\t},\n\t\t\"z\": {\n\t\t\t\"letter\": \"Z\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/8089ce1ead.png\"\n\t\t}\n\n\t},\n\n\t\"numbers\": {\n\n\t\t\"0\": {\n\t\t\t\"number\": \"0\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/808b5e9427.png\"\n\t\t},\n\t\t\"1\": {\n\t\t\t\"number\": \"1\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/808c31726a.png\"\n\t\t},\n\t\t\"2\": {\n\t\t\t\"number\": \"2\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/808e69280f.png\"\n\t\t},\n\t\t\"3\": {\n\t\t\t\"number\": \"3\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/808f82b8e4.png\"\n\t\t},\n\t\t\"4\": {\n\t\t\t\"number\": \"4\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/8090c37df7.png\"\n\t\t},\n\t\t\"5\": {\n\t\t\t\"number\": \"5\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/809177bd5e.png\"\n\t\t},\n\t\t\"6\": {\n\t\t\t\"number\": \"6\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/809295a3dc.png\"\n\t\t},\n\t\t\"7\": {\n\t\t\t\"number\": \"7\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/80938a0f43.png\"\n\t\t},\n\t\t\"8\": {\n\t\t\t\"number\": \"8\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/809490f006.png\"\n\t\t},\n\t\t\"9\": {\n\t\t\t\"number\": \"9\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/8095cb42bd.png\"\n\t\t}\n\n\t},\n\n\t\"Mystery\": \"https://i.imgsafe.org/80971f0be0.png\"\n};\n          \n            \n            \n        this.loadJSON = function(){\n            $http.get('services/assets/json/letterJSON.json').then(function(value) {\n                this.letters = value.data\n            })\n        }    \n        \n        this.logLetter = function(){\n            console.log(this.letters);\n        }\n        this.getLetterURL = function(string,loaderData){\n            \n                  var char = string.charAt(0);\n                    var len = 0;\n                    var lenNum = 0;\n                    var URLVALUE = '';\n                    \n                    for(var i in this.letters.letters){\n                        len++;\n                        if(i == (char.toLowerCase())){\n                            URLVALUE = this.letters.letters[i].URL;\n                        }\n                    }\n                    \n                    for(var i in this.letters.numbers){\n                        lenNum++;\n                        if(i == (char)){\n                            URLVALUE = this.letters.numbers[i].URL;\n                        }\n                    }\n                    \n                    if(!URLVALUE){\n                        URLVALUE = this.letters.Mystery\n                    }\n                    \n                    return URLVALUE;\n            \n            \n            \n\n        }    \n    \n    }\n})(angular);\n(function(angular){\n    var app = angular.module('ForumApp')\n    \n    app.service('loadingService', [loadingServiceFunc])\n    \n    function loadingServiceFunc() {\n        this.loadingTo = null;\n        this.setLoadingTo = function(value) {\n            this.loadingTo = value;\n        }\n        this.getLoadingTo = function() {\n            return (this.loadingTo);\n        }\n    }\n})(angular);\n(function(){\n    var app = angular.module('ForumApp')\n    \n    app.service('otherUserProfilePageService', [otherUserProfilePageServicefunc])\n    \n    function otherUserProfilePageServicefunc(){\n        this.otherUserID = ''\n        \n        this.setID = function(ID){\n            this.otherUserID = ID;\n        }\n        \n        this.getID = function(){\n            return (this.otherUserID);\n        }\n    }\n})(angular);\n(function(angular) {\n    var app = angular.module('ForumApp')\n\n    app.service('otherUserService', [refService])\n    \n    function refService(){\n        this.otherUserInfo = null;\n        this.otherACTUALINFO = null;\n        this.setUserInfo = function(info){\n            this.otherUserInfo = info;\n        }\n        this.getUserInfo = function(){\n            return (this.otherUserInfo);\n        }\n        this.ACTUALsetUserInfo = function(info){\n            this.otherACTUALINFO = info;\n        }\n        this.ACTUALgetUserInfo = function(){\n            return (this.otherACTUALINFO);\n        }\n    }\n})(angular);\n(function(angular) {\n    var app = angular.module('ForumApp')\n\n    app.service('refService', [\"$firebaseAuth\", refService])\n    \n    function refService($firebaseAuth){\n        this.ref = function() {\n            return new Firebase('https://uniquecodersforums.firebaseio.com/');\n        }\n        this.refAuth = function() {\n            return $firebaseAuth(this.ref());\n        }\n    \n    }\n})(angular);\n(function(angular){\n    'use strict';\n    \n    var app = angular.module('ForumApp')\n    \n    app.service('replaceService', [replaceServicefunc])\n    \n    function replaceServicefunc(){\n        this.replaceAllString = function(str1, str2, ignore) {\n                 return this.replace(new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g,\"\\\\$&\"),(ignore?\"gi\":\"g\")),(typeof(str2)==\"string\")?str2.replace(/\\$/g,\"$$$$\"):str2);\n            } \n    }\n})(angular);\n(function(angular){\r\n    var app = angular.module('ForumApp')\r\n\r\n    app.service('replyService', [replyService])\r\n    function replyService(){\r\n        this.topicTitle = \"\";\r\n        this.creatorTitle = \"\";\r\n        this.creatorUID = \"\"\r\n        this.creatorUsername = \"\"\r\n        this.creatorValue = \"\"\r\n        this.creatorDate = \"\"\r\n        this.creatorAvatar = \"\";\r\n        this.creatorEmail = \"\"\r\n        this.timeSinceCreated = \"\";\r\n        this.postNum = \"\"\r\n        this.setTopicInfo = function(title,creator,uid,username,value,date,email,since,avatar,postNum){\r\n            this.topicTitle = title;\r\n            this.creatorTitle = creator;\r\n            this.creatorUID = uid;\r\n            this.creatorUsername = username;\r\n            this.creatorValue = value;\r\n            this.creatorDate = date;\r\n            this.creatorEmail = email;\r\n            this.timeSinceCreated = since;\r\n            this.creatorAvatar = avatar;\r\n            this.postNum = postNum;\r\n            return title,creator,uid,username,value,date,email,since;\r\n        }\r\n        this.getTopicInfo = function () {\r\n            return this.topicTitle,this.creatorTitle,\r\n                   this.creatorUID,this.creatorUsername,\r\n                   this.creatorValue,this.creatorDate,\r\n                   this.creatorEmail,this.timeSinceCreated\r\n                   this.creatorAvatar,this.postNum;\r\n        }\r\n    }\r\n})(angular);\n(function(angular) {\n    var app = angular.module('ForumApp')\n    app.service('timeService', [timeService])\n\n    function timeService() {\n        this.getTimeF = function(time) {\n            switch (typeof time) {\n                case 'number':\n                    break;\n                case 'string':\n                    time = +new Date(time);\n                    break;\n                case 'object':\n                    if (time.constructor === Date) time = time.getTime();\n                    break;\n                default:\n                    time = +new Date();\n            }\n            var time_formats = [\n                [60, 'seconds', 1], // 60\n                [120, '1 min ago', '1 min from now'], // 60*2\n                [3600, 'min', 60], // 60*60, 60\n                [7200, '1h ago', '1h from now'], // 60*60*2\n                [86400, 'h', 3600], // 60*60*24, 60*60\n                [172800, 'Yesterday', 'Tomorrow'], // 60*60*24*2\n                [604800, 'days', 86400], // 60*60*24*7, 60*60*24\n                [1209600, 'Last week', 'Next week'], // 60*60*24*7*4*2\n                [2419200, 'weeks', 604800], // 60*60*24*7*4, 60*60*24*7\n                [4838400, 'Last month', 'Next month'], // 60*60*24*7*4*2\n                [29030400, 'months', 2419200], // 60*60*24*7*4*12, 60*60*24*7*4\n                [58060800, 'Last year', 'Next year'], // 60*60*24*7*4*12*2\n                [2903040000, 'years', 29030400], // 60*60*24*7*4*12*100, 60*60*24*7*4*12\n                [5806080000, 'Last century', 'Next century'], // 60*60*24*7*4*12*100*2\n                [58060800000, 'centuries', 2903040000] // 60*60*24*7*4*12*100*20, 60*60*24*7*4*12*100\n            ];\n            var seconds = (+new Date() - time) / 1000,\n                token = 'ago',\n                list_choice = 1;\n\n            if (seconds == 0) {\n                return 'Just now'\n            }\n            if (seconds < 0) {\n                seconds = Math.abs(seconds);\n                token = 'from now';\n                list_choice = 2;\n            }\n            var i = 0,\n                format;\n            while (format = time_formats[i++])\n                if (seconds < format[0]) {\n                    if (typeof format[2] == 'string')\n                        return format[list_choice];\n                    else\n                        return Math.floor(seconds / format[2]) + ' ' + format[1] + ' ' + token;\n                }\n            return time;\n        }\n\n        this.getTimeS = function(date) {\n\n            var seconds = Math.floor((new Date() - date) / 1000);\n\n            var interval = Math.floor(seconds / 31536000);\n\n            if (interval > 1) {\n                return interval + \" years\";\n            }\n            interval = Math.floor(seconds / 2592000);\n            if (interval > 1) {\n                return interval + \" months\";\n            }\n            interval = Math.floor(seconds / 86400);\n            if (interval > 1) {\n                return interval + \" days\";\n            }\n            interval = Math.floor(seconds / 3600);\n            if (interval > 1) {\n                return interval + \" hours\";\n            }\n            interval = Math.floor(seconds / 60);\n            if (interval > 1) {\n                return interval + \" minutes\";\n            }\n            return Math.floor(seconds) + \" seconds\";\n        }\n    }\n})(angular);\n(function(){\n    'use strict';\n    \n        angular\n               .module('ForumApp')\n               .service('topicLikesService', [topicLikesServiceFunc])\n               \n               function topicLikesServiceFunc(){\n                   this.info = [];\n                   \n                   this.setInfo = function(info1, info2){\n                       this.info.push(info1);\n                       this.info.push(info2);\n                   }\n                   \n                   this.resetInfo = function(){\n                       this.info = [];\n                   }\n                   \n                   this.getInfo = function() {\n                       return (this.info);\n                   }\n                   \n                   this.getInfo1 = function(){\n                     return (this.info[0]);   \n                   }\n                   this.getInfo2 = function(){\n                     return (this.info[1]);   \n                   }\n               }\n})(angular);\n(function(angular){\n   \n   'use strict';\n   \nangular\n\n   .module('ForumApp')\n   .controller('404Controller', [\"$scope\", ErrControllerFunc])\n   \n   function ErrControllerFunc($scope){\n       \n   }\n    \n})(angular);\n(function(angular) {\n\n    'use strict';\n    \n    angular\n            .module('ForumApp')\n            .controller('authCtrl', [\"$scope\", \"$state\", \"refService\", \"$firebaseObject\", \"authCheckTrueService\", \"$firebaseArray\", \"$http\", \"$mdDialog\", \"letterAvatarService\", authCtrl]);\n\n    function authCtrl($scope, $state, refService, $firebaseObject, authCheckTrueService, $firebaseArray, $http, $mdDialog, letterAvatarService) {\n        $scope.loadImageJSON = 'NOTLOADED';\n        authCheckTrueService.checkAuth(refService.ref(), \"authHome.desc\");\n\n        function PASSWORDRESET(length) {\n            var possibleChars = ['abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!?_-'];\n            var password = '';\n            for (var i = 0; i < length; i += 1) {\n                password += possibleChars[Math.floor(Math.random() * possibleChars.length)];\n            }\n            return password;\n        }\n\n\n        $scope.toggleClass = function() {\n            $scope.enabled = true;\n        }\n        $scope.close = function() {\n            $scope.enabled = false;\n        }\n\n\n        $scope.forgotPass = function() {\n            alertify.prompt(\n                'Recover Password',\n                'Enter Email Of Account',\n                function(evt, value) {\n                    refService.ref().resetPassword({\n                        email: value\n                    }, function(error) {\n                        if (error) {\n                            switch (error.code) {\n                                case \"INVALID_USER\":\n                                    alertify.error(\"The specified user account does not exist.\");\n                                    break;\n                                default:\n                                    alertify.error(\"Error resetting password:\" + error);\n                            }\n                        }\n                        else {\n                            alertify.success(\"Password reset email sent successfully!\");\n                        }\n                    });\n                }\n            );\n        }\n        \n         $scope.oAuthLogin = function(provider) {\n\n            refService.ref().authWithOAuthPopup(provider, function(error, authData) {\n                if (error) {\n                    alertify.error(\"Log in Failed. See Console for more details\");\n                    console.error(\"ERROR LOGIN : \" + error);\n                    refService.ref().unauth();\n                }\n                else {\n\n                    var usernames = $firebaseArray(refService.ref().child(\"UserAuthInfo\"));\n                    refService.ref().child(\"UserAuthInfo\").child(authData.uid).once(\"value\", function(snapLog) {\n\n                        if (snapLog.val() == null) {\n                            // alertify.error(\"You Havent Signed Up With That Provider! Try Registering That Provider First!\");\n                            vex.dialog.prompt({\n                                message: 'What Email Do you want?',\n                                placeholder: 'Email...',\n                                callback: function(email) {\n\n                                    usernames.$loaded(function(data) {\n                                        for (var i = 0; i < data.length; i++) {\n\n                                            if (data[i].Username == authData[provider].username) {\n                                                $scope.isDupe = true;\n                                                break;\n                                            }\n                                        }\n\n                                        if ($scope.isDupe != true) {\n\n                                            refService.ref().createUser({\n                                                email: email,\n                                                password: PASSWORDRESET(16)\n                                            }, function(error, userData) {\n                                                if (error) {\n                                                    switch (error.code) {\n                                                        case \"EMAIL_TAKEN\":\n                                                            alertify.error(\"The new user account cannot be created because the email is already in use.\");\n                                                            break;\n                                                        case \"INVALID_EMAIL\":\n                                                            alertify.error(\"The specified email is not a valid email.\");\n                                                            break;\n                                                        default:\n                                                            alertify.error(\"Error creating user:\", error);\n                                                    }\n                                                }\n                                                else {\n\n                                                    if (provider == 'twitter' || provider == 'google') {\n\n                                                        if (provider == 'google') {\n                                                            refService.ref().child(\"UserAuthInfo\").child(authData.uid).set({\n                                                                Username: authData[provider].displayName,\n                                                                Email: email,\n                                                                UID: authData.uid,\n                                                                Image: authData[provider].profileImageURL,\n                                                                Moderator: false,\n                                                                BronzeBadge: 0,\n                                                                SilverBadge: 0,\n                                                                GoldBadge: 0,\n                                                                PlatinumBadge: 0,\n                                                                newUser: true,\n                                                                profileBackground: 'http://cine.nl/wp-content/uploads/2015/07/the-revenant-trailer.jpg',\n                                                                followers: 0,\n                                                                following: 0,\n                                                                profileViews: 0,\n                                                                Precence: -1,\n                                                                Points : 0,\n                                                                DateJoined : Date.now(),\n                                                            })\n                                                            alertify.success(\"Sucessfully Reistered. Login Now!\");\n                                                            refService.ref().unauth();\n                                                        }\n                                                        else {\n                                                            refService.ref().child(\"UserAuthInfo\").child(authData.uid).set({\n                                                                Username: authData[provider].username,\n                                                                Email: email,\n                                                                UID: authData.uid,\n                                                                Image: authData[provider].profileImageURL,\n                                                                Moderator: false,\n                                                                BronzeBadge: 0,\n                                                                SilverBadge: 0,\n                                                                GoldBadge: 0,\n                                                                PlatinumBadge: 0,\n                                                                newUser: true,\n                                                                profileBackground: authData[provider].cachedUserProfile.profile_background_image_url_https,\n                                                                followers: 0,\n                                                                following: 0,\n                                                                profileViews: 0,\n                                                                Precence: -1,\n                                                                Points : 0,\n                                                                DateJoined : Date.now(),\n                                                            })\n                                                            alertify.success(\"Sucessfully Reistered. Login Now!\");\n                                                            refService.ref().unauth();\n                                                        }\n                                                    }\n                                                    else {\n                                                        refService.ref().child(\"UserAuthInfo\").child(authData.uid).set({\n                                                            Username: authData[provider].username,\n                                                            Email: email,\n                                                            UID: authData.uid,\n                                                            Image: authData[provider].profileImageURL,\n                                                            Moderator: false,\n                                                            BronzeBadge: 0,\n                                                            SilverBadge: 0,\n                                                            GoldBadge: 0,\n                                                            PlatinumBadge: 0,\n                                                            newUser: true,\n                                                            profileBackground: 'http://cine.nl/wp-content/uploads/2015/07/the-revenant-trailer.jpg',\n                                                            followers: 0,\n                                                            following: 0,\n                                                            profileViews: 0,\n                                                            Precence: -1,\n                                                            Points : 0,\n                                                            DateJoined : Date.now(),\n                                                        })\n                                                        alertify.success(\"Sucessfully Reistered. Login Now!\");\n                                                        refService.ref().unauth();\n                                                    }\n\n\n                                                }\n                                            })\n\n                                        }\n                                        else {\n\n                                            vex.dialog.prompt({\n                                                message: 'Username is a duplicate. Please Choose another one.',\n                                                placeholder: 'Username..',\n                                                callback: function(username) {\n                                                    for (var i = 0; i < data.length; i++) {\n\n                                                        if (data[i].Username == username) {\n                                                            $scope.isUsernameDupeNested = true;\n                                                            break;\n                                                        }\n                                                    }\n\n                                                    if ($scope.isUsernameDupeNested == false) {\n                                                        refService.ref().createUser({\n                                                            email: email,\n                                                            password: PASSWORDRESET(16)\n                                                        }, function(error, userData) {\n                                                            if (error) {\n                                                                switch (error.code) {\n                                                                    case \"EMAIL_TAKEN\":\n                                                                        alertify.error(\"The new user account cannot be created because the email is already in use.\");\n                                                                        break;\n                                                                    case \"INVALID_EMAIL\":\n                                                                        alertify.error(\"The specified email is not a valid email.\");\n                                                                        break;\n                                                                    default:\n                                                                        alertify.error(\"Error creating user:\", error);\n                                                                }\n                                                            }\n                                                            else {\n\n                                                                if (provider == 'google') {\n                                                                    refService.ref().child(\"UserAuthInfo\").child(authData.uid).set({\n                                                                        Username: authData[provider].displayName,\n                                                                        Email: email,\n                                                                        UID: authData.uid,\n                                                                        Image: authData[provider].profileImageURL,\n                                                                        Moderator: false,\n                                                                        BronzeBadge: 0,\n                                                                        SilverBadge: 0,\n                                                                        GoldBadge: 0,\n                                                                        PlatinumBadge: 0,\n                                                                        newUser: true,\n                                                                        profileBackground: 'http://cine.nl/wp-content/uploads/2015/07/the-revenant-trailer.jpg',\n                                                                        followers: 0,\n                                                                        following: 0,\n                                                                        profileViews: 0,\n                                                                        Precence: -1,\n                                                                        Points : 0,\n                                                                        DateJoined : Date.now(),\n                                                                    })\n                                                                    alertify.success(\"Sucessfully Reistered. Login Now!\");\n                                                                    refService.ref().unauth();\n                                                                }\n                                                                else {\n                                                                    refService.ref().child(\"UserAuthInfo\").child(authData.uid).set({\n                                                                        Username: authData[provider].username,\n                                                                        Email: email,\n                                                                        UID: authData.uid,\n                                                                        Image: authData[provider].profileImageURL,\n                                                                        Moderator: false,\n                                                                        BronzeBadge: 0,\n                                                                        SilverBadge: 0,\n                                                                        GoldBadge: 0,\n                                                                        PlatinumBadge: 0,\n                                                                        newUser: true,\n                                                                        profileBackground: authData[provider].cachedUserProfile.profile_background_image_url_https,\n                                                                        followers: 0,\n                                                                        following: 0,\n                                                                        profileViews: 0,\n                                                                        Precence: -1,\n                                                                        Points : 0,\n                                                                        DateJoined : Date.now(),\n                                                                    })\n                                                                    alertify.success(\"Sucessfully Reistered. Login Now!\");\n                                                                    refService.ref().unauth();\n                                                                }\n\n                                                            }\n                                                        })\n                                                    }\n                                                    else {\n                                                        alertify.error(\"The username you entered is another dupe... Refresh will be made soon. Please Give a Unique Username next time you register.\")\n                                                        refService.ref().unauth();\n                                                        setTimeout(function() {\n                                                            location.reload(true);\n                                                        }, 10000)\n                                                    }\n\n\n\n                                                }\n                                            })\n\n\n\n                                        }\n                                    });\n\n\n                                }\n\n\n                            })\n\n\n\n                        }\n                        else {\n\n                            alertify.success(\"Sucessfully Logged In!\");\n                            $state.go('authHome.desc');\n\n                        }\n\n                    })\n\n\n\n                }\n            });\n        }\n        $scope.loginAUTH = function() {\n            refService.ref().authWithPassword({\n                \"email\": $scope.user.email,\n                \"password\": $scope.user.password\n            }, function(error, authData) {\n                if (error) {\n                    alertify.error(\"Unsucessfull Authentication. See console for details\")\n                    console.error(error);\n                }\n                else {\n                    alertify.success(\"Sucessfull Authentication\");\n                    $state.go('authHome')\n                }\n            });\n        }\n\n\n\n        $scope.regissterForm = function() {\n\n            $scope.isUsernameDupe = false;\n            refService.ref().child(\"UserAuthInfo\").on(\"value\", function(snapshot) {\n                snapshot.forEach(function(childSNap) {\n\n                    var key = childSNap.key();\n                    var childData = childSNap.val();\n\n                    if (childData.Username == $scope.register.username) {\n                        $scope.isUsernameDupe = true;\n                        return;\n                    }\n                })\n                if (($scope.isUsernameDupe != true)) {\n                    if ($scope.isUsernameDupe == false) {\n                        refService.ref().createUser({\n                            email: $scope.register.email,\n                            password: $scope.register.password\n                        }, function(error, userData) {\n                            if (error) {\n                                switch (error.code) {\n                                    case \"EMAIL_TAKEN\":\n                                        alertify.error(\"The new user account cannot be created because the email is already in use.\");\n                                        break;\n                                    case \"INVALID_EMAIL\":\n                                        alertify.error(\"The specified email is not a valid email.\");\n                                        break;\n                                    default:\n                                        alertify.error(\"Error creating user:\", error);\n                                }\n                            }\n                            else {\n                                $scope.$evalAsync(\n                                    function() {\n                                        var letterAvatar = letterAvatarService.getLetterURL($scope.register.username, $scope.loadImageJSON);\n                                        setTimeout(function() {\n                                            refService.ref().child(\"UserAuthInfo\").child(userData.uid).set({\n                                                Username: $scope.register.username,\n                                                Email: $scope.register.email,\n                                                UID: userData.uid,\n                                                Image: letterAvatarService.getLetterURL($scope.register.username),\n                                                Moderator: false,\n                                                BronzeBadge: 0,\n                                                SilverBadge: 0,\n                                                GoldBadge: 0,\n                                                PlatinumBadge: 0,\n                                                newUser: true,\n                                                profileBackground: 'http://rmdeaftheatre.com/wp-content/uploads/2012/11/gray-background-3.jpg',\n                                                followers: 0,\n                                                following: 0,\n                                                profileViews: 0,\n                                                Precence: -1,\n                                                Points : 0,\n                                                DateJoined : Date.now(),\n                                            });\n\n                                        }, 1500)\n\n                                        alertify.success(\"Sucessfully Registered\")\n                                    }\n                                );\n\n                            }\n                        });\n                    }\n\n                }\n                else {\n                    alertify.error(\"Username already in use. If you see a green sign above saying You sucessfully registered. Dont worry about this\");\n                }\n            })\n\n\n\n\n        }\n\n        $scope.setResponse = function() {\n\n            $mdDialog.show(\n                $mdDialog.alert()\n                .clickOutsideToClose(true)\n                .title('Sucess')\n                .textContent('Recaptcha Submited Sucessfully')\n                .ariaLabel('Offscreen Demo')\n                .ok('Redirecting...')\n                .openFrom({\n                    top: -50,\n                    width: 30,\n                    height: 80\n                })\n                .closeTo({\n                    left: 1500\n                })\n            );\n            setTimeout(function() {\n                $mdDialog.cancel();\n            }, 1000);\n        }\n\n    }\n\n})(angular);\n(function(angular) {\n    \n    'use strict';\n    \n    angular\n           .module('ForumApp')\n           .controller('authDescCtrl', [\"$scope\", \"dateFilter\", \"$mdDialog\", \"$state\", \"$mdMedia\", \"$mdBottomSheet\", \"$firebaseObject\", \"refService\", \"$timeout\", \"$firebaseArray\", authDescCtrl])\n\n    function authDescCtrl($scope, dateFilter, $mdDialog, $state, $mdMedia, $mdBottomSheet, $firebaseObject, refService, $timeout, $firebaseArray) {\n\n        $scope.authDataDesc = refService.ref().getAuth();\n\n        $scope.topic = $firebaseObject(refService.ref().child(\"Topics\"))\n        $scope.topicName = $firebaseArray(refService.ref().child(\"Topics\"))\n        $scope.topicViewsLen = [];\n\n\n        //Setting Views\n        $scope.topicName.$loaded(function(data) {\n            data.forEach(function(dataChild) {\n                var x = dataChild.Views;\n                var len = 0;\n                for (var i in dataChild.Views) {\n                    len++;\n                }\n                $scope.topicViewsLen.push(len);\n            })\n            var times = 0;\n            data.forEach(function(dataChild) {\n                refService.ref().child(\"Topics\").child(dataChild.pushKey).update({\n                    ViewsLen: $scope.topicViewsLen[times]\n                })\n                times++;\n \n            })\n        })\n        \n       \n        \n        function bookmarked(rep){\n            var returne = \"False\"\n                refService.ref().child(\"Topics\").once(\"value\", function(snapshotBookMarkOutlineTopic) {\n                        snapshotBookMarkOutlineTopic.forEach(function(evenChildBook) {\n                                var bookkey = evenChildBook.key();\n                                var bookchildData = evenChildBook.val();\n                                if(bookchildData.Bookmarks) {\n                                    if(bookchildData.Bookmarks[$scope.authDataDesc.uid].Bookmark == true)\n                                        returne = \"True\"\n                                }\n                        })\n                })\n            return returne;\n        }\n        \n        $scope.bookmarked = function(rep){\n            if($scope.authDataDesc == null){\n                return false;\n            }\n            else{\n                if(bookmarked(rep) == \"True\")\n                    return true;\n                else\n                    return false;\n            }\n        }\n\n        $scope.goToPerson = function(person, event) {\n            $mdDialog.show(\n                $mdDialog.alert()\n                .title('Navigating')\n                .textContent('Inspect ' + person)\n                .ariaLabel('Person inspect demo')\n                .ok('Neat!')\n                .targetEvent(event)\n            );\n        };\n        \n         $scope.loadUsers = function(topic) {\n            // Use timeout to simulate a 650ms request.\n            return $timeout(function() {\n                $scope.tagsOption = topic.Tags;\n            }, 650);\n        };\n\n\n\n        $scope.showNewTopic = function(ev) {\n            if (ev) {\n                var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\n                $mdBottomSheet.show({\n                    controller: 'newTopicCtrl',\n                    templateUrl: 'app/components/newTopic/newTopic.html',\n                    parent: angular.element(document.body),\n                    resolve: {\n                        // controller will not be loaded until $waitForAuth resolves\n                        // Auth refers to our $firebaseAuth wrapper in the example above\n                        \"currentAuth\": [\"refService\", function(refService) {\n                            // $waitForAuth returns a promise so the resolve waits for it to complete\n                            return refService.refAuth().$requireAuth();\n                        }]\n                    },\n                    targetEvent: ev,\n                    clickOutsideToClose: true,\n                    fullscreen: useFullScreen\n                }).then(function(clickedItem) {\n                    $scope.alert = clickedItem['name'] + ' clicked!';\n                });\n\n            } else {\n\n\n            }\n        }\n\n        $scope.goToTOPICAUTCOMPLETE = function(info) {\n            $state.go(\"authHome.topic\", {\n                \"USERNAME\": info.Username,\n                \"POST\": info.Postnum\n            })\n        }\n        $scope.goToTopic = function(avatar, date, email, title, uid, username, value, postnum) {\n            $state.go(\"authHome.topic\", {\n                \"USERNAME\": username,\n                \"POST\": postnum\n            })\n\n        }\n\n\n    }\n})(angular);\n(function(angular) {\n\n    'use strict';\n\n    angular\n        .module('ForumApp')\n        .controller('editReplyCtrl', [\"$scope\", 'emojiListService', \"$mdDialog\", \"currentAuth\", \"refService\", \"editTopicService\", \"editReplyService\", \"$mdMedia\", editReplyFunc])\n\n    function editReplyFunc($scope, emojiListService, $mdDialog, currentAuth, refService, editTopicService, editReplyService, $mdMedia) {\n        $scope.hide = function() {\n            $mdDialog.hide();\n        };\n        $scope.cancel = function() {\n            $mdDialog.cancel();\n        };\n        $scope.answer = function(answer) {\n            $mdDialog.hide(answer);\n        };\n        String.prototype.replaceAt = function(index, character) {\n            return this.substr(0, index) + character + this.substr(index + character.length);\n        }\n        String.prototype.replaceAll = function(str1, str2, ignore) {\n            return this.replace(new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g, \"\\\\$&\"), (ignore ? \"gi\" : \"g\")), (typeof(str2) == \"string\") ? str2.replace(/\\$/g, \"$$$$\") : str2);\n        }\n\n        var elem_hash = '';\n        $scope.dataTrib = [];\n        $scope.dataTribHash = [];\n        refService.ref().child(\"UserAuthInfo\").once(\"value\", function(snapUser) {\n            snapUser.forEach(function(snapUserEach) {\n                var key = snapUserEach.key();\n                var val = snapUserEach.val();\n                $scope.dataTrib.push({\n                    key: '<img src=\"' + val.Image + '\" width=\"30px\" height=\"30px\"/> ' + val.Username,\n                    value: val.Username\n                })\n                var tribute = new Tribute({\n                    trigger: '@',\n                    values: $scope.dataTrib,\n                })\n                angular.element(document).ready(function() {\n                    tribute.attach(document.getElementById('markdownUserType'));\n                })\n\n            })\n        })\n\n        refService.ref().child(\"Topics\").once(\"value\", function(snapTopic) {\n            snapTopic.forEach(function(snapTopicEven) {\n                var key = snapTopicEven.key();\n                var val = snapTopicEven.val();\n                $scope.dataTribHash.push({\n                    key: \"#\" + val.Postnum + \":\" + val.Title,\n                    value: \"#\" + (val.Postnum)\n                })\n            })\n            var tribute_hash = new Tribute({\n                trigger: '#',\n                values: ($scope.dataTribHash),\n                selectTemplate: function(item) {\n                    return (item.original.value).replace(\"@\", \"\");\n                },\n            })\n            angular.element(document).ready(function() {\n                setTimeout(function() {\n                    tribute_hash.attach(document.getElementById('markdownUserType'));\n                }, 500)\n            })\n        })\n\n\n        marked.setOptions({\n            renderer: new marked.Renderer(),\n            gfm: true,\n            tables: true,\n            breaks: false,\n            pedantic: false,\n            sanitize: false,\n            smartLists: true,\n            smartypants: false,\n            highlight: function(code, lang) {\n                if (lang) {\n                    return hljs.highlight(lang, code).value;\n                }\n                else {\n                    return hljs.highlightAuto(code).value;\n                }\n            }\n        });\n\n        $scope.emojieList = emojiListService.getEmojies();\n        $scope.myConfig = {\n            create: true,\n            onChange: function(value) {\n                console.log('onChange', value)\n            },\n            valueField: 'ID',\n            labelField: 'Name',\n            maxItems: 5,\n            required: true,\n        }\n\n        $scope.$watch('editValue', function(current, original) {\n            if (current)\n                $scope.outputText = marked(current);\n            //EMOJIE LIST {PARAM} {https://github.com/amanuel2/ng-forum/wiki/How-to-write-emotions}\n            if ($scope.outputText) {\n                for (var prop in $scope.emojieList)\n                    $scope.outputText = $scope.outputText.replaceAll(prop, $scope.emojieList[prop]);\n            }\n        });\n\n        $scope.shortcuts = function(shortcutName) {\n            var element = document.getElementById('markdownUserType');\n            switch (shortcutName) {\n                case 'bold':\n                    element.value += '**BoldTextHere**';\n                    break;\n                case 'italics':\n                    element.value += '_ItalicTextHere_';\n                    break;\n\n                case 'image':\n                    element.value += '![](http://)';\n                    break;\n\n                case 'url':\n                    element.value += '[](http://)';\n                    break;\n\n                case 'quote':\n                    element.value += '> Quote Here';\n                    break;\n\n                case 'number':\n                    element.value += '\\n\\n 1. List item'\n                    break;\n\n                case 'bullet':\n                    element.value += '\\n\\n * List item'\n                    break;\n                case 'header':\n                    element.value += '# Header Here.';\n                    break;\n\n                case 'code':\n                    element.value += \"```[languageName. If you dont know delete this bracket and leave it with three ticks]\\n\" + \"console.log('Code Here') \\n\" + \"```\";\n                    break;\n\n                case 'horizontal':\n                    element.value += \"\\n\\n -----\"\n                    break;\n\n                case 'paste':\n                    if (window.clipboardData) {\n                        element.value += window.clipboardData.getData(\"Text\");\n                    }\n                    else {\n                        alertify.error(window.clipboardData.getData('Text'));\n                    }\n\n                case 'emojies':\n\n                case 'help':\n                    window.open('https://simplemde.com/markdown-guide');\n                    break;\n\n                case 'emojies':\n                    window.open('https://github.com/amanuel2/ng-forum/wiki/How-to-write-emotions');\n\n            }\n        }\n\n        $scope.editREPLY = function() {\n            var topicPushKey = editReplyService.getPushK();\n            var POST = editReplyService.getDatee();\n            var USERNAME = editReplyService.getName();\n            var UIDUSERNAME = editReplyService.getTopicUID();\n\n\n            refService.ref().child(\"Replies\").child(USERNAME + POST).on(\"value\", function(snapshot) {\n                snapshot.forEach(function(childSnap) {\n                    var key = childSnap.key();\n                    var childData = childSnap.val();\n                    if (childData.pushKey == topicPushKey) {\n                        refService.ref().child(\"Replies\").child(USERNAME + POST).child(childData.pushKey).update({\n                            replyCreatorValue: $scope.editValue\n                        })\n                    }\n                })\n            })\n\n        }\n\n    }\n\n})(angular);\n(function(angular) {\n    'use strict';\n\n    angular\n        .module('ForumApp')\n        .controller('editTopicPanelCtrl', ['$scope', 'emojiListService', 'refService', '$firebaseObject', '$stateParams', '$firebaseArray', '$mdDialog', '$mdMedia', editTopicPanelCtrlfunc]);\n\n    function editTopicPanelCtrlfunc($scope, emojiListService, refService, $firebaseObject, $stateParams, $firebaseArray, $mdDialog, $mdMedia) {\n        String.prototype.replaceAt = function(index, character) {\n            return this.substr(0, index) + character + this.substr(index + character.length);\n        }\n        String.prototype.replaceAll = function(str1, str2, ignore) {\n            return this.replace(new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g, \"\\\\$&\"), (ignore ? \"gi\" : \"g\")), (typeof(str2) == \"string\") ? str2.replace(/\\$/g, \"$$$$\") : str2);\n        }\n\n        var elem_hash = '';\n        $scope.dataTrib = [];\n        $scope.dataTribHash = [];\n        refService.ref().child(\"UserAuthInfo\").once(\"value\", function(snapUser) {\n            snapUser.forEach(function(snapUserEach) {\n                var key = snapUserEach.key();\n                var val = snapUserEach.val();\n                $scope.dataTrib.push({\n                    key: '<img src=\"' + val.Image + '\" width=\"30px\" height=\"30px\"/> ' + val.Username,\n                    value: val.Username\n                })\n                var tribute = new Tribute({\n                    trigger: '@',\n                    values: $scope.dataTrib,\n                })\n                angular.element(document).ready(function() {\n                    tribute.attach(document.getElementById('markdownUserType'));\n                })\n\n            })\n        })\n        \n        angular.element(document).ready(function() {\n             $(\"#e1\").select2({\n              placeholder: \"Tags...\",\n              allowClear: true,\n              \n              // match strings that begins with (instead of contains):\n              matcher: function(term, text) {\n                    return text.toUpperCase().indexOf(term.toUpperCase())==0;\n              }\n            });\n        })\n\n        refService.ref().child(\"Topics\").once(\"value\", function(snapTopic) {\n            snapTopic.forEach(function(snapTopicEven) {\n                var key = snapTopicEven.key();\n                var val = snapTopicEven.val();\n                $scope.dataTribHash.push({\n                    key: \"#\" + val.Postnum + \":\" + val.Title,\n                    value: \"#\" + (val.Postnum)\n                })\n            })\n            var tribute_hash = new Tribute({\n                trigger: '#',\n                values: ($scope.dataTribHash),\n                selectTemplate: function(item) {\n                    return (item.original.value).replace(\"@\", \"\");\n                },\n            })\n            angular.element(document).ready(function() {\n                setTimeout(function() {\n                    tribute_hash.attach(document.getElementById('markdownUserType'));\n                }, 500)\n            })\n        })\n\n\n        $scope.cancel = function() {\n            $mdDialog.cancel();\n        }\n\n        marked.setOptions({\n            renderer: new marked.Renderer(),\n            gfm: true,\n            tables: true,\n            breaks: false,\n            pedantic: false,\n            sanitize: false,\n            smartLists: true,\n            smartypants: false,\n            highlight: function(code, lang) {\n                if (lang) {\n                    return hljs.highlight(lang, code).value;\n                }\n                else {\n                    return hljs.highlightAuto(code).value;\n                }\n            }\n        });\n\n        $scope.emojieList = emojiListService.getEmojies();\n\n\n        $scope.outputTextFirebaseObject = $firebaseObject(refService.ref().child(\"Topics\"))\n        $scope.defaultTags = $firebaseArray(refService.ref().child(\"Constants\").child('Tags').child(\"Default\"));\n        $scope.outputTextFirebaseObject.$loaded(function(daDATA) {\n            for (var prop in daDATA) {\n                if (daDATA[prop] !== null) {\n                    if (daDATA[prop].Postnum == $stateParams.POST) {\n                        refService.ref().child(\"Topics\").child(daDATA[prop].pushKey).once(\"value\", function(daDATASNAP) {\n                            $scope.editTitle = daDATASNAP.val().Title\n                            $scope.editValue = daDATASNAP.val().Value;\n                        })\n\n                    }\n                }\n            }\n        })\n        \n          $scope.valTag;\n        angular.element(document).ready(function(){\n            $('#e1').on(\"change\", function(e) { \n               // what you would like to happen\n                $scope.valTag = (e.val);\n            });\n        })\n\n\n\n        $scope.myConfig = {\n            create: true,\n            onChange: function(value) {\n                console.log('onChange', value)\n            },\n            valueField: 'ID',\n            labelField: 'Name',\n            maxItems: 5,\n            required: true,\n        }\n        \n        //$scope.preTags;\n        \n        // refService.ref().child(\"Topics\").once(\"value\", function(snapTag){\n        //     snapTag.forEach(function(snapTagChild){\n        //         if(snapTagChild.val().Postnum == $stateParams.POST) {\n        //             $scope.tagsSelected = snapTagChild.val().Tags;\n        //         }\n        //     })\n        // })\n\n        $scope.$watch('editValue', function(current, original) {\n\n            $scope.outputText = marked(current);\n            //EMOJIE LIST {PARAM} {https://github.com/amanuel2/ng-forum/wiki/How-to-write-emotions}\n            for (var prop in $scope.emojieList)\n                $scope.outputText = $scope.outputText.replaceAll(prop, $scope.emojieList[prop]);\n        });\n\n        $scope.shortcuts = function(shortcutName) {\n            var element = document.getElementById('markdownUserType');\n            switch (shortcutName) {\n                case 'bold':\n                    element.value += '**BoldTextHere**';\n                    break;\n                case 'italics':\n                    element.value += '_ItalicTextHere_';\n                    break;\n\n                case 'image':\n                    element.value += '![](http://)';\n                    break;\n\n                case 'url':\n                    element.value += '[](http://)';\n                    break;\n\n                case 'quote':\n                    element.value += '> Quote Here';\n                    break;\n\n                case 'number':\n                    element.value += '\\n\\n 1. List item'\n                    break;\n\n                case 'bullet':\n                    element.value += '\\n\\n * List item'\n                    break;\n                case 'header':\n                    element.value += '# Header Here.';\n                    break;\n\n                case 'code':\n                    element.value += \"```[languageName. If you dont know delete this bracket and leave it with three ticks]\\n\" + \"console.log('Code Here') \\n\" + \"```\";\n                    break;\n\n                case 'horizontal':\n                    element.value += \"\\n\\n ----\"\n                    break;\n\n                case 'paste':\n                    if (window.clipboardData) {\n                        element.value += window.clipboardData.getData(\"Text\");\n                    }\n                    else {\n                        alertify.error(window.clipboardData.getData('Text'));\n                    }\n\n                case 'help':\n                    window.open('https://simplemde.com/markdown-guide');\n                    break;\n\n                case 'emojies':\n                    window.open('https://github.com/amanuel2/ng-forum/wiki/How-to-write-emotions');\n\n            }\n        }\n        $scope.editTopicPan = function() {\n            console.log($scope.valTag);\n            for(var i=0; i<$scope.valTag.length; i++)\n                $scope.valTag[i] = ($scope.valTag[i].replace(\":\", \"\")).replace(/[0-9]/g, \"\")\n                \n            $scope.tagsSelectedFireBase = [];\n            $scope.editTextStuff = $firebaseObject(refService.ref().child(\"Topics\"))\n            $scope.editTextStuff.$loaded(function(daDATA) {\n                for (var prop in daDATA) {\n                    if (daDATA[prop] !== null) {\n                        if (daDATA[prop].Postnum == $stateParams.POST) {\n                            refService.ref().child(\"Topics\").child(daDATA[prop].pushKey).update({\n                                Value: $scope.editValue,\n                                Title: $scope.editTitle,\n                                Tags: $scope.valTag\n                            })\n                        }\n                    }\n                }\n                $mdDialog.cancel();\n            })\n\n        }\n    }\n\n})(angular);\n(function(angular) {\n\n  'use strict';\n  \n  angular\n        .module('ForumApp')\n        .controller('homeCtrl', [\"$scope\", \"$state\", \"refService\",\"loadingService\", homeCtrl])\n\n  function homeCtrl($scope, $state, refService,loadingService) {\n    //var checkAuth = refService.ref().getAuth() ? $state.go(\"authHome.desc\") : console.log(\"Not Logged In\");\n    // authCheckTrueService.checkAuth(refService.ref(), \"authHome.desc\");\n\n    var circle = document.querySelector('.material-btn');\n    var link = document.querySelector('.material-content').querySelectorAll('li');\n    var ham = document.querySelector('.material-hamburger');\n    var main = document.querySelector('main');\n    var win = window;\n\n    function openMenu(event) {\n\n      circle.classList.toggle('active');\n      ham.classList.toggle('material-close');\n      main.classList.toggle('active');\n      for (var i = 0; i < link.length; i++) {\n        link[i].classList.toggle('active');\n      }\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    }\n\n    function closeMenu() {\n      if (circle.classList.contains('active')) {\n        circle.classList.remove('active');\n        for (var i = 0; i < link.length; i++) {\n          link[i].classList.toggle('active');\n        }\n        ham.classList.remove('material-close');\n        main.classList.remove('active');\n      }\n    }\n\n    circle.addEventListener('click', openMenu, false);\n\n    win.addEventListener('click', closeMenu, false);\n\n\n  $scope.goTo = function(loc) {\n    loadingService.setLoadingTo(loc);\n    $state.go('loading')\n  }\n\n  }\n\n})(angular);\n(function(angular){\n\n  'use strict';    \n    \n  angular\n      .module('ForumApp')\n      .controller('loadingCtrl', [\"$scope\",'$state','refService','loadingService', loadingCtrlfunc])\n    \n    function loadingCtrlfunc($scope,$state,refService,loadingService){\n        $scope.currentAuthGet = refService.ref().getAuth();\n        $scope.title = \"Ng-Forum\";\n        $scope.subTitle = \"Loading...\";\n         setTimeout(function(){\n             var loaderLoc = loadingService.getLoadingTo();\n             if(loaderLoc) \n                $state.go(loaderLoc)\n             else\n                window.location.href = ''\n         },3500)\n    }\n})(angular);\n(function(angular) {\n    'use struct';\n    angular\n        .module('ForumApp')\n        .controller('newTopicCtrl', [\"$scope\", \"$mdDialog\", \"emojiListService\", \"$firebaseArray\", \"emojieTool\", \"$mdMedia\", \"emojiListService\", \"refService\", \"$firebaseArray\", \"$firebaseObject\", \"$mdBottomSheet\", '$http', newTopicCtrl])\n\n\n    function newTopicCtrl($scope, $mdDialog, emojiListService, $firebaseArray, emojieTool, $mdMedia, emojiListService, refService, $firebaseArray, $firebaseObject, $mdBottomSheet, $http) {\n\n\n        $scope.hide = function() {\n            $mdDialog.hide();\n        };\n\n        $scope.cancel = function() {\n            $mdDialog.cancel();\n        };\n        $scope.answer = function(answer) {\n            $mdDialog.hide(answer);\n        };\n        $scope.logicToGoBack = function() {\n            $mdBottomSheet.cancel()\n        }\n        String.prototype.replaceAt = function(index, character) {\n            return this.substr(0, index) + character + this.substr(index + character.length);\n        }\n        String.prototype.replaceAll = function(str1, str2, ignore) {\n            return this.replace(new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g, \"\\\\$&\"), (ignore ? \"gi\" : \"g\")), (typeof(str2) == \"string\") ? str2.replace(/\\$/g, \"$$$$\") : str2);\n        }\n\n        angular.element(document).ready(function() {\n            $(\"#e1\").select2({\n                placeholder: \"Tags...\",\n                allowClear: true,\n\n                // match strings that begins with (instead of contains):\n                matcher: function(term, text) {\n                    return text.toUpperCase().indexOf(term.toUpperCase()) == 0;\n                }\n            });\n        })\n        var elem_hash = '';\n        $scope.dataTrib = [];\n        $scope.dataTribHash = [];\n        refService.ref().child(\"UserAuthInfo\").once(\"value\", function(snapUser) {\n            snapUser.forEach(function(snapUserEach) {\n                var key = snapUserEach.key();\n                var val = snapUserEach.val();\n                $scope.dataTrib.push({\n                    key: '<img src=\"' + val.Image + '\" width=\"30px\" height=\"30px\"/> ' + val.Username,\n                    value: val.Username\n                })\n                var tribute = new Tribute({\n                    trigger: '@',\n                    values: $scope.dataTrib,\n                })\n                angular.element(document).ready(function() {\n                    tribute.attach(document.getElementById('markdownUserType'));\n                })\n\n            })\n        })\n\n        refService.ref().child(\"Topics\").once(\"value\", function(snapTopic) {\n            snapTopic.forEach(function(snapTopicEven) {\n                var key = snapTopicEven.key();\n                var val = snapTopicEven.val();\n                $scope.dataTribHash.push({\n                    key: \"#\" + val.Postnum + \":\" + val.Title,\n                    value: \"#\" + (val.Postnum)\n                })\n            })\n            var tribute_hash = new Tribute({\n                trigger: '#',\n                values: ($scope.dataTribHash),\n                selectTemplate: function(item) {\n                    return (item.original.value).replace(\"@\", \"\");\n                },\n            })\n            angular.element(document).ready(function() {\n                setTimeout(function() {\n                    tribute_hash.attach(document.getElementById('markdownUserType'));\n                }, 500)\n            })\n        })\n\n\n\n        $scope.currentAuthGet = refService.ref().getAuth();\n\n        marked.setOptions({\n            renderer: new marked.Renderer(),\n            gfm: true,\n            tables: true,\n            breaks: false,\n            pedantic: false,\n            sanitize: false,\n            smartLists: true,\n            smartypants: false,\n            highlight: function(code, lang) {\n                if (lang) {\n                    return hljs.highlight(lang, code).value;\n                }\n                else {\n                    return hljs.highlightAuto(code).value;\n                }\n            }\n        });\n\n        $scope.emojieList = emojiListService.getEmojies();\n        $scope.$watch('markdownData', function(current, original) {\n            $scope.outputText = marked(current);\n            //EMOJIE LIST {PARAM} {https://github.com/amanuel2/ng-forum/wiki/How-to-write-emotions}\n            for (var prop in $scope.emojieList)\n                $scope.outputText = $scope.outputText.replaceAll(prop, $scope.emojieList[prop]);\n        });\n\n        //Load Tags If Not Done...\n        var defaultTags = [\"Assembly\", \"C\", \"C++\", \"Java\", \"Javascript\", \"Firebase\", \"AngularFire\", \"MongoDB\", \"NodeJS\",\n            \"Go\", \"PHP\", \"MySQL\", \"Postgree\", \"Ruby\", \"Python\", \"Perl\", \".Net\", \"ASP.Net\", \"C#\", \"Visual Basic\", \"VB.net\", \"AngularJS\", \"Materializecss\"\n        ]\n\n        $scope.isThereTag = false;\n        $scope.defaultTags = $firebaseArray(refService.ref().child(\"Constants\").child('Tags').child(\"Default\"));\n\n        $scope.valTag;\n        angular.element(document).ready(function() {\n            $('#e1').on(\"change\", function(e) {\n                // what you would like to happen\n                $scope.valTag = e.val;\n            });\n        })\n\n        $scope.myConfig = {\n            create: true,\n            onChange: function(value) {\n                console.log('onChange', value)\n            },\n            valueField: 'ID',\n            labelField: 'Name',\n            maxItems: 5,\n            required: true,\n        }\n\n\n        $scope.tagCheckPrev = $firebaseObject(refService.ref().child(\"Constants\").child(\"Tags\"));\n\n        $scope.tagCheckPrev.$loaded(function(dataC) {\n            if (dataC.Default) {\n                console.log(\"Default Already Loaded\")\n            }\n            else {\n                for (var i = 0; i < defaultTags.length; i++) {\n                    refService.ref().child(\"Constants\").child(\"Tags\").child(\"Default\").push({\n                        ID: i,\n                        Name: defaultTags[i]\n                    })\n                }\n            }\n        })\n\n\n        $scope.undoAndRedo = function(ev, opt) {\n            if (opt == 'undo') {\n                $mdDialog.show(\n                    $mdDialog.alert()\n                    .parent(angular.element(document.querySelector('#popupContainer')))\n                    .clickOutsideToClose(true)\n                    .title('Undo')\n                    .textContent('Just Click Ctrl + Z Simultaneously to Undo Your Changes')\n                    .ariaLabel('Alert Dialog Demo')\n                    .ok('Got it!')\n                    .targetEvent(ev)\n                );\n            }\n\n            else {\n                $mdDialog.show(\n                    $mdDialog.alert()\n                    .parent(angular.element(document.querySelector('#popupContainer')))\n                    .clickOutsideToClose(true)\n                    .title('Redo')\n                    .textContent('Just Click Ctrl + Y Simultaneously to Redo Your Changes')\n                    .ariaLabel('Alert Dialog Demo')\n                    .ok('Got it!')\n                    .targetEvent(ev)\n                );\n            }\n        }\n\n        angular.element(document).ready(function() {\n            new Clipboard('.btn');\n        })\n        $scope.markdownData = \"# Type Your Markrdown Here\";\n\n        $scope.shortcuts = function(shortcutName) {\n            var element = document.getElementById('markdownUserType');\n            switch (shortcutName) {\n                case 'bold':\n                    element.value += '**BoldTextHere**';\n                    break;\n                case 'italics':\n                    element.value += '_ItalicTextHere_';\n                    break;\n\n                case 'image':\n                    element.value += '![](http://)';\n                    break;\n\n                case 'url':\n                    element.value += '[](http://)';\n                    break;\n\n                case 'quote':\n                    element.value += '> Quote Here';\n                    break;\n\n                case 'number':\n                    element.value += '\\n\\n 1. List item'\n                    break;\n\n                case 'bullet':\n                    element.value += '\\n\\n * List item'\n                    break;\n                case 'header':\n                    element.value += '# Header Here.';\n                    break;\n\n                case 'code':\n                    element.value += \"```[languageName. If you dont know delete this bracket and leave it with three ticks]\\n\" + \"console.log('Code Here') \\n\" + \"```\";\n                    break;\n\n                case 'horizontal':\n                    element.value += \"\\n\\n -----\"\n                    break;\n\n                case 'paste':\n                    if (window.clipboardData) {\n                        element.value += window.clipboardData.getData(\"Text\");\n                    }\n                    else {\n                        alertify.error(window.clipboardData.getData('Text'));\n                    }\n\n                case 'emojies':\n\n                case 'help':\n                    window.open('https://simplemde.com/markdown-guide');\n                    break;\n\n            }\n        }\n\n        $scope.emojieStart = function(ev) {\n            if (ev) {\n                var element = document.getElementById('markdownUserType');\n                emojieTool.setElementInfo(element);\n                var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\n                $mdDialog.show({\n                        controller: 'emojieToolCtrl',\n                        templateUrl: 'app/components/emojieTool/emojieTool.html',\n                        parent: angular.element(document.body),\n                        resolve: {\n                            // controller will not be loaded until $waitForAuth resolves\n                            // Auth refers to our $firebaseAuth wrapper in the example above\n                            \"currentAuth\": [\"refService\", function(refService) {\n                                // $waitForAuth returns a promise so the resolve waits for it to complete\n                                return refService.refAuth().$requireAuth();\n                            }]\n                        },\n                        targetEvent: ev,\n                        clickOutsideToClose: true,\n                        fullscreen: useFullScreen\n                    })\n                    .then(function(answer) {\n                        //Then Argument\n                    }, function() {\n                        //Canceled Dialog\n                    });\n            }\n            else {\n                return null;\n            }\n        }\n        $scope.submitNewTopic = function() {\n            for (var i = 0; i < $scope.valTag.length; i++)\n                $scope.valTag[i] = ($scope.valTag[i].replace(\":\", \"\")).replace(/[0-9]/g, \"\")\n\n            var search = $firebaseArray(refService.ref().child(\"Topics\"))\n            search.$loaded(function(data) {\n                refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGet.uid).on(\"value\", function(snapshot) {\n                    $scope.userAvatar = snapshot.val().Image;\n                    $scope.userName = snapshot.val().Username;\n                    $scope.userEmail = snapshot.val().Email;\n\n                    var pushing = refService.ref().child(\"Topics\").push({\n                        Title: $scope.topic.title,\n                        Value: $scope.markdownData,\n                        DateCreated: Date.now(),\n                        LastActivity: Date.now(),\n                        Username: $scope.userName,\n                        Email: $scope.userEmail,\n                        Avatar: $scope.userAvatar,\n                        UID: $scope.currentAuthGet.uid,\n                        Tags: $scope.valTag,\n                        Postnum: data.length,\n                        IsAcceptedAnwser: false,\n                        Votes: 0,\n                        AcceptedAnwserReplyNum: -1\n                    })\n\n                    refService.ref().child(\"Topics\").child(pushing.key()).update({\n                        pushKey: pushing.key()\n                    })\n                    $mdBottomSheet.cancel();\n                    $scope.topic.sentence = \"\";\n                    $scope.topic.title = \"\";\n                })\n            })\n\n\n        }\n        $scope.showhide = function(id) {\n            var e = document.getElementById(id);\n            e.style.display = (e.style.display == 'block') ? 'none' : 'block';\n        }\n\n\n\n\n    }\n})(angular);\n(function(angular) {\n    \n    'use strict';\n    \n    angular\n    \n    .module('ForumApp')\n    .controller('otherUserProfileCtrl', [\"$scope\", \"$firebaseArray\", \"$stateParams\", \"refService\", \"$mdDialog\",\"otherUserProfilePageService\", \"$firebaseObject\", \"$state\", \"otherUserService\", \"timeService\", otherUserProfileCtrl])\n\n    function otherUserProfileCtrl($scope, $firebaseArray, $stateParams, refService, $mdDialog,otherUserProfilePageService, $firebaseObject, $state, otherUserService, timeService) {\n\n        var info = otherUserService.getUserInfo();\n        var obj = $firebaseObject(refService.ref().child(\"UserAuthInfo\").child(info.replyCreatorUID));\n        var topicLenObj = $firebaseArray(refService.ref().child(\"Topics\"));\n        $scope.precence = \"\";\n        $scope.timeSinceNoPageOBJ = \"Not Set\"\n        $scope.timeSinceNoPage = \"Not\";\n        $scope.currentAuthGetOTHER = refService.ref().getAuth();\n        $scope.info = otherUserService.getUserInfo()\n        $scope.otherUserUID = $scope.info.replyCreatorUID\n        $scope.otherUserUsername = '';\n\n\n\n        obj.$loaded(function(data) {\n                $scope.info = otherUserService.getUserInfo()\n                $scope.ACTUALinfo = otherUserService.ACTUALgetUserInfo();\n                $scope.otherUserEmail = $scope.info.replyCreatorEmail\n                $scope.otherUserImage = $scope.info.replyCreatorAvatar\n                $scope.otherUserUID = $scope.info.replyCreatorUID\n                $scope.otherUserUsername = $scope.info.replyCreatorUsername;\n                $scope.numFollowing = data.following;\n                $scope.numFollowers = data.followers;\n                if ($scope.ACTUALinfo.Moderator == false) {\n                    $scope.otherMod = \"Not a Moderator\";\n                }\n                else {\n                    $scope.otherMod = \"Respected Moderator\";\n                }\n                $scope.otherDesc = $scope.ACTUALinfo.Description || \"This user is silent as the butterflies\";\n                $scope.count = 0;\n\n                 topicLenObj.$loaded(function(topicData) {\n                     for (var i = 0; i < topicData.length; i++) {\n                         if (topicData[i].UID == $scope.otherUserUID) {\n                             $scope.count++;\n                         }\n                     }\n                 })\n\n                $scope.timeSINCEOBJ = $firebaseObject(refService.ref());\n                $scope.timeSINCEOBJ.$loaded(function(dataLOAD){\n                    var OBJPRECENCE = dataLOAD.presence;\n                    for(var prop in OBJPRECENCE){\n                        var id = $scope.otherUserUID\n                        $scope.timeSinceNoPageOBJ = OBJPRECENCE[id];\n                    }\n                })\n                \n                var userRef = new Firebase('https://uniquecodersforums.firebaseio.com/presence/' + $scope.otherUserUID);\n                userRef.once(\"value\", function(snapshotPrecence) {\n                    if (snapshotPrecence.val() == \"Online\")\n                        $scope.precence = true\n\n                    else if (snapshotPrecence.val() == \"Idle\")\n                        $scope.precence = \"Idle\"\n\n                    else{\n                        $scope.precence = false\n                        $scope.timeSinceNoPage = timeService.getTimeF(new Date(parseInt(snapshotPrecence.val())));\n                        console.log($scope.timeSinceNoPage)\n                    }\n\n                })\n            },\n            function(error) {\n                console.error(\"Error:\", error);\n            }\n        );\n       \n\n\n\n        $scope.hide = function() {\n            $mdDialog.hide();\n        };\n        $scope.cancel = function() {\n            $mdDialog.cancel();\n        };\n        $scope.answer = function(answer) {\n            $mdDialog.hide(answer);\n        };\n        \n        $scope.goToPage = function(){\n            console.log($scope.otherUserUsername);\n            otherUserProfilePageService.setID($scope.otherUserUID);\n            $state.go('authHome.otherUserPage', {\n                'USERNAME' : $scope.otherUserUsername\n            })\n        }\n\n\n         $scope.addFolower = function() {\n            $scope.followerCheck = $firebaseArray(refService.ref().child(\"UserAuthInfo\").child($scope.otherUserUID))\n            $scope.followingCheck = $firebaseArray(refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetOTHER.uid))\n\n\n            $scope.followerCheck.$loaded(function(dataCheckFollower) {\n                console.log(dataCheckFollower)\n                for (var i = 0; i < dataCheckFollower.length; i++) {\n                    if (dataCheckFollower[i].$id == \"followers\") {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.otherUserUID).child('followerLength').update({\n                            followers: (dataCheckFollower[i].$value + 1)\n                        })\n\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetOTHER.uid).on(\"value\", function(snap) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.otherUserUID).child('followerLength').child('followersInfo').push({\n                                UID: $scope.currentAuthGetOTHER.uid,\n                                Username: snap.val().Username,\n                                Avatar: snap.val().Image,\n                                Desc: snap.val().Description || \"The User is Silent as the butterflies...\"\n                            })\n                        })\n\n                    }\n                }\n\n            })\n\n            $scope.followingCheck.$loaded(function(dataCheckFollowing) {\n                console.log(dataCheckFollowing)\n                for (var i = 0; i < dataCheckFollowing.length; i++) {\n                    if (dataCheckFollowing[i].$id == \"following\") {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetOTHER.uid).child('followingLength').update({\n                            following: (dataCheckFollowing[i].$value + 1)\n                        })\n                        refService.ref().child(\"UserAuthInfo\").child($scope.otherUserUID).on(\"value\", function(snapp) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetOTHER.uid).child('followingLength').child('followingInfo').update({\n                                UID: $scope.currentAuthGetOTHER.uid,\n                                Username: snapp.val().Username,\n                                Avatar: snapp.val().Image,\n                                Desc: snapp.val().Description || \"The User is Silent as the butterflies...\"\n                            })\n                        })\n\n                    }\n                }\n\n            })\n\n        }\n\n\n        $scope.privateMessageStart = function(username, mod, desc, image) {\n            $state.go(\"authHome.privateMes\")\n        }\n        $scope.goToTopic = function(top) {\n            $state.go(\"authHome.topic\", {\n                \"AVATAR\": $scope.otherUserImage,\n                \"DATE\": top.DateCreated,\n                \"EMAIL\": $scope.otherUserEmail,\n                \"TITLE\": top.Title,\n                \"UID\": top.UID,\n                \"USERNAME\": top.Username,\n                \"VALUE\": top.Value\n            })\n        }\n\n    }\n})(angular);\n(function(){\n    \n  'use strict';    \n     angular\n     .module('ForumApp')\n     .controller('otherUserProfilePageCtrl', [\"$scope\",\"$stateParams\",\"otherUserProfilePageService\", otherUserProfilePageCtrlFunc])\n    \n    \n    function otherUserProfilePageCtrlFunc($scope,$stateParams,otherUserProfilePageService){\n        $scope.otherUSERIDPAGE = otherUserProfilePageService.getID();\n        console.log($scope.otherUSERIDPAGE);\n        \n    }\n    \n    \n})(angular);\n(function(angular){\n 'use strict';    \n     angular\n     .module('ForumApp')\n     .controller('profileCtrl', [\"$scope\",\"$firebaseObject\",\"refService\",\"timeService\",\"$stateParams\", profileCtrl])\n\n    function profileCtrl($scope,$firebaseObject,refService,timeService,$stateParams){\n       $scope.currentAuthGetPro = refService.ref().getAuth();\n       $scope.precence = \"\";\n       var userRef = new Firebase('https://uniquecodersforums.firebaseio.com/presence/' + $scope.currentAuthGetPro.uid);\n       userRef.on(\"value\", function(snapshotPrecence){\n           if(snapshotPrecence.val() == \"Online\")\n                $scope.precence = \"Online\"\n                \n            else if(snapshotPrecence.val() == \"Idle\")  \n                $scope.precence = \"Idle\"\n                \n            else\n                $scope.precence = timeService.getTimeF(new Date(parseInt(snapshotPrecence.val())));\n            \n                \n       })\n       \n      \n       String.prototype.replaceAll = function(str1, str2, ignore) {\n        return this.replace(new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g,\"\\\\$&\"),(ignore?\"gi\":\"g\")),(typeof(str2)==\"string\")?str2.replace(/\\$/g,\"$$$$\"):str2);\n       } \n\n\n        //  var arrayOfPrevious5Days = [];        \n        //  var date = Date.now();\n        //  var date = parseInt(date);\n        //  var newDate = new Date(parseInt(date));\n        \n        //  newDate = JSON.stringify(newDate);\n        //  newDate = newDate.replaceAll('\"', '');\n        //  newDate = newDate.substring(8,10);\n        //  var dateNum = parseInt(newDate);\n        //  var dateDiff5 = dateNum-5;\n        //  for(var i=dateNum; i>dateDiff5; i--)\n        //       arrayOfPrevious5Days.push(i);\n        //  var index_zero = arrayOfPrevious5Days[0];\n        //  var index_one = arrayOfPrevious5Days[1];\n        //  var index_two = arrayOfPrevious5Days[2];\n        //  var index_three = arrayOfPrevious5Days[3];\n        //  var index_four = arrayOfPrevious5Days[4];\n           \n\n         var obj = $firebaseObject(refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetPro.uid));\n         var objPres = $firebaseObject(refService.ref().child(\"presence\"));\n         \n         \n        obj.$loaded(function(data) {\n                $scope.Username = data.Username;\n                $scope.Email = data.Email;\n                $scope.UID = $scope.currentAuthGetPro.uid;\n                $scope.image = data.Image;\n                $scope.backImage = data.profileBackground\n                $scope.desc = data.Description || \"The User is Silent as the butterflies...\"\n                $scope.Moderator = data.Moderator;\n                $scope.ProfileViews = data.profileViews\n                $scope.Followers = data.followers;\n                $scope.Following = data.following;\n                \n                var count_b = 0;\n                var count_s = 0;\n                var coung_g = 0;\n                var coung_p = 0;\n                //Badges\n                if(data.BronzeBadge == 0)\n                    $scope.count_b = 0;\n                else{\n                    for(var i in data.BronzeBadge)\n                        count_b++;\n                    $scope.count_b = (count_b);    \n                }\n                \n                 if(data.SilverBadge == 0)\n                    $scope.count_s = 0;\n                else{\n                    for(var i in data.SilverBadge)\n                        count_s++;\n                    $scope.count_s = (count_s);    \n                }\n                \n                 if(data.GoldBadge == 0)\n                    $scope.count_g = 0;\n                else{\n                    for(var i in data.GoldBadge)\n                        coung_g++;\n                    $scope.count_g = (coung_g);    \n                }\n                \n                if(data.PlatinumBadge == 0)\n                    $scope.count_p = 0;\n                else{\n                    for(var i in data.PlatinumBadge)\n                        coung_p++;\n                    $scope.count_p = (coung_p);    \n                }\n            },\n            function(error) {\n                alertify.error(\"Error:\", error);\n            }\n        \n        );\n        \n        objPres.$loaded(function(data){\n            $scope.isPresent = data[$scope.currentAuthGetPro.uid];\n            if($scope.isPresent !== 'Online'){\n                $scope.isPresent = timeService.getTimeF(new Date(parseInt($scope.isPresent)));\n            }\n        })\n        \n       \n    }\n})(angular);\n(function(angular) {\n\n    'use strict';\n    angular\n        .module('ForumApp')\n        .controller(\"settingsCtrl\", [\"$scope\", \"refService\", \"$stateParams\", \"$mdDialog\", \"$mdMedia\", \"$firebaseObject\", \"$state\", settingsCtrl])\n\n    function settingsCtrl($scope, refService, $stateParams, $mdDialog, $mdMedia, $firebaseObject, $state) {\n\n        //Setting Infos....\n        $scope.currentAuthSet = refService.ref().getAuth();\n\n        $scope.userInfo = $firebaseObject(refService.ref().child(\"UserAuthInfo\").child($stateParams.UID))\n        $scope.passwordSHARP = \"********\"\n        $scope.uid = $scope.currentAuthSet.uid;\n        $scope.desc = \"See your descripton in the profile.\"\n\n        function isPassChange() {\n            if ($scope.currentAuthSet.provider == 'twitter' || $scope.currentAuthSet.provider == 'google' ||\n                $scope.currentAuthSet.provider == 'github') {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n\n        if ($scope.currentAuthSet.uid == $stateParams.UID) {\n\n        }\n        else {\n            $state.go(\"auth\");\n        }\n\n\n        //SETTING UP CHANIGNE EMAIL\n        $scope.changeEmail = function(ev) {\n            var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\n            $mdDialog.show({\n                    controller: 'emailSettingsCtrl',\n                    templateUrl: 'app/components/settings/mini-view/emailChange.html',\n                    parent: angular.element(document.body),\n                    resolve: {\n                        // controller will not be loaded until $waitForAuth resolves\n                        // Auth refers to our $firebaseAuth wrapper in the example above\n                        \"currentAuth\": [\"refService\", function(refService) {\n                            // $waitForAuth returns a promise so the resolve waits for it to complete\n                            return refService.refAuth().$requireAuth();\n                        }]\n                    },\n                    targetEvent: ev,\n                    clickOutsideToClose: true,\n                    fullscreen: useFullScreen\n                })\n                .then(function(answer) {\n\n                }, function() {\n\n                });\n            $scope.$watch(function() {\n                return $mdMedia('xs') || $mdMedia('sm');\n            }, function(wantsFullScreen) {\n                $scope.customFullscreen = (wantsFullScreen === true);\n            });\n        }\n\n        $scope.descriptonChange = function(ev) {\n            var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\n            $mdDialog.show({\n                    controller: 'descChangeCtrl',\n                    templateUrl: 'app/components/settings/mini-view/descriptonChange.html',\n                    parent: angular.element(document.body),\n                    resolve: {\n                        // controller will not be loaded until $waitForAuth resolves\n                        // Auth refers to our $firebaseAuth wrapper in the example above\n                        \"currentAuth\": [\"refService\", function(refService) {\n                            // $waitForAuth returns a promise so the resolve waits for it to complete\n                            return refService.refAuth().$requireAuth();\n                        }]\n                    },\n                    targetEvent: ev,\n                    clickOutsideToClose: true,\n                    fullscreen: useFullScreen\n                })\n                .then(function(answer) {\n\n                }, function() {\n\n                });\n            $scope.$watch(function() {\n                return $mdMedia('xs') || $mdMedia('sm');\n            }, function(wantsFullScreen) {\n                $scope.customFullscreen = (wantsFullScreen === true);\n            });\n        }\n\n        $scope.changePassword = function(ev) {\n\n            if (isPassChange() == true) {\n                $mdDialog.show(\n                    $mdDialog.alert()\n                    .parent(angular.element(document.getElementsByTagName(\"body\")))\n                    .clickOutsideToClose(true)\n                    .title('Password')\n                    .textContent('Cant change password since your logged in from a provider')\n                    .ariaLabel('Alert Dialog Demo')\n                    .ok('Got it!')\n                    .targetEvent(ev)\n                );\n            }\n            else {\n                var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\n                $mdDialog.show({\n                        controller: 'passwordChangeCtrl',\n                        templateUrl: 'app/components/settings/mini-view/passwordChange.html',\n                        parent: angular.element(document.body),\n                        resolve: {\n                            // controller will not be loaded until $waitForAuth resolves\n                            // Auth refers to our $firebaseAuth wrapper in the example above\n                            \"currentAuth\": [\"refService\", function(refService) {\n                                // $waitForAuth returns a promise so the resolve waits for it to complete\n                                return refService.refAuth().$requireAuth();\n                            }]\n                        },\n                        targetEvent: ev,\n                        clickOutsideToClose: true,\n                        fullscreen: useFullScreen\n                    })\n                    .then(function(answer) {\n\n                    }, function() {\n\n                    });\n                $scope.$watch(function() {\n                    return $mdMedia('xs') || $mdMedia('sm');\n                }, function(wantsFullScreen) {\n                    $scope.customFullscreen = (wantsFullScreen === true);\n                });\n            }\n\n        }\n        $scope.changeUsername = function(ev) {\n            var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\n            $mdDialog.show({\n                    controller: 'usernameChangeCtrl',\n                    templateUrl: 'app/components/settings/mini-view/usernameChange.html',\n                    parent: angular.element(document.body),\n                    resolve: {\n                        // controller will not be loaded until $waitForAuth resolves\n                        // Auth refers to our $firebaseAuth wrapper in the example above\n                        \"currentAuth\": [\"refService\", function(refService) {\n                            // $waitForAuth returns a promise so the resolve waits for it to complete\n                            return refService.refAuth().$requireAuth();\n                        }]\n                    },\n                    targetEvent: ev,\n                    clickOutsideToClose: true,\n                    fullscreen: useFullScreen\n                })\n                .then(function(answer) {\n\n                }, function() {\n\n                });\n            $scope.$watch(function() {\n                return $mdMedia('xs') || $mdMedia('sm');\n            }, function(wantsFullScreen) {\n                $scope.customFullscreen = (wantsFullScreen === true);\n            });\n        }\n\n        $scope.changeImage = function(ev) {\n            var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\n            $mdDialog.show({\n                    controller: 'imageChangeCtrl',\n                    templateUrl: 'app/components/settings/mini-view/imageChange.html',\n                    parent: angular.element(document.body),\n                    resolve: {\n                        // controller will not be loaded until $waitForAuth resolves\n                        // Auth refers to our $firebaseAuth wrapper in the example above\n                        \"currentAuth\": [\"refService\", function(refService) {\n                            // $waitForAuth returns a promise so the resolve waits for it to complete\n                            return refService.refAuth().$requireAuth();\n                        }]\n                    },\n                    targetEvent: ev,\n                    clickOutsideToClose: true,\n                    fullscreen: useFullScreen\n                })\n                .then(function(answer) {\n\n                }, function() {\n\n                });\n            $scope.$watch(function() {\n                return $mdMedia('xs') || $mdMedia('sm');\n            }, function(wantsFullScreen) {\n                $scope.customFullscreen = (wantsFullScreen === true);\n            });\n        }\n\n        $scope.deleteUser = function() {\n            vex.dialog.confirm({\n                message: 'Are you sure you want to be removed?',\n                callback: function(value) {\n                    if (value == true) {\n                        if (isPassChange() == true) {\n\n\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthSet.uid).remove(function(err) {\n                                if (err)\n                                    alertify.error(\"ERROR DELETING USER \" + err);\n                                else {\n                                    refService.ref().unauth();\n                                    location.reload(true)\n                                    location.reload(true)\n\n                                }\n\n                            })\n\n\n\n                        }\n                        else {\n\n\n                            vex.dialog.prompt({\n                                message: 'Whats your Password?',\n                                placeholder: 'Passwprd....',\n                                callback: function(value) {\n\n                                    refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthSet.uid).once(\"value\", function(snap) {\n                                        console.log(snap.val())\n                                        refService.ref().removeUser({\n                                            email: snap.val().Email,\n                                            password: value\n                                        }, function(error) {\n                                            if (error) {\n                                                switch (error.code) {\n                                                    case \"INVALID_USER\":\n                                                        alertify.error(\"The specified user account does not exist.\");\n                                                        break;\n                                                    case \"INVALID_PASSWORD\":\n                                                        alertify.error(\"The specified user account password is incorrect.\");\n                                                        break;\n                                                    default:\n                                                        alertify.error(\"Error removing user:\", error);\n                                                }\n                                            }\n                                            else {\n\n                                                refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthSet.uid).remove(function(err) {\n                                                    if (err)\n                                                        alertify.error(\"ERROR DELETING USER \" + err);\n                                                    else {\n                                                        alertify.success(\"User account deleted successfully!\");\n                                                        location.reload(true);\n                                                        location.reload(true);\n                                                    }\n\n                                                })\n\n\n\n                                            }\n                                        });\n\n                                    })\n\n                                }\n                            });\n\n\n                        }\n\n                    }\n                }\n            })\n        }\n\n\n    }\n\n})(angular);\n(function(angular) {\n\n    'use strict';\n    angular\n        .module('ForumApp')\n        .controller('topicCtrl', [\"$scope\",\"localStorageService\",\"emojiListService\", \"$stateParams\", \"refService\", \"editReplyService\", \"dateService\", \"$firebaseArray\", \"timeService\", \"$mdBottomSheet\", \"$mdMedia\", \"$mdDialog\", \"replyService\", \"$firebaseObject\", \"$state\", \"otherUserService\", \"editTopicService\", \"topicLikesService\", \"badgesService\", topicCtrl])\n\n\n    function topicCtrl($scope,localStorageService,emojiListService, $stateParams, refService, editReplyService, dateService, $firebaseArray, timeService, $mdBottomSheet, $mdMedia, $mdDialog, replyService, $firebaseObject, $state, otherUserService, editTopicService, topicLikesService, badgesService) {\n        var currentAuth = refService.ref().getAuth();\n        $scope.currentAuthGet = refService.ref().getAuth();\n\n\n\n        if($scope.currentAuthGet){\n           if(localStorageService.get($stateParams.POST) == null);\n           else \n               localStorageService.remove($stateParams.POST);\n        }\n        else{\n            if(localStorageService.get($stateParams.POST) == null)\n                localStorageService.set($stateParams.POST, generateUUID(16));\n        }\n            \n        function generateUUID(length) {\n            var d = new Date().getTime();\n            var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n                var r = (d + Math.random() * length) % 16 | 0;\n                d = Math.floor(d / 16);\n                return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n            });\n            return uuid;\n        };\n\n        if ($scope.currentAuthGet) {\n\n        }\n        else {\n            currentAuth = {\n                uid: localStorageService.get($stateParams.POST)\n            }\n        }\n\n        if($scope.currentAuthGet == null) {\n            $scope.currentAuthGet = {\n                uid : localStorageService.get($stateParams.POST)\n            }\n        }\n            \n        marked.setOptions({\n            renderer: new marked.Renderer(),\n            gfm: true,\n            tables: true,\n            breaks: false,\n            pedantic: false,\n            sanitize: false,\n            smartLists: true,\n            smartypants: false,\n            highlight: function(code, lang) {\n                if (lang) {\n                    return hljs.highlight(lang, code).value;\n                }\n                else {\n                    return hljs.highlightAuto(code).value;\n                }\n            }\n        });\n\n\n\n\n\n\n\n\n        $scope.notAuthReplyTopic = function() {\n                alertify.myAlert(\"Sorry , You must be logged in , to reply or have many feautres available.\");\n            }\n            //SETTING INFO\n        refService.ref().child(\"Topics\").on(\"value\", function(snapshot) {\n            snapshot.forEach(function(EVEN) {\n                var key = EVEN.key();\n                var childData = EVEN.val();\n\n                if (childData.Postnum == $stateParams.POST) {\n                    $scope.creatorAvatar = childData.Avatar\n                    $scope.creatorTitle = childData.Title;\n                    $scope.creatorUID = childData.UID;\n                    $scope.creatorUsername = childData.Username;\n                    $scope.creatorValue = childData.Value;\n                    $scope.creatorDate = childData.DateCreated;\n                    $scope.creatorEmail = childData.Email;\n                    $scope.repliesNum = childData.RepliesNum;\n                    $scope.timeSinceCreated = timeService.getTimeF(new Date(parseInt($scope.creatorDate)));\n                    var dateCheck = new Date(parseInt($scope.creatorDate));\n                    $scope.creatorDateParsed = timeService.getTimeF(dateCheck);\n                }\n            })\n\n\n            $scope.actualReplyUser = $firebaseObject(refService.ref().child(\"UserAuthInfo\").child($scope.creatorUID));\n            $scope.thisUser = $firebaseObject(refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGet.uid));\n            $scope.isModerator;\n            $scope.currentUserAvatar;\n            $scope.thisUser.$loaded(function(data) {\n                $scope.isModerator = data.Moderator;\n                $scope.currentUserAvatar = data.Image;\n\n            })\n        })\n\n\n        //Setting Views\n        //Adding Them..\n        $scope.views = $firebaseObject(refService.ref().child(\"Topics\"))\n        refService.ref().child(\"Topics\").once(\"value\", function(snapshot) {\n\n                snapshot.forEach(function(childSnapshot) {\n                    var key = childSnapshot.key();\n                    var childData = childSnapshot.val();\n                    if ($stateParams.POST == childData.Postnum) {\n                        refService.ref().child(\"Topics\").child(childData.pushKey).child(\"Views\").child(currentAuth.uid).set({\n                            Views: true\n                        })\n                    }\n                })\n            })\n            //Viewing them\n        refService.ref().child(\"Topics\").once(\"value\", function(snapshot) {\n            snapshot.forEach(function(childSnapshot) {\n                var key = childSnapshot.key();\n                var childData = childSnapshot.val();\n                if ($stateParams.POST == childData.Postnum) {\n                    refService.ref().child(\"Topics\").child(childData.pushKey).child(\"Views\").on(\"value\", function(snapshot) {\n                        $scope.countViews = snapshot.numChildren();\n                    })\n                }\n            })\n        })\n\n        /* var viewsCount = $firebaseArray(refService.ref().child(\"Topics\"));\n\n         viewsCount.$loaded(function(data) {\n             $scope.countViews = data.length;\n             console.log(data)\n         })*/\n\n\n\n\n        function voteHelper() {\n            $scope.didVote = true;\n            refService.ref().child(\"Topics\").once(\"value\", function(snapshot) {\n                snapshot.forEach(function(childSnapshot) {\n                    var key = childSnapshot.key();\n                    var childData = childSnapshot.val();\n                    childSnapshot.forEach(function(viewsCheck) {\n                        /*var keyCheck = viewsCheck.key();\n                        var childDataCheck = viewsCheck.val();\n                        console.log(childData.UpVotes);*/\n                        refService.ref().child(\"Topics\").child(childData.pushKey).child(\"Vote\").on(\"value\", function(snapshotViews) {\n                            snapshotViews.forEach(function(snapShotViewsForEach) {\n                                var keySNAPVIEWS = snapShotViewsForEach.key();\n                                var childDataSNAPVIEWS = snapShotViewsForEach.val();\n\n                                if (childDataSNAPVIEWS == currentAuth.uid) {\n                                    $scope.didVote = true;\n                                }\n                            })\n\n                        })\n\n                    })\n                })\n            })\n            if ($scope.didVote == true) {\n                return \"Voted\"\n            }\n            else {\n                return \"NotVoted\"\n            }\n        }\n        $scope.votedAlready = function() {\n            if (voteHelper() == \"Voted\")\n                return false;\n\n            else\n                return true;\n\n\n        }\n        \n        $scope.side = \"right\"\n\n\n        $scope.sideFunctoin = function() {\n            if($scope.side == 'right')\n                return 'left';\n            else\n                return 'right';\n        }\n         $scope.events = [{\n            badgeClass: 'info',\n            badgeIconClass: 'glyphicon-check',\n            title: 'First heading',\n            content: 'Some awesome content.'\n          }, {\n            badgeClass: 'warning',\n            badgeIconClass: 'glyphicon-credit-card',\n            title: 'Second heading',\n            content: 'More awesome content.'\n          }];\n  \n        $scope.scrollDownReply = function(){\n                  $(\"html, body\").animate({ scrollTop: $(document).height() }, 1000);\n            }\n        //Setting Voting\n        //Adding them...\n        function upVoteRegister(data) {\n            $scope.TOTAL_POINTS = 0;\n            refService.ref().child(\"UserAuthInfo\").child($scope.creatorUID).child(\"PointsOBJ\").child($scope.currentAuthGet.uid + \"TOPIC:\" + $stateParams.POST).set({\n                Point: +5\n            })\n            refService.ref().child(\"UserAuthInfo\").child($scope.creatorUID).child(\"PointsOBJ\").once(\"value\", function(downVoteCheck) {\n\n                for (var i in downVoteCheck.val())\n                    $scope.TOTAL_POINTS = $scope.TOTAL_POINTS + (downVoteCheck.val()[i].Point)\n\n                refService.ref().child(\"UserAuthInfo\").child($scope.creatorUID).update({\n                    Points: $scope.TOTAL_POINTS\n                })\n\n            })\n\n        }\n        $scope.upVote = function() {\n            refService.ref().child(\"Topics\").once(\"value\", function(snapshot) {\n                snapshot.forEach(function(childSnapshot) {\n                    var key = childSnapshot.key();\n                    var childData = childSnapshot.val();\n                    if ($stateParams.POST == childData.Postnum) {\n                        refService.ref().child(\"Topics\").child(childData.pushKey).child(\"Vote\").child(currentAuth.uid).set({\n                            Vote: 1\n                        })\n                        upVoteRegister(childData);\n                    }\n                })\n            })\n\n            var upVoteIcon = document.getElementById(\"upVoteIcon\");\n            upVoteIcon.classList.remove(\"thumb-icon\");\n            upVoteIcon.classList.add(\"upvote\");\n\n            var downVoteIcon = document.getElementById(\"downVoteIcon\");\n            downVoteIcon.classList.remove(\"downvote\");\n            downVoteIcon.classList.add(\"thumb-icon\");\n\n        }\n\n        function downVotePointRegister(data) {\n            $scope.TOTAL_POINTS = 0;\n            refService.ref().child(\"UserAuthInfo\").child($scope.creatorUID).child(\"PointsOBJ\").child($scope.currentAuthGet.uid + \"TOPIC:\" + $stateParams.POST).set({\n                Point: -2\n            })\n            refService.ref().child(\"UserAuthInfo\").child($scope.creatorUID).child(\"PointsOBJ\").once(\"value\", function(downVoteCheck) {\n\n                for (var i in downVoteCheck.val())\n                    $scope.TOTAL_POINTS = $scope.TOTAL_POINTS + (downVoteCheck.val()[i].Point)\n\n                refService.ref().child(\"UserAuthInfo\").child($scope.creatorUID).update({\n                    Points: $scope.TOTAL_POINTS\n                })\n\n            })\n\n        }\n\n        $scope.downVote = function() {\n            refService.ref().child(\"Topics\").once(\"value\", function(snapshot) {\n                snapshot.forEach(function(childSnapshot) {\n                    var key = childSnapshot.key();\n                    var childData = childSnapshot.val();\n                    if ($stateParams.POST == childData.Postnum) {\n                        refService.ref().child(\"Topics\").child(childData.pushKey).child(\"Vote\").child(currentAuth.uid).set({\n                            Vote: -1\n                        })\n                        downVotePointRegister(childData);\n                    }\n                })\n            })\n\n            var downVoteIcon = document.getElementById(\"downVoteIcon\");\n            downVoteIcon.classList.remove(\"thumb-icon\");\n            downVoteIcon.classList.add(\"downvote\");\n\n            var upVoteIcon = document.getElementById(\"upVoteIcon\");\n            upVoteIcon.classList.remove(\"upvote\");\n            upVoteIcon.classList.add(\"thumb-icon\");\n\n        }\n\n\n\n        $scope.countVote = 0;\n        //Viewing Them..\n        $scope.votesViewing = $firebaseObject(refService.ref().child(\"Topics\"))\n        refService.ref().child(\"Topics\").on(\"value\", function(snapshot) {\n            $scope.countVote = 0;\n            snapshot.forEach(function(childSnapshot) {\n                var key = childSnapshot.key();\n                var childData = childSnapshot.val();\n                if ($stateParams.POST == childData.Postnum) {\n                    refService.ref().child(\"Topics\").child(childData.pushKey).child(\"Vote\").on(\"value\", function(snapshotVote) {\n                        snapshotVote.forEach(function(VoteChild) {\n                            VoteChild.forEach(function(evenChildVote) {\n                                var keyCHILD = evenChildVote.key();\n                                var childDataCHILD = evenChildVote.val();\n                                $scope.countVote += (childDataCHILD);\n                            })\n                        })\n                    })\n                }\n            })\n        })\n\n\n\n\n\n\n\n        //SETTING REPLIES\n\n        $scope.replies = $firebaseObject(refService.ref().child(\"Replies\").child($scope.creatorUsername + $stateParams.POST));\n\n\n\n\n        //Setting Tags..\n        $scope.tagsTopic = $firebaseObject(refService.ref().child(\"Topics\"));\n\n        $scope.tagsTopic.$loaded(function(data) {\n            data.forEach(function(snapDataTag) {\n\n                if (snapDataTag.Postnum == $stateParams.POST) {\n\n                    $scope.tagsTopicRep = snapDataTag.Tags;\n\n                }\n            })\n        })\n\n\n        //Getting ClickProfile Set Up...\n        $scope.goToProfile = function(info, ev) {\n            if (ev) {\n                otherUserService.setUserInfo(info);\n                otherUserService.ACTUALsetUserInfo($scope.actualReplyUser);\n                $mdDialog.show({\n                        controller: 'otherUserProfileCtrl',\n                        templateUrl: 'app/components/otherUserProfile/otherUserProfile.html',\n                        parent: angular.element(document.body),\n                        resolve: {\n                            // controller will not be loaded until $waitForAuth resolves\n                            // Auth refers to our $firebaseAuth wrapper in the example above\n                            \"currentAuth\": [\"refService\", function(refService) {\n                                // $waitForAuth returns a promise so the resolve waits for it to complete\n                                return refService.refAuth().$requireAuth();\n                            }]\n                        },\n                        targetEvent: ev,\n                        clickOutsideToClose: true,\n                    },\n                    $mdDialog.alert()\n                    .openFrom({\n                        top: -50,\n                        width: 30,\n                        height: 80\n                    })\n                    .closeTo({\n                        left: 1500\n                    })\n                );\n            }\n            else {\n                return null;\n            }\n        }\n\n        $scope.editReply = function(ev, reps) {\n            if (ev) {\n                editReplyService.setInfo(\n                    reps.pushKey,\n                    $stateParams.USERNAME,\n                    $stateParams.POST,\n                    currentAuth.uid);\n                $mdDialog.show({\n                        controller: 'editReplyCtrl',\n                        templateUrl: 'app/components/editReply/editReply.html',\n                        parent: angular.element(document.body),\n                        resolve: {\n                            // controller will not be loaded until $waitForAuth resolves\n                            // Auth refers to our $firebaseAuth wrapper in the example above\n                            \"currentAuth\": [\"refService\", function(refService) {\n                                // $waitForAuth returns a promise so the resolve waits for it to complete\n                                return refService.refAuth().$requireAuth();\n                            }]\n                        },\n                        targetEvent: ev,\n                        clickOutsideToClose: true,\n                    },\n                    $mdDialog.alert()\n                    .openFrom({\n                        top: -50,\n                        width: 30,\n                        height: 80\n                    })\n                    .closeTo({\n                        left: 1500\n                    })\n                );\n            }\n            else {\n                if (true)\n                    return null;\n            }\n        }\n\n        $scope.editValue = function(ev) {\n\n            if (ev) {\n                editTopicService.setDateCreated($stateParams.DATE);\n                var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\n                $mdDialog.show({\n                        controller: 'editTopicCtrl',\n                        templateUrl: 'app/components/editTopic/editTopic.html',\n                        parent: angular.element(document.body),\n                        resolve: {\n                            // controller will not be loaded until $waitForAuth resolves\n                            // Auth refers to our $firebaseAuth wrapper in the example above\n                            \"currentAuth\": [\"refService\", function(refService) {\n                                // $waitForAuth returns a promise so the resolve waits for it to complete\n                                return refService.refAuth().$requireAuth();\n                            }]\n                        },\n                        targetEvent: ev,\n                        clickOutsideToClose: true,\n                        fullscreen: useFullScreen\n                    })\n                    .then(function(answer) {\n                        //Then Argument\n                    }, function() {\n                        //Canceled Dialog\n                    });\n\n            }\n            else {\n                return null;\n            }\n        }\n\n        $scope.deletePost = function(rep) {\n            alertify.confirm('Are you sure you want to delete your reply?', function() {\n                refService.ref().child(\"Replies\").child($stateParams.USERNAME + $stateParams.POST).child(rep.pushKey)\n                    .remove(function(error) {\n                        if (error)\n                            alertify.error(\"Deleting Failed : \" + error);\n                        else\n                            alertify.success(\"Sucessfully Deleted!\")\n                    })\n            }, function() {\n                alertify.warn('Canceled')\n            });\n        }\n\n\n\n        $scope.urlSHARINGCURRENT = 'https://ng-fourm-amanuel2.c9users.io/index.html#/authHome/topic/' + $stateParams.POST + '/' + $stateParams.USERNAME\n\n        $scope.openShareMenu = function($mdOpenMenu, ev) {\n            $mdOpenMenu(ev);\n        }\n\n        //////////////////////////////////////////////////////////////////////  CHECK IF YOUR SUPOSE TO SEE  ICONS ////////////////////////////////////////////////////\n\n        $scope.funcCheckEDIT = function(reps) {\n            if (currentAuth.uid == reps.replyCreatorUID)\n                return true;\n            else if ($scope.isModerator == true)\n                return true;\n            else\n                return false;\n        }\n        $scope.goBackTopic = function() {\n            $state.go('authHome.desc')\n        }\n\n        $scope.isReplyable = function(rep) {\n            if (currentAuth.uid == rep.replyCreatorUID)\n                return false;\n\n            else\n                return true;\n        }\n        $scope.isBestAnwser = function(rep) {\n            if ($scope.isModerator == true)\n                return true;\n            else if (currentAuth.uid == rep.replyCreatorUID)\n                return true;\n            else\n                return false;\n        }\n\n\n\n        $scope.isLikeable = function(rep) {\n            if (currentAuth.uid == rep.replyCreatorUID)\n                return false;\n            else if (currentAuth.uid == null)\n                return false;\n            else\n                return true;\n        }\n\n        $scope.isShareble = function(rep) {\n            if (true)\n                return true;\n            else\n                return false;\n        }\n\n        $scope.isFlaggable = function(rep) {\n            if (currentAuth.uid == rep.replyCreatorUID)\n                return false;\n\n            else\n                return true;\n        }\n        $scope.isBookmarkable = function(rep) {\n                if ($scope.currentAuthGet)\n                    return true;\n\n                else\n                    return false;\n            }\n            ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n        //////////////////////////////////////////////////////****** TOGGLING ICONS ***** //////////////////////////////////////////////////////////////\n\n\n\n        ////Check Box\n\n\n\n\n\n        function isCheckedHelper(rep) {\n            var returnerCheck = \"\";\n            refService.ref().child(\"Topics\").once(\"value\", function(snapshotBestAnwserOutlineTopic) {\n                snapshotBestAnwserOutlineTopic.forEach(function(evenChildBook) {\n                    var bookkey = evenChildBook.key();\n                    var bookchildData = evenChildBook.val();\n                    if (bookchildData.Postnum == $stateParams.POST) {\n                        refService.ref().child(\"Topics\").child(bookchildData.pushKey).child(\"BestAnwser\").once(\"value\", function(snapBest) {\n                            if(snapBest.val()) {\n                                if (snapBest.val().isBestAnwser == true && snapBest.val().replyNumber == rep.Replynum)\n                                    returnerCheck = \"True\";\n                                else\n                                    returnerCheck = \"False\";\n                            }\n                            else\n                                returnerCheck = \"False\";\n                        })\n                    }\n                })\n            })\n            return returnerCheck;\n        }\n\n        $scope.isChecked = function(rep) {\n            if (isCheckedHelper(rep) == \"True\")\n                return true;\n            else\n                return false;\n        }\n\n        $scope.classBestAnwser = function(rep) {\n            if (isCheckedHelper(rep) == \"True\")\n                return \"best-answer\";\n            else\n                return \"none\";\n        }\n\n       function bestAnwserRegister(rep) {\n            $scope.TOTAL_POINTS_BEST_ANWSERY_LIKES = 0;\n            refService.ref().child(\"UserAuthInfo\").child(rep.replyCreatorUID).child(\"PointsOBJ\").child($scope.currentAuthGet.uid + \"TOPIC:\" + $stateParams.POST + \"REPLY:\" + rep.Replynum + \"BESTANSWER\").set({\n                Point: 15\n            })\n            refService.ref().child(\"UserAuthInfo\").child(rep.replyCreatorUID).child(\"PointsOBJ\").once(\"value\", function(downVoteCheck) {\n\n                for (var i in downVoteCheck.val())\n                    $scope.TOTAL_POINTS_BEST_ANWSERY_LIKES = $scope.TOTAL_POINTS_BEST_ANWSERY_LIKES + (downVoteCheck.val()[i].Point)\n\n                refService.ref().child(\"UserAuthInfo\").child(rep.replyCreatorUID).update({\n                    Points: $scope.TOTAL_POINTS_BEST_ANWSERY_LIKES\n                })\n\n            })\n\n        }\n        function unbestAnwserRegister(rep) {\n            $scope.TOTAL_POINTS_BEST_ANSWERN_LIKES = 0;\n            refService.ref().child(\"UserAuthInfo\").child(rep.replyCreatorUID).child(\"PointsOBJ\").child($scope.currentAuthGet.uid + \"TOPIC:\" + $stateParams.POST + \"REPLY:\" + rep.Replynum + \"BESTANSWER\").set({\n                Point: 0\n            })\n            refService.ref().child(\"UserAuthInfo\").child(rep.replyCreatorUID).child(\"PointsOBJ\").once(\"value\", function(downVoteCheck) {\n\n                for (var i in downVoteCheck.val())\n                    $scope.TOTAL_POINTS_BEST_ANSWERN_LIKES = $scope.TOTAL_POINTS_BEST_ANSWERN_LIKES + (downVoteCheck.val()[i].Point)\n\n                refService.ref().child(\"UserAuthInfo\").child(rep.replyCreatorUID).update({\n                    Points: $scope.TOTAL_POINTS_BEST_ANSWERN_LIKES\n                })\n\n            })\n\n        }\n        \n        \n        $scope.notChecked = function(rep) {\n            $scope.isChecked = true;\n\n            refService.ref().child(\"Topics\").once(\"value\", function(snapshotBestAnwserOutlineTopic) {\n                snapshotBestAnwserOutlineTopic.forEach(function(evenChildBook) {\n                    var bookkey = evenChildBook.key();\n                    var bookchildData = evenChildBook.val();\n                    if (bookchildData.Postnum == $stateParams.POST) {\n                        refService.ref().child(\"Topics\").child(bookchildData.pushKey).child(\"BestAnwser\").update({\n                            isBestAnwser: true,\n                            replyNumber: rep.Replynum\n                        })\n                        bestAnwserRegister(rep);\n                    }\n                })\n            })\n\n        }\n\n        $scope.checked = function(rep) {\n            $scope.isChecked = false;\n            refService.ref().child(\"Topics\").once(\"value\", function(snapshotBestAnwserOutlineTopic) {\n                snapshotBestAnwserOutlineTopic.forEach(function(evenChildBook) {\n                    var bookkey = evenChildBook.key();\n                    var bookchildData = evenChildBook.val();\n                    if (bookchildData.Postnum == $stateParams.POST) {\n                        refService.ref().child(\"Topics\").child(bookchildData.pushKey).child(\"BestAnwser\").update({\n                            isBestAnwser: false,\n                            replyNumber: null\n                        })\n                        unbestAnwserRegister(rep);\n                    }\n                })\n            })\n        }\n\n        // $scope.checkBoxNot = false;\n        // $scope.checkBoxYes = false;\n        // $scope.checkBoxTrueCheck = $firebaseArray(refService.ref().child(\"Topics\"));\n\n        // function actualHelperYes(reps) {\n        //     $scope.inside;\n        //     $scope.checkBoxTrueCheck.$loaded(function(CHECKINGTRUE) {\n        //         for (var i = 0; i < CHECKINGTRUE.length; i++) {\n        //             if (CHECKINGTRUE[i].Postnum == $stateParams.POST) {\n        //                 if (CHECKINGTRUE[i].IsAcceptedAnwser == true && CHECKINGTRUE[i].AcceptedAnwserReplyNum == reps.Replynum) {\n        //                     console.log(CHECKINGTRUE[i].AcceptedAnwserReplyNum, reps.Replynum);\n        //                     $scope.inside = true;\n        //                 }\n        //                 else {\n        //                     $scope.inside = true;\n        //                 }\n        //             }\n        //         }\n        //     })\n        //     return $scope.inside;\n        // }\n        // $scope.checkFuncYes = function(reps) {\n        //     if (actualHelperYes(reps) == true) {\n        //         return true;\n        //     }\n        //     else {\n        //         console.log(actualHelperYes(reps));\n        //         return false;\n        //     }\n        // }\n        // $scope.checkBoxTrueCheck.$loaded(function(CHECKINGTRUE) {\n        //     for (var i = 0; i < CHECKINGTRUE.length; i++) {\n        //         if (CHECKINGTRUE[i].Postnum == $stateParams.POST) {\n        //             if (CHECKINGTRUE[i].IsAcceptedAnwser == true) {\n        //                 $scope.checkBoxYes = true;\n        //             }\n        //             else {\n        //                 $scope.checkBoxNot = true;\n        //             }\n        //         }\n        //     }\n        // })\n\n        // $scope.checkBoxNotNgClick = function(rep) {\n        //     $scope.checkBoxYes = true;\n        //     $scope.checkBoxNot = false;\n        //     $scope.dataNot = $firebaseArray(refService.ref().child(\"Topics\"));\n        //     $scope.dataNot.$loaded(function(dataNoNgClick) {\n        //         for (var i = 0; i < dataNoNgClick.length; i++) {\n        //             if (dataNoNgClick[i].Postnum == $stateParams.POST) {\n        //                 refService.ref().child(\"Topics\").child(dataNoNgClick[i].pushKey).update({\n        //                     IsAcceptedAnwser: true,\n        //                     AcceptedAnwserReplyNum: rep.Replynum\n        //                 })\n        //             }\n        //         }\n        //     })\n        // }\n\n        // function bestAnwserImageIfHelper() {\n        //     $scope.decicor;\n        //     $scope.dataNot = $firebaseArray(refService.ref().child(\"Topics\"));\n        //     $scope.dataNot.$loaded(function(dataNoNgClick) {\n        //         for (var i = 0; i < dataNoNgClick.length; i++) {\n        //             if (dataNoNgClick[i].Postnum == $stateParams.POST) {\n        //                 refService.ref().child(\"Topics\").child(dataNoNgClick[i].pushKey).on(\"value\", function(snapshotChild) {\n        //                     if (snapshotChild.val().IsAcceptedAnwser == true) {\n        //                         $scope.decicor = true\n        //                     }\n        //                     else {\n        //                         $scope.decicor = false\n        //                     }\n        //                 })\n\n        //             }\n        //         }\n\n        //         if ($scope.decicor == true) {\n        //             return \"True\"\n        //         }\n        //         else {\n        //             return \"Not\"\n        //         }\n        //     })\n        // }\n        // $scope.bestAnwserImageIf = function(rep) {\n        //     if (bestAnwserImageIfHelper() == \"True\") {\n        //         return true;\n        //     }\n        //     else {\n        //         return false;\n        //     }\n        // }\n\n\n        // $scope.checkBoxNgClick = function(rep) {\n        //     $scope.checkBoxYes = false;\n        //     $scope.checkBoxNot = true;\n        //     $scope.dataYes = $firebaseArray(refService.ref().child(\"Topics\"));\n        //     $scope.dataYes.$loaded(function(dataYesNgCLick) {\n        //         for (var i = 0; i < dataYesNgCLick.length; i++) {\n        //             if (dataYesNgCLick[i].Postnum == $stateParams.POST) {\n        //                 refService.ref().child(\"Topics\").child(dataYesNgCLick[i].pushKey).update({\n        //                     IsAcceptedAnwser: false,\n        //                     AcceptedAnwserReplyNum: -1\n        //                 })\n        //             }\n        //         }\n        //     })\n        // }\n\n        ////Like\n        $scope.likeBoxNo = true;\n        $scope.likeBoxYes = false;\n\n        function liked(rep) {\n            var returner = \"\";\n            refService.ref().child(\"Replies\").child($stateParams.USERNAME + $stateParams.POST).once(\"value\", function(snapshotLikeOutlineTopic) {\n                snapshotLikeOutlineTopic.forEach(function(evenChildBook) {\n                    var bookkey = evenChildBook.key();\n                    var bookchildData = evenChildBook.val();\n                    if (bookchildData.Replynum == (rep.Replynum)) {\n                        refService.ref().child(\"Replies\").child($stateParams.USERNAME + $stateParams.POST).child(bookchildData.pushKey).child(\"Likes\").child($scope.currentAuthGet.uid).once(\"value\", function(snapp) {\n                            if (snapp.val() == null)\n                                returner = \"False\";\n                            else {\n                                if (snapp.val().Like == true)\n                                    returner = \"True\"\n                                else\n                                    returner = \"False\";\n                            }\n                        })\n                    }\n                })\n            })\n            return returner;\n        }\n        $scope.likeBox = function(rep) {\n            if (liked(rep) == \"True\")\n                return true;\n            else if (liked(rep) == \"False\")\n                return false;\n        }\n\n        function likeRegister(rep) {\n            $scope.TOTAL_POINTS_REPLIES_LIKES = 0;\n            refService.ref().child(\"UserAuthInfo\").child(rep.replyCreatorUID).child(\"PointsOBJ\").child($scope.currentAuthGet.uid + \"TOPIC:\" + $stateParams.POST + \"REPLY:\" + rep.Replynum).set({\n                Point: 5\n            })\n            refService.ref().child(\"UserAuthInfo\").child(rep.replyCreatorUID).child(\"PointsOBJ\").once(\"value\", function(downVoteCheck) {\n\n                for (var i in downVoteCheck.val())\n                    $scope.TOTAL_POINTS_REPLIES_LIKES = $scope.TOTAL_POINTS_REPLIES_LIKES + (downVoteCheck.val()[i].Point)\n\n                refService.ref().child(\"UserAuthInfo\").child(rep.replyCreatorUID).update({\n                    Points: $scope.TOTAL_POINTS_REPLIES_LIKES\n                })\n\n            })\n\n        }\n        function unLikeRegister(rep) {\n            $scope.TOTAL_POINTS_REPLIES_LIKES = 0;\n            refService.ref().child(\"UserAuthInfo\").child(rep.replyCreatorUID).child(\"PointsOBJ\").child($scope.currentAuthGet.uid + \"TOPIC:\" + $stateParams.POST + \"REPLY:\" + rep.Replynum).set({\n                Point: 0\n            })\n            refService.ref().child(\"UserAuthInfo\").child(rep.replyCreatorUID).child(\"PointsOBJ\").once(\"value\", function(downVoteCheck) {\n\n                for (var i in downVoteCheck.val())\n                    $scope.TOTAL_POINTS_REPLIES_LIKES = $scope.TOTAL_POINTS_REPLIES_LIKES + (downVoteCheck.val()[i].Point)\n\n                refService.ref().child(\"UserAuthInfo\").child(rep.replyCreatorUID).update({\n                    Points: $scope.TOTAL_POINTS_REPLIES_LIKES\n                })\n\n            })\n\n        }\n        \n        $scope.likeBoxNoNgClick = function(rep) {\n            //Your About To Like the Post\n            $scope.likeBoxYes = true;\n            $scope.likeBoxNo = false;\n            refService.ref().child(\"Replies\").child($stateParams.USERNAME + $stateParams.POST).once(\"value\", function(snapshotLikeOutlineTopic) {\n                snapshotLikeOutlineTopic.forEach(function(evenChildBook) {\n                    var bookkey = evenChildBook.key();\n                    var bookchildData = evenChildBook.val();\n                    if (bookchildData.Replynum == (rep.Replynum)) {\n                        refService.ref().child(\"Replies\").child($stateParams.USERNAME + $stateParams.POST).child(bookchildData.pushKey).child(\"Likes\").child($scope.currentAuthGet.uid).update({\n                            Like: true,\n                            Avatar: $scope.currentUserAvatar\n                        })\n                        likeRegister(rep);\n                    }\n                })\n            })\n        }\n\n\n        $scope.likeBoxYesNgClick = function(rep) {\n            $scope.likeBoxYes = false;\n            $scope.likeBoxNo = true;\n            refService.ref().child(\"Replies\").child($stateParams.USERNAME + $stateParams.POST).once(\"value\", function(snapshotLikeOutlineTopic) {\n                snapshotLikeOutlineTopic.forEach(function(evenChildBook) {\n                    var bookkey = evenChildBook.key();\n                    var bookchildData = evenChildBook.val();\n                    if (bookchildData.Replynum == (rep.Replynum)) {\n                        refService.ref().child(\"Replies\").child($stateParams.USERNAME + $stateParams.POST).child(bookchildData.pushKey).child(\"Likes\").child($scope.currentAuthGet.uid).update({\n                            Like: false,\n                            Avarar: $scope.currentUserAvatar\n                        })\n                        unLikeRegister(rep);\n                    }\n                })\n            })\n        }\n\n\n        //Bookmark\n        $scope.bookmarkBoxNo = true;\n        $scope.bookmarkBoxYes = false;\n\n        $scope.bookmarkBoxNoNgClick = function(rep) {\n            $scope.bookmarkBoxYes = true;\n            $scope.bookmarkBoxNo = false;\n        }\n\n\n        $scope.bookmarkBoxYesNgClick = function(rep) {\n            $scope.bookmarkBoxYes = false;\n            $scope.bookmarkBoxNo = true;\n        }\n\n\n        //Like Views\n\n\n        /*\n        $scope.objBookmark = $firebaseObject(refService.ref().child(\"Topics\"))\n                             $scope.objBookmark.$loaded(function(dataBook){\n                                 for(var prop in dataBook){\n                                     console.log(prop);\n                                     if(dataBook[prop] !== null) {\n                                         if(dataBook[prop].Postnum == $stateParams.POST) {\n                                             refService.ref().child(\"Topics\").child(dataBook[prop].pushKey).child(\"Bookmarks\").child($scope.currentAuthGet.uid).on(\"value\", function(snapap){\n                                                   if(snapap.val() !== null) {\n                                                       $scope.bookMarkToggleTopic = !(snapap.val().Bookmark);\n                                                   }\n                                             })\n                                         }\n                                     }\n                                 }\n                             })\n                            \n                              $scope.tagCheckPrev = $firebaseObject(refService.ref().child(\"Constants\").child(\"Tags\"));\n\n         \n                            refService.ref().child(\"Topics\").once(\"value\", function(snapshotBookMarkOutlineTopic) {\n                                    snapshotBookMarkOutlineTopic.forEach(function(evenChildBook) {\n                                        var bookkey = evenChildBook.key();\n                                        var bookchildData = evenChildBook.val();\n                                        if (bookchildData.Postnum == $stateParams.POST) {\n                                            var firebaseCheckBookmark = $firebaseObject(refService.ref().child(\"Topics\").child(bookchildData.pushKey).child(\"Bookmarks\"))\n                                            firebaseCheckBookmark.$loaded(function(dataC) {\n                                                if(dataC[$scope.currentAuthGet.uid]){\n                                                    refService.ref().child(\"Topics\").child(bookchildData.pushKey).child(\"Bookmarks\").child($scope.currentAuthGet.uid).on(\"value\", function(snapap){\n                                                       if(snapap.val() !== null) {\n                                                           $scope.bookMarkToggleTopic = snapap.val().Bookmark;\n                                                       }\n                                                    })\n                                                }\n                                                else\n                                                    $scope.bookMarkToggleTopic = true;\n                                            })\n                                            \n                                        }\n                                    })\n                             })\n                    \n        */\n        //TOPIC BUTTONS//////////////////BEGIN//////////////////////////////////////\n\n        function VoteHelper() {\n            var returne = ''\n            refService.ref().child(\"Topics\").once(\"value\", function(snapshotBookMarkOutlineTopic) {\n                snapshotBookMarkOutlineTopic.forEach(function(evenChildBook) {\n                    var bookkey = evenChildBook.key();\n                    var bookchildData = evenChildBook.val();\n                    if (bookchildData.Postnum == $stateParams.POST) {\n                        refService.ref().child(\"Topics\").child(bookchildData.pushKey).child(\"Vote\").child($scope.currentAuthGet.uid).once(\"value\", function(snapSHOT) {\n                            if(snapSHOT.val()) {\n                                if (snapSHOT.val().Vote == 1)\n                                    returne = 'Up';\n                                else if (snapSHOT.val().Vote == -1)\n                                    returne = 'Down'\n                            }\n                        })\n                    }\n                })\n            })\n            return returne;\n        }\n        $scope.upVoteCheck = function() {\n            if (VoteHelper() == 'Up')\n                return 'upvote';\n        }\n\n        $scope.downVoteCheck = function() {\n            if (VoteHelper() == 'Down')\n                return 'downvote';\n        }\n\n        //BookMark\n        //Ng-if\n        //Toggle\n        //$scope.bookMarkToggleTopic = true;\n        $scope.objBookmark = $firebaseObject(refService.ref().child(\"Topics\"))\n        $scope.objBookmark.$loaded(function(dataBook) {\n                for (var prop in dataBook) {\n                    if (dataBook[prop] !== null) {\n                        if (dataBook[prop].Postnum == $stateParams.POST) {\n                            refService.ref().child(\"Topics\").child(dataBook[prop].pushKey).child(\"Bookmarks\").child($scope.currentAuthGet.uid).on(\"value\", function(snapap) {\n                                if (snapap.val() !== null) {\n                                    $scope.bookMarkToggleTopic = !(snapap.val().Bookmark);\n                                }\n                                else\n                                    $scope.bookMarkToggleTopic = true;\n                            })\n                        }\n                    }\n                }\n            })\n            //Ng-Click        \n        $scope.bookmarkClickOutlineTopic = function() {\n            refService.ref().child(\"Topics\").once(\"value\", function(snapshotBookMarkOutlineTopic) {\n                snapshotBookMarkOutlineTopic.forEach(function(evenChildBook) {\n                    var bookkey = evenChildBook.key();\n                    var bookchildData = evenChildBook.val();\n                    if (bookchildData.Postnum == $stateParams.POST) {\n                        refService.ref().child(\"Topics\").child(bookchildData.pushKey).child(\"Bookmarks\").child($scope.currentAuthGet.uid).update({\n                            Bookmark: true\n                        })\n                    }\n                })\n            })\n            $scope.bookMarkToggleTopic = false;\n        }\n        $scope.bookmarkClickNonOutlineTopic = function() {\n            refService.ref().child(\"Topics\").once(\"value\", function(snapshotBookMarkOutlineTopic) {\n                snapshotBookMarkOutlineTopic.forEach(function(evenChildBook) {\n                    var bookkey = evenChildBook.key();\n                    var bookchildData = evenChildBook.val();\n                    if (bookchildData.Postnum == $stateParams.POST) {\n                        refService.ref().child(\"Topics\").child(bookchildData.pushKey).child(\"Bookmarks\").child($scope.currentAuthGet.uid).update({\n                            Bookmark: false\n                        })\n                    }\n                })\n            })\n            $scope.bookMarkToggleTopic = true;\n        }\n\n        //Edit\n        //ng-if\n        $scope.editTopicPriv = function() {\n            if ($scope.isModerator == true)\n                return true;\n            else if ($scope.creatorUID == ($scope.currentAuthGet.uid || currentAuth.uid))\n                return true;\n            else\n                return false;\n        }\n        $scope.flagSee = function() {\n            if ($scope.isModerator == true)\n                return true;\n            else if (currentAuth.uid == $scope.creatorUID)\n                return false;\n            else if (currentAuth.uid == null)\n                return false;\n            else\n                return true;\n        }\n\n        //ng-click\n        $scope.editTopic = function(ev) {\n            if (ev) {\n                var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\n                $mdDialog.show({\n                        controller: 'editTopicPanelCtrl',\n                        templateUrl: 'app/components/editTopicPanel/editTopicPanel.html',\n                        parent: angular.element(document.body),\n                        resolve: {\n\n                            \"currentAuth\": [\"refService\", function(refService) {\n                             \n                            }]\n                        },\n                        targetEvent: ev,\n                        clickOutsideToClose: true,\n                        fullscreen: useFullScreen\n                    })\n                    .then(function(answer) {\n                      \n                    }, function() {\n                      \n                    });\n                 }\n\n           /* refService.ref().child(\"Topics\").once(\"value\", function(snap){\n                snap.forEach(function(snapChild){\n                    if(snapChild.val().Postnum == $stateParams.POST){\n                        $scope.markdownData = snapChild.val().Value;\n                         $(\"html, body\").animate({ scrollTop: $(document).height() }, 1000);\n                    }\n                })\n            })*/\n            \n        }\n        \n\n        \n        $scope.titleReply = \"Create a New Reply\";\n        $scope.replyTagsShow = false;\n\n        $scope.canDeleteCheck = function(rep) {\n            if ($scope.isModerator == true)\n                return true;\n            else\n                return false;\n        }\n\n        //Delete\n        //Ng-if\n        $scope.deleteTopicPriv = function() {\n            if ($scope.isModerator == true)\n                return true;\n            else\n                return false;\n        }\n\n        //Ng-Click\n        $scope.deleteTopic = function() {\n            vex.dialog.confirm({\n                message: 'Are you sure you want to delete this topic?',\n                callback: function(value) {\n                    if (value == true) {\n                        refService.ref().child(\"Topics\").once(\"value\", function(snapshotTopic) {\n                            snapshotTopic.forEach(function(evenChildBook) {\n                                var bookkey = evenChildBook.key();\n                                var bookchildData = evenChildBook.val();\n                                if (bookchildData.Postnum == $stateParams.POST) {\n                                    refService.ref().child(\"Topics\").child(bookchildData.pushKey)\n                                        .remove(function(error) {\n                                            if (error)\n                                                alertify.error(\"Deleting Topic Failed\");\n                                            else {\n                                                refService.ref().child(\"Replies\").child($stateParams.USERNAME + $stateParams.POST)\n                                                    .remove(function(error) {\n                                                        if (error)\n                                                            alertify.error(\"Deleting Topic Failed\");\n                                                        else {\n                                                            alertify.success(\"Deleted, Successfully\")\n                                                        }\n                                                    })\n                                            }\n                                        })\n                                }\n                            })\n                        })\n                    }\n                }\n            });\n        }\n        $scope.repliesLikesNum = [];\n        var count_likes = 0;\n        refService.ref().child(\"Replies\").child($stateParams.USERNAME + $stateParams.POST).on(\"value\", function(snapRepNum) {\n            snapRepNum.forEach(function(snapRepNumChild) {\n                var key = snapRepNumChild.key();\n                var childData = snapRepNumChild.val();\n                if (childData.Likes) {\n\n                    for (var i in childData.Likes)\n                        count_likes++;\n\n                    $scope.repliesLikesNum.push(count_likes)\n                    count_likes = 0;\n\n\n                }\n                //    $scope.repliesLikesNum.push(childData.Likes)\n                else\n                    $scope.repliesLikesNum.push(0)\n            })\n        })\n\n        $scope.seeTopicLikes = function(num_likes, rep, ev) {\n            if (ev) {\n                topicLikesService.setInfo(num_likes, rep);\n                var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\n                $mdDialog.show({\n                        controller: 'viewTopicLikes',\n                        templateUrl: 'app/components/viewTopicLikes/viewTopicLikes.html',\n                        parent: angular.element(document.body),\n                        resolve: {\n                            // controller will not be loaded until $waitForAuth resolves\n                            // Auth refers to our $firebaseAuth wrapper in the example above\n                            \"currentAuth\": [\"refService\", function(refService) {\n                                // $waitForAuth returns a promise so the resolve waits for it to complete\n                                return refService.refAuth().$requireAuth();\n                            }]\n                        },\n                        targetEvent: ev,\n                        clickOutsideToClose: true,\n                        fullscreen: useFullScreen\n                    })\n                    .then(function(answer) {\n                        //Then Argument\n                    }, function() {\n                        //Canceled Dialog\n                    });\n            }\n            else {\n                return null;\n            }\n        }\n        \n        \n        \n        \n        /////////////////////////////////REPLIES///////////////////////////////\n        \n        \n        \n        \n        \n                var elem_hash = '';\n        $scope.dataTrib = [];\n        $scope.dataTribHash = [];\n        refService.ref().child(\"UserAuthInfo\").once(\"value\", function(snapUser) {\n            snapUser.forEach(function(snapUserEach) {\n                var key = snapUserEach.key();\n                var val = snapUserEach.val();\n                $scope.dataTrib.push({\n                    key: '<img src=\"' + val.Image + '\" width=\"30px\" height=\"30px\"/> ' + val.Username,\n                    value: val.Username\n                })\n                var tribute = new Tribute({\n                    trigger: '@',\n                    values: $scope.dataTrib,\n                })\n                angular.element(document).ready(function() {\n                    tribute.attach(document.getElementById('markdownUserType'));\n                })\n\n            })\n        })\n\n        refService.ref().child(\"Topics\").once(\"value\", function(snapTopic) {\n            snapTopic.forEach(function(snapTopicEven) {\n                var key = snapTopicEven.key();\n                var val = snapTopicEven.val();\n                $scope.dataTribHash.push({\n                    key: \"#\" + val.Postnum + \":\" + val.Title,\n                    value: \"#\" + (val.Postnum)\n                })\n            })\n            var tribute_hash = new Tribute({\n                trigger: '#',\n                values: ($scope.dataTribHash),\n                selectTemplate: function(item) {\n                    return (item.original.value).replace(\"@\", \"\");\n                },\n            })\n            angular.element(document).ready(function() {\n                setTimeout(function() {\n                    tribute_hash.attach(document.getElementById('markdownUserType'));\n                }, 500)\n            })\n        })\n\n\n\n        marked.setOptions({\n            renderer: new marked.Renderer(),\n            gfm: true,\n            tables: true,\n            breaks: false,\n            pedantic: false,\n            sanitize: false,\n            smartLists: true,\n            smartypants: false,\n            highlight: function(code, lang) {\n                if (lang) {\n                    return hljs.highlight(lang, code).value;\n                }\n                else {\n                    return hljs.highlightAuto(code).value;\n                }\n            }\n        });\n\n        $scope.emojieList = emojiListService.getEmojies();\n        $scope.$watch('markdownData', function(current, original) {\n            if (current)\n                $scope.outputText = marked(current);\n            //EMOJIE LIST {PARAM} {https://github.com/amanuel2/ng-forum/wiki/How-to-write-emotions}\n            if ($scope.outputText) {\n                for (var prop in $scope.emojieList)\n                    $scope.outputText = $scope.outputText.replaceAll(prop, $scope.emojieList[prop]);\n            }\n        });\n\n        $scope.shortcuts = function(shortcutName) {\n            var element = document.getElementById('markdownUserType');\n            switch (shortcutName) {\n                case 'bold':\n                    element.value += '**BoldTextHere**';\n                    break;\n                case 'italics':\n                    element.value += '_ItalicTextHere_';\n                    break;\n\n                case 'image':\n                    element.value += '![](http://)';\n                    break;\n\n                case 'url':\n                    element.value += '[](http://)';\n                    break;\n\n                case 'quote':\n                    element.value += '> Quote Here';\n                    break;\n\n                case 'number':\n                    element.value += '\\n\\n 1. List item'\n                    break;\n\n                case 'bullet':\n                    element.value += '\\n\\n * List item'\n                    break;\n                case 'header':\n                    element.value += '# Header Here.';\n                    break;\n\n                case 'code':\n                    element.value += \"```[languageName. If you dont know delete this bracket and leave it with three ticks]\\n\" + \"console.log('Code Here') \\n\" + \"```\";\n                    break;\n\n                case 'horizontal':\n                    element.value += \"\\n\\n -----\"\n                    break;\n\n                case 'paste':\n                    if (window.clipboardData) {\n                        element.value += window.clipboardData.getData(\"Text\");\n                    }\n                    else {\n                        alertify.error(window.clipboardData.getData('Text'));\n                    }\n\n                case 'emojies':\n\n                case 'help':\n                    window.open('https://simplemde.com/markdown-guide');\n                    break;\n\n            }\n        }\n\n\n        $scope.emojieStart = function(ev) {\n            if (ev) {\n                var element = document.getElementById('markdownUserType');\n                //emojieTool.setElementInfo(element);\n                var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\n                $mdDialog.show({\n                        controller: 'emojieToolCtrl',\n                        templateUrl: 'app/components/emojieTool/emojieTool.html',\n                        parent: angular.element(document.body),\n                        resolve: {\n                            // controller will not be loaded until $waitForAuth resolves\n                            // Auth refers to our $firebaseAuth wrapper in the example above\n                            \"currentAuth\": [\"refService\", function(refService) {\n                                // $waitForAuth returns a promise so the resolve waits for it to complete\n                                return refService.refAuth().$requireAuth();\n                            }]\n                        },\n                        targetEvent: ev,\n                        clickOutsideToClose: true,\n                        fullscreen: useFullScreen\n                    })\n                    .then(function(answer) {\n                        //Then Argument\n                    }, function() {\n                        //Canceled Dialog\n                    });\n            }\n            else {\n                return null;\n            }\n        }\n\n       \n                    \n\n        $scope.submitNewReply = function() {\n            $scope.numRepliesAlready = $firebaseArray(refService.ref().child(\"Replies\").child($stateParams.USERNAME + $stateParams.POST))\n\n            $scope.numRepliesAlready.$loaded(function(data) {\n                refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGet.uid).on(\"value\", function(snapshot) {\n                    $scope.userAvatar = snapshot.val().Image;\n                    $scope.userName = snapshot.val().Username;\n                    $scope.userEmail = snapshot.val().Email;\n\n                })\n                var pushingR = refService.ref().child(\"Replies\").child($stateParams.USERNAME + $stateParams.POST).push({\n                    replyCreatorUsername: $scope.userName,\n                    replyCreatorAvatar: $scope.userAvatar,\n                    replyCreatorEmail: $scope.userEmail,\n                    replyCreatorUID: $scope.currentAuthGet.uid,\n                    replyCreatorValue: $scope.markdownData,\n                    replyCreatorDate: Date.now(),\n                    Replynum: data.length,\n                    replyCreatorDateParsed: timeService.getTimeF(new Date(parseInt(Date.now()))),\n                    topicCreatorUsername: replyService.creatorUsername,\n                    topicCreatorUID: replyService.creatorUID,\n                    topicCreatorTitle: replyService.creatorTitle,\n                    topicCreatorAvatar: replyService.creatorAvatar,\n                    topicCreatorSince: replyService.timeSinceCreated\n\n                })\n                refService.ref().child(\"Replies\").child($stateParams.USERNAME + $stateParams.POST).child(pushingR.key()).update({\n                    pushKey: pushingR.key()\n                })\n                \n               \n\n\n                //Last Active -Topic\n                $scope.lastAct = $firebaseObject(refService.ref().child(\"Topics\"));\n                $scope.lastAct.$loaded(function(dataLast) {\n                    dataLast.forEach(function(snapDataLastAct) {\n                        if (snapDataLastAct.Postnum == $stateParams.POST) {\n                            refService.ref().child(\"Topics\").child(snapDataLastAct.pushKey).update({\n                                LastActivity: Date.now(),\n                            })\n                            refService.ref().child(\"Topics\").child(snapDataLastAct.pushKey).once(\"value\", function(snapREPVIEWS) {\n                                if (!snapREPVIEWS.val().RepliesNum) {\n                                    console.log(snapREPVIEWS)\n                                    refService.ref().child(\"Topics\").child(snapDataLastAct.pushKey).update({\n                                        RepliesNum: (1)\n                                    })\n                                }\n                                else {\n                                    refService.ref().child(\"Topics\").child(snapDataLastAct.pushKey).update({\n                                        RepliesNum: (snapREPVIEWS.val().RepliesNum + 1)\n                                    })\n                                }\n\n\n                            })\n                        }\n                    })\n                })\n                $scope.markdownData = '';\n                $mdDialog.cancel();\n\n\n            })\n            \n\n\n        }\n        \n        \n        \n        \n        \n        \n        \n        \n        ////////////////////////////REPLIES////////////////////////////////\n        \n        \n        \n    }\n})(angular);\n(function(angular) {\n\n    'use strict';\n    angular\n        .module('ForumApp')\n        .controller('authHome', [\"$scope\", \"$firebaseObject\", \"$state\", \"$mdDialog\", \"badgesService\", \"$mdMedia\", \"$firebaseArray\", \"refService\",\n            \"$mdBottomSheet\", authHomeCtrl\n        ])\n\n    function authHomeCtrl($scope, $firebaseObject, $state, $mdDialog, badgesService, $mdMedia, $firebaseArray, refService, $mdBottomSheet) {\n        $state.go('authHome.desc')\n\n        $scope.currentAuthGetHome = refService.ref().getAuth();\n\n        if ($scope.currentAuthGetHome != null) {\n            var amOnline = refService.ref();\n            var userRef = refService.ref().child(\"presence\").child($scope.currentAuthGetHome.uid);\n            amOnline.on('value', function(snapshot) {\n                if (snapshot.val()) {\n                    userRef.onDisconnect().set(Firebase.ServerValue.TIMESTAMP);\n                    userRef.set(\"Online\");\n                }\n            });\n\n            document.onIdle = function() {\n                userRef.set('idle');\n            }\n            document.onAway = function() {\n                userRef.set('away');\n            }\n            document.onBack = function(isIdle, isAway) {\n                userRef.set('online');\n            }\n        }\n\n\n\n\n\n        //ADD TAGS\n        if (!alertify.myAlert) {\n            alertify.dialog('myAlert', function() {\n                return {\n                    main: function(message) {\n                        this.message = message;\n                    },\n                    setup: function() {\n                        return {\n                            buttons: [{\n                                text: \"Ok!\",\n                                key: 27 /*Esc*/\n                            }],\n                            focus: {\n                                element: 0\n                            }\n                        };\n                    },\n                    prepare: function() {\n                        this.setContent(this.message);\n                    }\n                }\n            });\n        }\n\n\n\n        $scope.authData = refService.ref().getAuth();\n\n        if ($scope.authData) {\n            var currentAuth = refService.ref().getAuth();\n            refService.ref().onAuth(function(authData) {})\n\n            var obj = $firebaseObject(refService.ref().child(\"UserAuthInfo\").child(currentAuth.uid));\n            obj.$loaded(function(data) {\n                    $scope.Username = data.Username;\n                    $scope.Email = data.Email;\n                    $scope.UID = currentAuth.uid;\n                    $scope.image = data.Image;\n\n                    if (data.newUser == true) {\n                        //NewUser Vec\n\n                    }\n                },\n                function(error) {\n                    console.error(\"Error:\", error);\n                }\n            );\n\n        }\n        else {\n            $scope.Username = \"Tester\";\n            $scope.Email = \"Tester@Tester.com\";\n            $scope.UID = \"3424j23k4j32n4un43ui\";\n            $scope.image = 'http://cs624223.vk.me/v624223037/2b1bb/GRTKddkmXiw.jpg'\n                //alertify.myAlert(\"Please Signup to get more feautres. Sign Up Button located at top right.\");\n            $mdDialog.show(\n                $mdDialog.alert()\n                .parent(angular.element(document.querySelector('#popupContainer')))\n                .clickOutsideToClose(true)\n                .title('Sign up!')\n                .textContent('YPlease Signup to get more feautres. Sign Up Button located at top right')\n                .ok('Got it!')\n                .targetEvent(document.body)\n            );\n        }\n\n        $scope.goToProfile = function() {\n            $state.go(\"authHome.profile\", {\n                \"UID\": $scope.currentAuthGetHome.uid\n            })\n        }\n        $scope.openMenu = function($mdOpenMenu, ev) {\n            $mdOpenMenu(ev);\n        }\n\n        $scope.logout = function() {\n            refService.ref().unauth();\n            location.reload(true);\n            location.reload(true);\n        }\n\n        $scope.goToSettings = function() {\n            $state.go(\"authHome.settings\", {\n                \"UID\": $scope.UID,\n                \"USERNAME\": $scope.Username\n            })\n        }\n\n        if ($scope.currentAuthGetHome) {\n            refService.ref().child(\"UserAuthInfo\").child($scope.authData.uid).once(\"value\", function(snapTour) {\n\n                if (snapTour.val().newUser == true) {\n                    $mdDialog.show(\n                        $mdDialog.alert()\n                        .clickOutsideToClose(true)\n                        .title('Welcome New User')\n                        .textContent('Hello, We will like to introduce you to Ng-Forum! First, you can naviagte through your profile, settings, go to this forum, or even logout by clicking on your avatar. If you would like to see badges, FAQ, etc.. you can click on the menu bar. You can navigate through the forum topics, below on this page. And to see replies and so on for a topic, just click on the topic you wish. If you want to create a new topic, just click the create a new topic button. If you have any questions be sure to PM(Private Message) Mods, or email me at abogale2@gmail.com. Hope you enjoy using this forum :) !')\n                        .ariaLabel('Touring New User')\n                        .ok('Got it!')\n                        .targetEvent(document.body)\n                    );\n                    refService.ref().child(\"UserAuthInfo\").child($scope.authData.uid).update({\n                        newUser : false\n                    })\n                }\n            })\n\n\n        }\n\n\n        \n\n        \n        ///////BADGES HANDLING START//////////////////////////////////////\n        if($scope.currentAuthGetHome){\n                $scope.arrBadges = badgesService.getReplyBadges();\n                $scope.activeUserBadgeCount = 0;\n                refService.ref().child(\"Replies\").once(\"value\", function(repSnap) {\n                    repSnap.forEach(function(repSnapChild) {\n                        //amanuelhi0\n                        repSnapChild.forEach(function(repSnapChild2) {\n                            //-KKQtkhkau9bMerPKVrk\n                            if (repSnapChild2.val().replyCreatorUID == $scope.currentAuthGetHome.uid) {\n                                $scope.activeUserBadgeCount++;\n                            }\n                        })\n        \n        \n                        //Bronze\n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.bronze.rankone.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Reply\").child(\"RankOne\").set({\n                                BronzeBadge: $scope.arrBadges.activeUser.bronze.rankone.pushObj\n                            })\n                        }\n                        else {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Reply\").child(\"RankOne\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n                        }\n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.bronze.ranktwo.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Reply\").child(\"RankTwo\").set({\n                                BronzeBadge: $scope.arrBadges.activeUser.bronze.ranktwo.pushObj\n                            })\n                        }\n                        else {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Reply\").child(\"RankTwo\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n                        }\n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.bronze.rankthree.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Reply\").child(\"RankThree\").set({\n                                BronzeBadge: $scope.arrBadges.activeUser.bronze.rankthree.pushObj\n                            })\n                        }\n                        else {\n        \n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Reply\").child(\"RankThree\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n        \n                        }\n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.bronze.rankfour.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Reply\").child(\"RankFour\").set({\n                                BronzeBadge: $scope.arrBadges.activeUser.bronze.rankfour.pushObj\n                            })\n                        }\n        \n                        else {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Reply\").child(\"RankFour\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n                        }\n        \n                        //SILVER        \n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.silver.rankone.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Reply\").child(\"RankOne\").set({\n                                SilverBadge: $scope.arrBadges.activeUser.silver.rankone.pushObj\n                            })\n                        }\n                        else {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Reply\").child(\"RankOne\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n                        }\n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.silver.ranktwo.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Reply\").child(\"RankTwo\").set({\n                                SilverBadge: $scope.arrBadges.activeUser.silver.ranktwo.pushObj\n                            })\n                        }\n                        else {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Reply\").child(\"RankTwo\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n                        }\n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.silver.rankthree.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Reply\").child(\"RankThree\").set({\n                                SilverBadge: $scope.arrBadges.activeUser.silver.rankthree.pushObj\n                            })\n                        }\n                        else {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Reply\").child(\"RankThree\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n                        }\n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.silver.rankfour.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Reply\").child(\"RankFour\").set({\n                                SilverBadge: $scope.arrBadges.activeUser.silver.rankfour.pushObj\n                            })\n                        }\n        \n                        else {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Reply\").child(\"RankFour\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n        \n                        }\n        \n                        //GOLD\n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.gold.rankone.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Reply\").child(\"RankOne\").set({\n                                GoldBadge: $scope.arrBadges.activeUser.gold.rankone.pushObj\n                            })\n                        }\n        \n                        else {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Reply\").child(\"RankOne\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n                        }\n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.gold.ranktwo.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Reply\").child(\"RankTwo\").set({\n                                GoldBadge: $scope.arrBadges.activeUser.gold.ranktwo.pushObj\n                            })\n                        }\n                        else {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Reply\").child(\"RankTwo\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n                        }\n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.gold.rankthree.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Reply\").child(\"RankThree\").set({\n                                GoldBadge: $scope.arrBadges.activeUser.gold.rankthree.pushObj\n                            })\n                        }\n        \n        \n                        else {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Reply\").child(\"RankThree\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n                        }\n        \n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.gold.rankfour.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Reply\").child(\"RankFour\").set({\n                                GoldBadge: $scope.arrBadges.activeUser.gold.rankfour.pushObj\n                            })\n                        }\n        \n                        else {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Reply\").child(\"RankFour\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n                        }\n        \n                        //PLATINUM\n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.platinum.rankone.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"PlatinumBadge\").child(\"Reply\").child(\"RankOne\").set({\n                                PlatinumBadge: $scope.arrBadges.activeUser.platinum.rankone.pushObj\n                            })\n                        }\n        \n                        else {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"PlatinumBadge\").child(\"Reply\").child(\"RankOne\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n                        }\n        \n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.platinum.ranktwo.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"PlatinumBadge\").child(\"Reply\").child(\"RankTwo\").set({\n                                PlatinumBadge: $scope.arrBadges.activeUser.platinum.ranktwo.pushObj\n                            })\n                        }\n                        else {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"PlatinumBadge\").child(\"Reply\").child(\"RankTwo\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n                        }\n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.platinum.rankthree.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"PlatinumBadge\").child(\"Reply\").child(\"RankThree\").set({\n                                PlatinumBadge: $scope.arrBadges.activeUser.platinum.rankthree.pushObj\n                            })\n                        }\n                        else {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"PlatinumBadge\").child(\"Reply\").child(\"RankThree\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n                        }\n        \n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.platinum.rankfour.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"PlatinumBadge\").child(\"Reply\").child(\"RankFour\").set({\n                                PlatinumBadge: $scope.arrBadges.activeUser.platinum.rankfour.pushObj\n                            })\n                        }\n        \n                        else {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"PlatinumBadge\").child(\"Reply\").child(\"RankFour\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n                        }\n        \n        \n                    })\n        \n                })\n        \n        \n        \n                $scope.topicBadges = badgesService.getTopicBadges();\n                $scope.topicCount = 0;\n                refService.ref().child(\"Topics\").once(\"value\", function(snapBadTopics) {\n                    snapBadTopics.forEach(function(snapBadTopicsChild) {\n                            if (snapBadTopicsChild.val().UID == $scope.currentAuthGetHome.uid)\n                                $scope.topicCount++;\n                        })\n                        //BRONZE\n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.bronze.rankone.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Topics\").child(\"RankOne\").set({\n                            BronzeBadge: $scope.topicBadges.questionLover.bronze.rankone.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Topics\").child(\"RankOne\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.bronze.ranktwo.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Topics\").child(\"RankTwo\").set({\n                            BronzeBadge: $scope.topicBadges.questionLover.bronze.ranktwo.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Topics\").child(\"RankTwo\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.bronze.rankthree.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Topics\").child(\"RankThree\").set({\n                            BronzeBadge: $scope.topicBadges.questionLover.bronze.rankthree.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Topics\").child(\"RankThree\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.bronze.rankfour.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Topics\").child(\"RankFour\").set({\n                            BronzeBadge: $scope.topicBadges.questionLover.bronze.rankfour.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Topics\").child(\"RankFour\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n        \n                    //SILVER\n        \n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.silver.rankone.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Topics\").child(\"RankOne\").set({\n                            SilverBadge: $scope.topicBadges.questionLover.silver.rankone.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Topics\").child(\"RankOne\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.silver.ranktwo.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Topics\").child(\"RankTwo\").set({\n                            SilverBadge: $scope.topicBadges.questionLover.silver.ranktwo.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Topics\").child(\"RankTwo\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.silver.rankthree.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Topics\").child(\"RankThree\").set({\n                            SilverBadge: $scope.topicBadges.questionLover.silver.rankthree.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Topics\").child(\"RankThree\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.silver.rankfour.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Topics\").child(\"RankFour\").set({\n                            SilverBadge: $scope.topicBadges.questionLover.silver.rankfour.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Topics\").child(\"RankFour\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n        \n                    //GOLD\n        \n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.gold.rankone.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Topics\").child(\"RankOne\").set({\n                            GoldBadge: $scope.topicBadges.questionLover.gold.rankone.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Topics\").child(\"RankOne\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.gold.ranktwo.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Topics\").child(\"RankTwo\").set({\n                            GoldBadge: $scope.topicBadges.questionLover.gold.ranktwo.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Topics\").child(\"RankTwo\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.gold.rankthree.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Topics\").child(\"RankThree\").set({\n                            GoldBadge: $scope.topicBadges.questionLover.gold.rankthree.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Topics\").child(\"RankThree\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.gold.rankfour.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Topics\").child(\"RankFour\").set({\n                            GoldBadge: $scope.topicBadges.questionLover.gold.rankfour.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Topics\").child(\"RankFour\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n        \n        \n                    //PLATNIUM\n        \n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.platinum.rankone.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"Topics\").child(\"RankOne\").set({\n                            Platinum: $scope.topicBadges.questionLover.platinum.rankone.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"Topics\").child(\"RankOne\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.platinum.ranktwo.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"Topics\").child(\"RankTwo\").set({\n                            Platinum: $scope.topicBadges.questionLover.platinum.ranktwo.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"Topics\").child(\"RankTwo\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.platinum.rankthree.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"Topics\").child(\"RankThree\").set({\n                            Platinum: $scope.topicBadges.questionLover.platinum.rankthree.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"Topics\").child(\"RankThree\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.platinum.rankfour.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"Topics\").child(\"RankFour\").set({\n                            Platinum: $scope.topicBadges.questionLover.platinum.rankfour.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"Topics\").child(\"RankFour\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n        \n        \n                })\n        \n        \n                $scope.daysVistedBadge = badgesService.getDaysVisitedBadges();\n                refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).once(\"value\", function(daysVisited) {\n        \n                    $scope.daysSinceJoined = moment.duration((moment(new Date())).diff(moment(new Date(parseInt(daysVisited.val().DateJoined)))))._days\n        \n                    //Bronze\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.bronze.rankone.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Bronze\").child(\"DaysVisted\").child(\"RankOne\").set({\n                            Bronze: $scope.daysVistedBadge.daysVisited.bronze.rankone.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Bronze\").child(\"DaysVisted\").child(\"RankOne\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.bronze.ranktwo.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Bronze\").child(\"DaysVisted\").child(\"RankTwo\").set({\n                            Bronze: $scope.daysVistedBadge.daysVisited.bronze.ranktwo.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Bronze\").child(\"DaysVisted\").child(\"RankTwo\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.bronze.rankthree.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Bronze\").child(\"DaysVisted\").child(\"RankThree\").set({\n                            Bronze: $scope.daysVistedBadge.daysVisited.bronze.rankthree.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Bronze\").child(\"DaysVisted\").child(\"RankThree\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.bronze.rankfour.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Bronze\").child(\"DaysVisted\").child(\"RankFour\").set({\n                            Bronze: $scope.daysVistedBadge.daysVisited.bronze.rankfour.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Bronze\").child(\"DaysVisted\").child(\"RankFour\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n        \n        \n                    //Silver\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.silver.rankone.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Silver\").child(\"DaysVisted\").child(\"RankOne\").set({\n                            Silver: $scope.daysVistedBadge.daysVisited.silver.rankone.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Silver\").child(\"DaysVisted\").child(\"RankOne\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.silver.ranktwo.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Silver\").child(\"DaysVisted\").child(\"RankTwo\").set({\n                            Silver: $scope.daysVistedBadge.daysVisited.silver.ranktwo.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Silver\").child(\"DaysVisted\").child(\"RankTwo\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.silver.rankthree.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Silver\").child(\"DaysVisted\").child(\"RankThree\").set({\n                            Silver: $scope.daysVistedBadge.daysVisited.silver.rankthree.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Silver\").child(\"DaysVisted\").child(\"RankThree\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.silver.rankfour.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Silver\").child(\"DaysVisted\").child(\"RankFour\").set({\n                            Silver: $scope.daysVistedBadge.daysVisited.silver.rankfour.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Silver\").child(\"DaysVisted\").child(\"RankFour\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n        \n                    //Gold\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.gold.rankone.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Gold\").child(\"DaysVisted\").child(\"RankOne\").set({\n                            Gold: $scope.daysVistedBadge.daysVisited.gold.rankone.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Gold\").child(\"DaysVisted\").child(\"RankOne\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.gold.ranktwo.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Gold\").child(\"DaysVisted\").child(\"RankTwo\").set({\n                            Gold: $scope.daysVistedBadge.daysVisited.gold.ranktwo.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Gold\").child(\"DaysVisted\").child(\"RankTwo\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.gold.rankthree.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Gold\").child(\"DaysVisted\").child(\"RankThree\").set({\n                            Gold: $scope.daysVistedBadge.daysVisited.gold.rankthree.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Gold\").child(\"DaysVisted\").child(\"RankThree\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.gold.rankfour.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Gold\").child(\"DaysVisted\").child(\"RankFour\").set({\n                            Gold: $scope.daysVistedBadge.daysVisited.gold.rankfour.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Gold\").child(\"DaysVisted\").child(\"RankFour\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n        \n                    //platinum\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.platinum.rankone.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"DaysVisted\").child(\"RankOne\").set({\n                            Platinum: $scope.daysVistedBadge.daysVisited.platinum.rankone.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"DaysVisted\").child(\"RankOne\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.platinum.ranktwo.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"DaysVisted\").child(\"RankTwo\").set({\n                            Platinum: $scope.daysVistedBadge.daysVisited.platinum.ranktwo.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"DaysVisted\").child(\"RankTwo\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.platinum.rankthree.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"DaysVisted\").child(\"RankThree\").set({\n                            Platinum: $scope.daysVistedBadge.daysVisited.platinum.rankthree.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"DaysVisted\").child(\"RankThree\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.platinum.rankfour.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"DaysVisted\").child(\"RankFour\").set({\n                            Platinum: $scope.daysVistedBadge.daysVisited.platinum.rankfour.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"DaysVisted\").child(\"RankFour\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n        \n        \n                })\n        \n                /////BADGES HANDLING END////////////////////////////////////////\n        }\n    }\n\n})(angular);\n(function(){\n    'use strict';\n    \n    angular\n           .module('ForumApp')\n           .controller('emojieToolCtrl', [\"$scope\",\"emojieTool\",\"$mdDialog\",\"$rootScope\", emojieToolCtrlfunc])\n           \n           function emojieToolCtrlfunc($scope,emojieTool,$mdDialog,$rootScope) {\n                $scope.emojieListCtrl = [\n                    {name : ':smile:', img: '<img src=\"assets/emoji/emoji-E056.png\"/>'},\n                    {name : ':sad:' , img: '<img src=\"assets/emoji/emoji-E058.png\"/> '},\n                    {name : ':smiley:', img: '<img src=\"assets/emoji/emoji-E415.png\"/> '},\n                    {name : ':very_happy:', img: '<img src=\"assets/emoji/emoji-E057.png\"/>'},\n                    {name : ':tounge_stuck_out:', img: '<img src=\"assets/emoji/emoji-E105.png\"/> '},\n                    {name : ':cant_talk:', img:'<img src=\"assets/emoji/emoji-E40C.png\"/>'},\n                    {name : ':laugh_dang:' ,img: '<img src=\"assets/emoji/emoji-E770.png\"/>'},\n                    {name : ':minus_one:',img: '<img src=\"assets/emoji/emoji-E421.png\"/>'},\n                    {name : ':plus_one:',img: '<img src=\"assets/emoji/emoji-E00E.png\"/>'},\n                  ]\n                   $scope.hide = function() {\n                        $mdDialog.hide();\n                        $rootScope.markdownData= '# HELLO CHANGED'\n                    };\n                    $scope.cancel = function() {\n                        $mdDialog.cancel();\n                        $rootScope.markdownData= '# HELLO CHANGED'\n                    };\n                    $scope.answer = function(answer) {\n                        $mdDialog.hide(answer);\n                    };\n                    \n              emojieTool.resetElementInfo();\n              \n                $scope.emojieClick = function(val) {\n                  document.getElementById('markdownUserType').value += ( \" \" + val.name )\n                  $mdDialog.cancel();\n                }\n             \n           }\n})(angular);\n(function(angular){\n    var app = angular.module('ForumApp');\n    \n    app.controller('descChangeCtrl',[\"$scope\",\"$mdDialog\",\"$mdMedia\",\"currentAuth\",\"refService\", descChangeCtrl])\n    \n    function descChangeCtrl($scope,$mdDialog,$mdMedia,currentAuth,refService){\n        $scope.hide = function() {\n            $mdDialog.hide();\n        };\n        $scope.cancel = function() {\n            $mdDialog.cancel();\n        };\n        $scope.answer = function(answer) {\n            $mdDialog.hide(answer);\n        };\n        \n        $scope.change = function(desc){\n            if(desc.length > 5){\n                refService.ref().child(\"UserAuthInfo\").child(currentAuth.uid).update({\n                    Description : desc\n                }, function(error) {\n                  if (error) {\n                    alertify.error('Synchronization failed');\n                  } else {\n                    alertify.success('Synchronization succeeded');\n                    $mdDialog.cancel();\n                  }\n                  })\n                \n            }else{\n                alertify.error(\"LEGNTH HAS TO BE ATLEAST 5 CHARACTERS!\")\n            }\n        }\n    }\n})(angular);\n(function(angular){\n    var app = angular.module('ForumApp');\n    \n    app.controller('emailSettingsCtrl', [\"$scope\",\"refService\",\"currentAuth\",\"$mdDialog\", emailSettingsCtrl])\n    \n    function emailSettingsCtrl($scope,refService,currentAuth,$mdDialog){\n\n          $scope.getUID = refService.ref().getAuth();\n           \n           console.log($scope.getUID);\n        $scope.hide = function() {\n            $mdDialog.hide();\n        };\n        $scope.cancel = function() {\n            $mdDialog.cancel();\n        };\n        $scope.answer = function(answer) {\n            $mdDialog.hide(answer);\n        };\n\n        $scope.changeEmailDialog = function(){\n           \n           \n           if($scope.getUID.provider == 'twitter' || $scope.getUID.provider == 'github') {\n               \n                refService.ref().child(\"UserAuthInfo\").child(currentAuth.uid).update({\n                        Email: $scope.emailChange\n                    })\n                    \n                    \n                    alertify.success(\"User email changed successfully!\");\n            //Updating Topics\n                    refService.ref().child(\"Topics\").once(\"value\", function(snapshot) {\n\n                        snapshot.forEach(function(childSnapshot) {\n                            var key = childSnapshot.key();\n                            var childData = childSnapshot.val();\n                            if (childData.UID == currentAuth.uid) {\n                                refService.ref().child(\"Topics\").child(childData.pushKey).update({\n                                    Email: $scope.emailChange\n                                })\n                            }\n                        })\n                    })\n                    \n            //Updating Replise\n                    \n                    refService.ref().child(\"Replies\").once(\"value\", function(snapshot) {\n\n                        snapshot.forEach(function(childSnapshot) {\n                            var key = childSnapshot.key();\n                            var childData = childSnapshot.val();\n                            childSnapshot.forEach(function(EvenChild){\n                                var keyNest = EvenChild.key();\n                                var childDataNest = EvenChild.val();\n                                if(childDataNest.replyCreatorUID == currentAuth.uid){\n                                  refService.ref().child(\"Replies\").child(key).child(childDataNest.pushKey).update\n                                    ({\n                                        replyCreatorEmail : $scope.emailChange                   \n                                    })\n                                }\n                            })\n                        })\n                    })\n                    location.reload(true);\n                    location.reload(true);\n                    $mdDialog.cancel();\n               \n           }\n \n            else\n            {\n                 var email = $scope.emailChange || $scope.emailChange.toString;\n            var oldEmail = $scope.emailChangeOld;\n            refService.ref().changeEmail({\n                oldEmail: oldEmail,\n                newEmail: email,\n                password: $scope.passwordChangeOld\n            }, function(error) {\n                if (error) {\n                    switch (error.code) {\n                        case \"INVALID_PASSWORD\":\n                            alertify.error(\"The specified user account password is incorrect.\");\n                            break;\n                        case \"INVALID_USER\":\n                            alertify.error(\"The specified user account does not exist.\");\n                            break;\n                        default:\n                            alertify.error(\"Error creating user:\" +  error);\n                    }\n                } else {\n                    refService.ref().child(\"UserAuthInfo\").child(currentAuth.uid).update({\n                        Email: email\n                    })\n                    \n                    \n                    alertify.success(\"User email changed successfully!\");\n            //Updating Topics\n                    refService.ref().child(\"Topics\").once(\"value\", function(snapshot) {\n\n                        snapshot.forEach(function(childSnapshot) {\n                            var key = childSnapshot.key();\n                            var childData = childSnapshot.val();\n                            if (childData.UID == currentAuth.uid) {\n                                refService.ref().child(\"Topics\").child(childData.pushKey).update({\n                                    Email: email\n                                })\n                            }\n                        })\n                    })\n                    \n            //Updating Replise\n                    \n                    refService.ref().child(\"Replies\").once(\"value\", function(snapshot) {\n\n                        snapshot.forEach(function(childSnapshot) {\n                            var key = childSnapshot.key();\n                            var childData = childSnapshot.val();\n                            childSnapshot.forEach(function(EvenChild){\n                                var keyNest = EvenChild.key();\n                                var childDataNest = EvenChild.val();\n                                if(childDataNest.replyCreatorUID == currentAuth.uid){\n                                  refService.ref().child(\"Replies\").child(key).child(childDataNest.pushKey).update\n                                    ({\n                                        replyCreatorEmail : email                   \n                                    })\n                                }\n                            })\n                        })\n                    })\n                    location.reload(true);\n                    location.reload(true);\n                    $mdDialog.cancel();\n                }\n            });\n            }\n           \n        }\n    }\n})(angular);\n\n/*\n\n                    \n                    */\n(function(angular) {\n    var app = angular.module('ForumApp')\n\n    app.controller('imageChangeCtrl', [\"$scope\", \"refService\", \"currentAuth\", \"$mdDialog\", \"encodeImageToBase64\", \"$firebaseObject\", imageChangeCtrl])\n\n    function imageChangeCtrl($scope, refService, currentAuth, $mdDialog, encodeImageToBase64, $firebaseObject) {\n        $scope.hide = function() {\n            $mdDialog.hide();\n        };\n        $scope.cancel = function() {\n            $mdDialog.cancel();\n        };\n        $scope.answer = function(answer) {\n            $mdDialog.hide(answer);\n        };\n\n\n        $scope.uploadFile = function(event) {\n            var doc = document.getElementById('inputFileToLoad');\n            var file = document.getElementById('inputFileToLoad').files;\n            var base64Image = encodeImageToBase64.encode(doc, file, refService.ref(), currentAuth.uid);\n\n            \n            \n            // setTimeout(function() {\n            //     location.reload(true);\n            //     location.reload(true);\n            // }, 3000)\n\n        };\n    }\n})(angular);\n\n(function(angular){\n    var app = angular.module('ForumApp')\n    \n    app.controller('passwordChangeCtrl', [\"$scope\",\"refService\",\"currentAuth\",\"$mdDialog\", passwordChangeCtrl])\n    \n    function passwordChangeCtrl($scope,refService,currentAuth,$mdDialog){\n        $scope.hide = function() {\n            $mdDialog.hide();\n        };\n        $scope.cancel = function() {\n            $mdDialog.cancel();\n        };\n        $scope.answer = function(answer) {\n            $mdDialog.hide(answer);\n        };\n        \n        $scope.changePasswordDialog = function(){\n\n            refService.ref().changePassword({\n              email: $scope.emailNormal,\n              oldPassword: $scope.passwordChangeOld,\n              newPassword: $scope.passwordChangeNew\n            }, function(error) {\n              if (error) {\n                switch (error.code) {\n                  case \"INVALID_PASSWORD\":\n                    alertify.error(\"The specified user account password is incorrect.\");\n                    break;\n                  case \"INVALID_USER\":\n                    alertify.error(\"The specified user account does not exist.\");\n                    break;\n                  default:\n                    alertify.error(\"Error changing password:\", error);\n                }\n              } else {\n                alertify.success(\"User password changed successfully!\");\n                location.reload(true);\n                location.reload(true);\n                $mdDialog.cancel();\n              }\n            });\n        }\n    }\n})(angular);\n(function(angular){\n    var app = angular.module('ForumApp')\n    \n    app.controller('usernameChangeCtrl', [\"$scope\",\"refService\",\"currentAuth\",\"$mdDialog\", usernameChangeCtrl])\n    \n    function usernameChangeCtrl($scope,refService,currentAuth,$mdDialog){\n        $scope.hide = function() {\n            $mdDialog.hide();\n        };\n        $scope.cancel = function() {\n            $mdDialog.cancel();\n        };\n        $scope.answer = function(answer) {\n            $mdDialog.hide(answer);\n        };\n        \n        $scope.changeUsernameDialog = function(){\n            var username = $scope.usernameNew;\n            refService.ref().child(\"UserAuthInfo\").child(currentAuth.uid).update({\n                Username : username\n            })\n            //Updating Topics\n                    refService.ref().child(\"Topics\").once(\"value\", function(snapshot) {\n\n                        snapshot.forEach(function(childSnapshot) {\n                            var key = childSnapshot.key();\n                            var childData = childSnapshot.val();\n                            if (childData.UID == currentAuth.uid) {\n                                refService.ref().child(\"Topics\").child(childData.pushKey).update({\n                                    Username: username\n                                })\n                            }\n                        })\n                    })\n                    \n            //Updating Replise\n                    \n                    refService.ref().child(\"Replies\").once(\"value\", function(snapshot) {\n\n                        snapshot.forEach(function(childSnapshot) {\n                            var key = childSnapshot.key();\n                            var childData = childSnapshot.val();\n                            childSnapshot.forEach(function(EvenChild){\n                                var keyNest = EvenChild.key();\n                                var childDataNest = EvenChild.val();\n                                if(childDataNest.replyCreatorUID == currentAuth.uid){\n                                  refService.ref().child(\"Replies\").child(key).child(childDataNest.pushKey).update\n                                    ({\n                                        replyCreatorUsername : username                   \n                                    })\n                                }\n                            })\n                        })\n                    })\n            location.reload(true);\n                location.reload(true);        \n            $mdDialog.cancel();\n        }\n    }\n})(angular);\n(function(){\n    'use strict';\n    \n    angular\n          .module('ForumApp')\n          .controller('viewTopicLikes', [\"$scope\",\"$mdDialog\",\"topicLikesService\",\"refService\",\"$stateParams\", viewTopicLikesfunc])\n          \n          function viewTopicLikesfunc($scope,$mdDialog,topicLikesService,refService,$stateParams) {\n              $scope.hide = function() {\n            $mdDialog.hide();\n          };\n          $scope.cancel = function() {\n            topicLikesService.resetInfo();\n            $mdDialog.cancel();\n          };\n          $scope.answer = function(answer) {\n            $mdDialog.hide(answer);\n          };\n          $scope.avatars = [];\n              $scope.num_likes = topicLikesService.getInfo1();\n              $scope.rep = topicLikesService.getInfo2();\n              refService.ref().child(\"Replies\").child($stateParams.USERNAME+$stateParams.POST).child($scope.rep.pushKey).on(\"value\", function(snapRepNum){\n                  snapRepNum.forEach(function(snapRepNumChild){\n                        if(typeof snapRepNumChild.val() == 'object') {\n                              for(var i in snapRepNumChild.val())\n                                  $scope.avatars.push(snapRepNumChild.val()[i].Avatar);\n                        }\n                        \n                        setTimeout(function(){\n                            topicLikesService.resetInfo();\n                        },100)\n                  })\n              })\n              \n\n          }\n})(angular);\n","(function (angular) {\n    angular.module('ForumApp')\n        .config(stateParams);\n\n    /* @ngInject */\n    function stateParams($stateProvider, $urlRouterProvider, $mdThemingProvider) {\n        $mdThemingProvider.theme(\"default\").primaryPalette(\"blue\");\n        $urlRouterProvider.otherwise('404');\n\n        $stateProvider\n            .state('home', {\n                url: '',\n                templateUrl: 'app/components/home/home.html',\n                controller: 'homeCtrl'\n            })\n            .state('auth', {\n                url: '/auth',\n                templateUrl: 'app/components/auth/auth.html',\n                controller: 'authCtrl'\n            })\n            .state('authHome', {\n                url: '/authHome',\n                templateUrl: 'app/components/authHome/authHome.html',\n                controller: 'authHome',\n                resolve: {\n                    // controller will not be loaded until $waitForAuth resolves\n                    // Auth refers to our $firebaseAuth wrapper in the example above\n                }\n            })\n            .state('authHome.desc', {\n                url: '/desc',\n                templateUrl: 'app/components/authDesc/authDesc.html',\n                controller: 'authDescCtrl',\n                resolve: {\n                    // controller will not be loaded until $waitForAuth resolves\n                    // Auth refers to our $firebaseAuth wrapper in the example above\n                    \"currentAuth\": [\"refService\", function (refService) {\n                    }]\n                }\n            })\n            .state('authHome.topic', {\n                url: '/topic/:POST/:USERNAME',\n                templateUrl: 'app/components/topic/topicDesc.html',\n                controller: 'topicCtrl',\n                resolve: {\n                    // controller will not be loaded until $waitForAuth resolves\n                    // Auth refers to our $firebaseAuth wrapper in the example above\n                }\n            })\n            .state('authHome.profile', {\n                url: '/profile/:UID',\n                templateUrl: 'app/components/profile/profile.html',\n                controller: 'profileCtrl',\n                resolve: {\n                    // controller will not be loaded until $waitForAuth resolves\n                    // Auth refers to our $firebaseAuth wrapper in the example above\n                }\n            })\n            .state('authHome.settings', {\n                url: '/settings?UID?USERNAME',\n                templateUrl: 'app/components/settings/settings.html',\n                controller: 'settingsCtrl',\n                resolve: {\n                    // controller will not be loaded until $waitForAuth resolves\n                    // Auth refers to our $firebaseAuth wrapper in the example above\n                }\n            })\n            .state('authHome.otherUser', {\n                url: '/otherUser?DATE?UID',\n                templateUrl: 'app/components/otherUserProfile/otherUserProfile.html',\n                controller: 'otherUserProfileCtrl',\n                resolve: {\n                    // controller will not be loaded until $waitForAuth resolves\n                    // Auth refers to our $firebaseAuth wrapper in the example above\n                }\n            })\n            .state('ErrorFourOFour', {\n                url: '/404',\n                templateUrl: 'app/components/404/404.html',\n                controller: '404Controller',\n                resolve: {\n                    // controller will not be loaded until $waitForAuth resolves\n                    // Auth refers to our $firebaseAuth wrapper in the example above\n                }\n            })\n            .state('loading', {\n                url: '/loading',\n                templateUrl: 'app/components/loading/loading.html',\n                controller: 'loadingCtrl',\n                resolve: {\n                    // controller will not be loaded until $waitForAuth resolves\n                    // Auth refers to our $firebaseAuth wrapper in the example above\n                }\n            })\n            .state('authHome.otherUserPage', {\n                url: '/:USERNAME/Activity',\n                templateUrl: 'app/components/otherUserProfilePage/otherUserProfilePage.html',\n                controller: 'otherUserProfilePageCtrl',\n                resolve: {\n                    // controller will not be loaded until $waitForAuth resolves\n                    // Auth refers to our $firebaseAuth wrapper in the example above\n                }\n            });\n    }\n})(angular);","(function(angular){\n    'use strict';\n    \n    angular\n    .module('ForumApp')\n    .directive('customOnChange', customOnChange);\n\n    function customOnChange(){\n        return {\n        restrict: 'A',\n        link: function (scope, element, attrs) {\n          var onChangeHandler = scope.$eval(attrs.customOnChange);\n          element.bind('change', onChangeHandler);\n        }\n      };\n    }\n})(angular);\n","(function(angular) {\n   'use strict'; \n     angular\n     .module('ForumApp')\n     .directive('otherUserCard', otherUserCard)\n\n    function otherUserCard() {\n        return {\n            restrict: 'E',\n            transclude: true,\n            scope: {\n                name: '@',\n                theme: '@',\n                image : '@',\n                Moderator : '@',\n                desc:'@'\n            },\n            templateUrl: 'views/directiveViews/otherUserCard.html',\n            link: function(scope, elem, attrs, ctrl) {\n\n            },\n            controller: function($scope) {\n                $scope.theme = $scope.theme || 'default'\n            }\n        }\n    }\n})(angular);","(function(angular){\r\n    var app = angular.module('ForumApp')\r\n\r\n    app.directive('replyDateDirective', [\"timeService\",replyDirective])\r\n\r\n    function replyDirective(timeService){\r\n        return {\r\n            restrict:'E',\r\n            transclude:true,\r\n            template : \"<span><ng-transclude></ng-transclude></span>\",\r\n            link:function(scope, elm, attrs){\r\n                var elemzero = elm[0];\r\n                var dateNotParsed = elm[0].innerText;\r\n                console.log(\"DATE NOT PARSED\" , dateNotParsed)\r\n                var dateParsed = timeService.getTimeF(new Date(parseInt(dateNotParsed)))\r\n                //elemzero.innerText = dateParsed;\r\n            }\r\n        }\r\n    }\r\n})(angular);","(function(angular) {\n    var app = angular.module('ForumApp')\n\n    app.directive('userCardDirective', userCardDirective)\n\n    function userCardDirective() {\n        return {\n            restrict: 'E',\n            transclude: true,\n            scope: {\n                name: '@',\n                theme: '@',\n                image : '@',\n                uid : '@',\n                email:'@',\n                desc:'@'\n            },\n            templateUrl: 'views/directiveViews/userCard.html',\n            link: function(scope, elem, attrs, ctrl) {\n\n            },\n            controller: function($scope) {\n                $scope.theme = $scope.theme || 'default'\n            }\n        }\n    }\n})(angular);","(function(angular) {\n    'use strict';\n\n    angular\n        .module('ForumApp')\n        .filter('emoteFilter', ['$sce','emojiListService', emoteFilterfunc]);\n\n    function emoteFilterfunc($sce,emojiListService) {\n//EMOJIE LIST {PARAM} {https://github.com/amanuel2/ng-forum/wiki/How-to-write-emotions}\n        function replace(string, str1, str2) {\n            return string.replace(\n                new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g, \"\\\\$&\"), 'g'),\n                str2\n            );\n        }\n        \n        function replaceAt(index,character){\n            return this.substr(0, index) \n                                + character \n                                + this.substr(\n                                                index + character.length\n                                             );\n        }\n\n        var emojieList = emojiListService.getEmojies();\n\n        return function(string) {\n\n            if (typeof string === 'string') {\n\n                string = marked(string);\n\n                for (var emoji in emojieList) {\n                    if (emojieList.hasOwnProperty(emoji)) {\n                        string = replace(string, emoji, emojieList[emoji]);\n                    }\n                }\n\n                return $sce.trustAsHtml(string);\n            }\n\n        };\n    }\n})(angular);","(function(angular){\n    var app = angular.module('ForumApp');\n\n    app.filter(\"nonFullDateFilter\", [\"timeService\",nonFullDateFilterFunc]);\n\n    function nonFullDateFilterFunc(timeService){\n        return function(input){\n            return (((JSON.stringify((new Date(parseInt(input))))).replace('\"','')).substring(0,10))\n        }\n    }\n})(angular);","(function(){\n    angular\n            .module('ForumApp')\n            .filter('range', function() {\n                return function(input, min, max) {\n                    var range = [];\n                    min = parseInt(min); //Make string input int\n                    max = parseInt(max);\n                    for (var i=min; i<=max; i++)\n                        input[i] && range.push(input[i]);\n                    return range;\n                };\n            });\n})(angular);","(function() {\n    'use strict';\n    angular\n        .module('ForumApp')\n        .filter('tagsMultiple', function() {\n            return function(input) {\n                String.prototype.replaceAll = function(str1, str2, ignore) {\n                    return this.replace(new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g, \"\\\\$&\"), (ignore ? \"gi\" : \"g\")), (typeof(str2) == \"string\") ? str2.replace(/\\$/g, \"$$$$\") : str2);\n                }\n                return ((JSON.stringify(input)).replaceAll('[', '').replaceAll('\"', '').replaceAll(']', ''))\n            };\n        });\n})(angular);","(function(angular){\r\n    var app = angular.module('ForumApp');\r\n    \r\n    app.service('authCheckTrueService', [\"$state\" , authCheckService]);\r\n    \r\n    function authCheckService($state){\r\n        this.checkAuth = function(refService,dest){\r\n            if(refService.getAuth())\r\n                $state.go(dest);\r\n            else\r\n                return null;\r\n            \r\n        }\r\n    }\r\n})(angular);","(function() {\n\n    'use strict';\n\n    angular\n        .module('ForumApp')\n        .service(\"badgesService\", badgesServiceFunc)\n\n    function badgesServiceFunc() {\n        //BADGES\n        //////5 REPLIES = ACTIVE USER - BRONZE Rank 1 \n        //////25 REPLIES = ACTIVE USER - Bronze Rank 2\n        //////50 REPLIES = ACTIVE USER - Bronze Rank3\n        ///// 75 Replies = active User - Bronze Rank 4\n        //// 100 Replies = active User - Silver Rank 1 \n        //// 130 Replies = Active User - Silver Rank 2 \n        //// 165 Replies = Active User - Silver Rank 3 \n        //// 215 Replies = Active User - Silver Rank 4 \n        /// 235 Replies = Active User - Gold Rank 1\n        //// 275 Replies = Active User - Gold Rank 2 \n        /// 315 Replies = Active User - Gold Rank 3 \n        /// 350 Replies = Active user - Gold Rank 4\n        //// 401+ Replies = Active User - ? Rank \n\n\n\n\n        //2 Topics Bronze 1 \n        //10 Bronze Rank 2 \n        //15  Bronze Rank 3 \n        //20 Bronze Rank 4 \n        // 25 Silver Rank 1 \n        // 35 Silver Rank 2 \n        // 50 silver Rank 3 \n        // 75 silver Rank 4  \n        // 100 Gold  Rank 1 \n        // 125 Gold Rank 2 \n        // 150 Gold Rank 3 \n        // 175 Gold Rank4 \n        // 200 Plat Rank1  \n        // 240 Plat Rank2 \n        // 275 plat Rank3 \n        // 300 plat Rank4 \n\n\n\n        //1st day bronze 1\n        //5day bronze 2\n        //20day bronze 3\n        //30day bronze 4\n        //50day silver 1\n        //100day silver 2\n        //120day silver 3\n        //150day silver 4\n        //200day gold 1\n        //225day gold 2\n        //250day gold 3\n        //275 day gold 4\n        //280 day platunum 1\n        //300day playinum 2\n        //330 day playinum 3\n        //350 day platinum 4\n\n\n        this.getDaysVisitedBadges = function() {\n\n            return ({\n\n                daysVisited: {\n\n                    bronze: {\n\n                        rankone: {\n                            Title: \"New Comer |\",\n                            Type: \"Bronze\",\n                            Rank: \"Rank1\",\n                            Days: 1,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"New Comer |\",\n                                        Type: \"Bronze\",\n                                        Rank: \"Rank1\",\n                                        Days: 1,\n                                    }\n                                }\n                            }\n\n                        },\n\n                        ranktwo: {\n\n                            Title: \"New Comer ||\",\n                            Type: \"Bronze\",\n                            Rank: \"Rank2\",\n                            Days: 5,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"New Comer ||\",\n                                        Type: \"Bronze\",\n                                        Rank: \"Rank2\",\n                                        Days: 5,\n                                    }\n                                }\n                            }\n\n                        },\n\n                        rankthree: {\n\n                            Title: \"New Comer |||\",\n                            Type: \"Bronze\",\n                            Rank: \"Rank3\",\n                            Days: 20,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"New Comer |||\",\n                                        Type: \"Bronze\",\n                                        Rank: \"Rank3\",\n                                        Days: 20,\n                                    }\n                                }\n                            }\n\n                        },\n\n                        rankfour: {\n\n                            Title: \"New Comer ||||\",\n                            Type: \"Bronze\",\n                            Rank: \"Rank4\",\n                            Days: 30,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"New Comer ||||\",\n                                        Type: \"Bronze\",\n                                        Rank: \"Rank4\",\n                                        Days: 30,\n                                    }\n                                }\n                            }\n\n                        },\n\n                    },\n                    silver: {\n\n                        rankone: {\n\n                            Title: \"Moderate Comer |\",\n                            Type: \"Silver\",\n                            Rank: \"Rank1\",\n                            Days: 50,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Moderate Comer |\",\n                                        Type: \"Silver\",\n                                        Rank: \"Rank1\",\n                                        Days: 50,\n                                    }\n                                }\n                            }\n\n                        },\n\n                        ranktwo: {\n\n                            Title: \"Moderate Comer ||\",\n                            Type: \"Silver\",\n                            Rank: \"Rank2\",\n                            Days: 100,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Moderate Comer ||\",\n                                        Type: \"Silver\",\n                                        Rank: \"Rank2\",\n                                        Days: 100,\n                                    }\n                                }\n                            }\n\n                        },\n\n                        rankthree: {\n\n                            Title: \"Moderate Comer |||\",\n                            Type: \"Silver\",\n                            Rank: \"Rank3\",\n                            Days: 120,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Moderate Comer |||\",\n                                        Type: \"Silver\",\n                                        Rank: \"Rank3\",\n                                        Days: 120,\n                                    }\n                                }\n                            }\n\n                        },\n\n                        rankfour: {\n\n                            Title: \"Moderate Comer ||||\",\n                            Type: \"Silver\",\n                            Rank: \"Rank4\",\n                            Days: 150,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Moderate Comer ||||\",\n                                        Type: \"Silver\",\n                                        Rank: \"Rank4\",\n                                        Days: 150,\n                                    }\n                                }\n                            }\n\n                        },\n\n                    },\n                    gold: {\n\n                        rankone: {\n\n                            Title: \"Welcome Back |\",\n                            Type: \"Gold\",\n                            Rank: \"Rank1\",\n                            Days: 200,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Welcome Back |\",\n                                        Type: \"Gold\",\n                                        Rank: \"Rank1\",\n                                        Days: 200,\n                                    }\n                                }\n                            }\n\n                        },\n\n                        ranktwo: {\n\n\n                            Title: \"Welcome Back ||\",\n                            Type: \"Gold\",\n                            Rank: \"Rank2\",\n                            Days: 225,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Welcome Back ||\",\n                                        Type: \"Gold\",\n                                        Rank: \"Rank2\",\n                                        Days: 225,\n                                    }\n                                }\n                            }\n\n                        },\n\n                        rankthree: {\n\n                            Title: \"Welcome Back |||\",\n                            Type: \"Gold\",\n                            Rank: \"Rank3\",\n                            Days: 250,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Welcome Back |||\",\n                                        Type: \"Gold\",\n                                        Rank: \"Rank3\",\n                                        Days: 250,\n                                    }\n                                }\n                            }\n\n                        },\n\n                        rankfour: {\n\n                            Title: \"Welcome Back ||||\",\n                            Type: \"Gold\",\n                            Rank: \"Rank4\",\n                            Days: 275,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Welcome Back ||||\",\n                                        Type: \"Gold\",\n                                        Rank: \"Rank4\",\n                                        Days: 275,\n                                    }\n                                }\n                            }\n\n                        },\n\n                    },\n                    platinum: {\n\n                        rankone: {\n\n                            Title: \"Oldie |\",\n                            Type: \"Platinum\",\n                            Rank: \"Rank1\",\n                            Days: 280,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Oldie |\",\n                                        Type: \"Platinum\",\n                                        Rank: \"Rank1\",\n                                        Days: 280,\n                                    }\n                                }\n                            }\n\n                        },\n\n                        ranktwo: {\n\n                            Title: \"Oldie ||\",\n                            Type: \"Platinum\",\n                            Rank: \"Rank2\",\n                            Days: 300,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Oldie ||\",\n                                        Type: \"Platinum\",\n                                        Rank: \"Rank2\",\n                                        Days: 300,\n                                    }\n                                }\n                            }\n\n\n                        },\n\n                        rankthree: {\n\n                            Title: \"Oldie |||\",\n                            Type: \"Platinum\",\n                            Rank: \"Rank3\",\n                            Days: 330,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Oldie |||\",\n                                        Type: \"Platinum\",\n                                        Rank: \"Rank3\",\n                                        Days: 330,\n                                    }\n                                }\n                            }\n\n\n                        },\n\n                        rankfour: {\n\n                            Title: \"Oldie ||||\",\n                            Type: \"Platinum\",\n                            Rank: \"Rank4\",\n                            Days: 350,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Oldie ||||\",\n                                        Type: \"Platinum\",\n                                        Rank: \"Rank4\",\n                                        Days: 350,\n                                    }\n                                }\n                            }\n\n\n                        },\n\n                    },\n\n                }\n            })\n\n        }\n\n\n        this.getTopicBadges = function() {\n            return ({\n                questionLover: {\n\n                    bronze: {\n                        rankone: {\n                            Title: \"Question Lover |\",\n                            Type: \"Bronze\",\n                            Rank: \"Rank1\",\n                            Topics: 2,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Question Lover |\",\n                                        Type: \"Bronze\",\n                                        Rank: \"Rank1\",\n                                        Topics: 2,\n                                    }\n                                }\n                            }\n                        },\n                        ranktwo: {\n\n                            Title: \"Question Lover ||\",\n                            Type: \"Bronze\",\n                            Rank: \"Rank2\",\n                            Topics: 10,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Question Lover ||\",\n                                        Type: \"Bronze\",\n                                        Rank: \"Rank2\",\n                                        Topics: 10,\n                                    }\n                                }\n                            },\n                        },\n                        rankthree: {\n                            Title: \"Question Lover |||\",\n                            Type: \"Bronze\",\n                            Rank: \"Rank2\",\n                            Topics: 15,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Question Lover |||\",\n                                        Type: \"Bronze\",\n                                        Rank: \"Rank3\",\n                                        Topics: 15,\n                                    }\n                                }\n                            },\n                        },\n                        rankfour: {\n                            Title: \"Question Lover ||||\",\n                            Type: \"Bronze\",\n                            Rank: \"Rank4\",\n                            Topics: 20,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Question Lover ||||\",\n                                        Type: \"Bronze\",\n                                        Rank: \"Rank4\",\n                                        Topics: 20,\n                                    }\n                                }\n\n                            }\n                        },\n                    },\n                    silver: {\n                        rankone: {\n\n                            Title: \"Questionare |\",\n                            Type: \"Silver\",\n                            Rank: \"Rank1\",\n                            Topics: 25,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Questionare |\",\n                                        Type: \"Silver\",\n                                        Rank: \"Rank1\",\n                                        Topics: 25,\n                                    }\n                                }\n\n                            }\n\n\n\n                        },\n                        ranktwo: {\n\n                            Title: \"Questionare ||\",\n                            Type: \"Silver\",\n                            Rank: \"Rank2\",\n                            Topics: 35,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Questionare ||\",\n                                        Type: \"Silver\",\n                                        Rank: \"Rank2\",\n                                        Topics: 35,\n                                    }\n                                }\n\n                            }\n\n                        },\n                        rankthree: {\n                            Title: \"Questionare |||\",\n                            Type: \"Silver\",\n                            Rank: \"Rank3\",\n                            Topics: 50,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Questionare |||\",\n                                        Type: \"Silver\",\n                                        Rank: \"Rank3\",\n                                        Topics: 50,\n                                    }\n                                }\n\n                            }\n                        },\n                        rankfour: {\n                            Title: \"Questionare ||||\",\n                            Type: \"Silver\",\n                            Rank: \"Rank4\",\n                            Topics: 75,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Questionare ||||\",\n                                        Type: \"Silver\",\n                                        Rank: \"Rank4\",\n                                        Topics: 75,\n                                    }\n                                }\n\n                            }\n\n                        }\n                    },\n                    gold: {\n                        rankone: {\n                            Title: \"Monsterous |\",\n                            Type: \"Gold\",\n                            Rank: \"Rank1\",\n                            Topics: 100,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Monsterous |\",\n                                        Type: \"Gold\",\n                                        Rank: \"Rank1\",\n                                        Topics: 100,\n                                    }\n                                }\n\n                            }\n                        },\n                        ranktwo: {\n                            Title: \"Monsterous ||\",\n                            Type: \"Gold\",\n                            Rank: \"Rank2\",\n                            Topics: 125,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Monsterous ||\",\n                                        Type: \"Gold\",\n                                        Rank: \"Rank2\",\n                                        Topics: 125,\n                                    }\n                                }\n\n                            }\n                        },\n                        rankthree: {\n                            Title: \"Monsterous |||\",\n                            Type: \"Gold\",\n                            Rank: \"Rank3\",\n                            Topics: 150,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Monsterous |||\",\n                                        Type: \"Gold\",\n                                        Rank: \"Rank3\",\n                                        Topics: 150,\n                                    }\n                                }\n                            }\n                        },\n                        rankfour: {\n                            Title: \"Monsterous ||||\",\n                            Type: \"Gold\",\n                            Rank: \"Rank4\",\n                            Topics: 175,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Monsterous ||||\",\n                                        Type: \"Gold\",\n                                        Rank: \"Rank4\",\n                                        Topics: 175,\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    platinum: {\n                        rankone: {\n                            Title: \"Crusher |\",\n                            Type: \"Platinum\",\n                            Rank: \"Rank1\",\n                            Topics: 200,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Crusher |\",\n                                        Type: \"Platinum\",\n                                        Rank: \"Rank1\",\n                                        Topics: 200,\n                                    }\n                                }\n                            }\n                        },\n                        ranktwo: {\n                            Title: \"Crusher ||\",\n                            Type: \"Platinum\",\n                            Rank: \"Rank2\",\n                            Topics: 240,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Crusher ||\",\n                                        Type: \"Platinum\",\n                                        Rank: \"Rank2\",\n                                        Topics: 240,\n                                    }\n                                }\n\n                            }\n\n                        },\n                        rankthree: {\n                            Title: \"Crusher |||\",\n                            Type: \"Platinum\",\n                            Rank: \"Rank3\",\n                            Topics: 275,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Crusher |||\",\n                                        Type: \"Platinum\",\n                                        Rank: \"Rank3\",\n                                        Topics: 275,\n                                    }\n                                }\n                            }\n                        },\n                        rankfour: {\n                            Title: \"Crusher ||||\",\n                            Type: \"Platinum\",\n                            Rank: \"Rank4\",\n                            Topics: 300,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Crusher ||||\",\n                                        Type: \"Platinum\",\n                                        Rank: \"Rank4\",\n                                        Topics: 300,\n                                    }\n                                }\n\n                            }\n\n                        }\n                    }\n\n\n                }\n            })\n        }\n\n        this.getReplyBadges = function() {\n            return ({\n                activeUser: {\n                    bronze: {\n                        rankone: {\n                            Title: \"Active User\",\n                            Type: \"Bronze\",\n                            Rank: \"Rank1\",\n                            Replies: 5,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Active User\",\n                                        Type: \"Bronze\",\n                                        Rank: \"Rank1\",\n                                        Replies: 5,\n                                    }\n                                }\n                            }\n                        },\n                        ranktwo: {\n                            Title: \"Active User\",\n                            Type: \"Bronze\",\n                            Rank: \"Rank2\",\n                            Replies: 25,\n                            pushObj: {\n                                activeUser: {\n                                    ranktwo: {\n                                        Title: \"Active User\",\n                                        Type: \"Bronze\",\n                                        Rank: \"Rank2\",\n                                        Replies: 25,\n                                    }\n                                }\n                            }\n                        },\n                        rankthree: {\n                            Title: \"Active User\",\n                            Type: \"Bronze\",\n                            Rank: \"Rank3\",\n                            Replies: 50,\n                            pushObj: {\n                                activeUser: {\n                                    rankthree: {\n                                        Title: \"Active User\",\n                                        Type: \"Bronze\",\n                                        Rank: \"Rank3\",\n                                        Replies: 50,\n                                    }\n                                }\n                            }\n                        },\n                        rankfour: {\n                            Title: \"Active User\",\n                            Type: \"Bronze\",\n                            Rank: \"Rank4\",\n                            Replies: 75,\n                            pushObj: {\n                                activeUser: {\n                                    rankfour: {\n                                        Title: \"Active User\",\n                                        Type: \"Bronze\",\n                                        Rank: \"Rank4\",\n                                        Replies: 75,\n                                    }\n                                }\n                            }\n                        },\n                    },\n                    silver: {\n                        rankone: {\n                            Title: \"Active User\",\n                            Type: \"Silver\",\n                            Rank: \"Rank1\",\n                            Replies: 100,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Active User\",\n                                        Type: \"Silver\",\n                                        Rank: \"Rank1\",\n                                        Replies: 100,\n                                    }\n                                }\n                            }\n                        },\n                        ranktwo: {\n                            Title: \"Active User\",\n                            Type: \"Silver\",\n                            Rank: \"Rank2\",\n                            Replies: 130,\n                            pushObj: {\n                                activeUser: {\n                                    ranktwo: {\n                                        Title: \"Active User\",\n                                        Type: \"Silver\",\n                                        Rank: \"Rank2\",\n                                        Replies: 130,\n                                    }\n                                }\n                            }\n                        },\n                        rankthree: {\n                            Title: \"Active User\",\n                            Type: \"Silver\",\n                            Rank: \"Rank3\",\n                            Replies: 165,\n                            pushObj: {\n                                activeUser: {\n                                    rankthree: {\n                                        Title: \"Active User\",\n                                        Type: \"Silver\",\n                                        Rank: \"Rank3\",\n                                        Replies: 165,\n                                    }\n                                }\n                            }\n                        },\n                        rankfour: {\n                            Title: \"Active User\",\n                            Type: \"Silver\",\n                            Rank: \"Rank4\",\n                            Replies: 215,\n                            pushObj: {\n                                activeUser: {\n                                    rankfour: {\n                                        Title: \"Active User\",\n                                        Type: \"Silver\",\n                                        Rank: \"Rank4\",\n                                        Replies: 215,\n                                    }\n                                }\n                            }\n                        },\n                    },\n                    gold: {\n                        rankone: {\n                            Title: \"Active User\",\n                            Type: \"Gold\",\n                            Rank: \"Rank1\",\n                            Replies: 235,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Active User\",\n                                        Type: \"Gold\",\n                                        Rank: \"Rank1\",\n                                        Replies: 235,\n                                    }\n                                }\n                            }\n                        },\n                        ranktwo: {\n                            Title: \"Active User\",\n                            Type: \"Gold\",\n                            Rank: \"Rank2\",\n                            Replies: 275,\n                            pushObj: {\n                                activeUser: {\n                                    ranktwo: {\n                                        Title: \"Active User\",\n                                        Type: \"Gold\",\n                                        Rank: \"Rank2\",\n                                        Replies: 275,\n                                    }\n                                }\n                            }\n                        },\n                        rankthree: {\n                            Title: \"Active User\",\n                            Type: \"Gold\",\n                            Rank: \"Rank3\",\n                            Replies: 315,\n                            pushObj: {\n                                activeUser: {\n                                    rankthree: {\n                                        Title: \"Active User\",\n                                        Type: \"Gold\",\n                                        Rank: \"Rank3\",\n                                        Replies: 315,\n                                    }\n                                }\n                            }\n                        },\n                        rankfour: {\n                            Title: \"Active User\",\n                            Type: \"Gold\",\n                            Rank: \"Rank4\",\n                            Replies: 350,\n                            pushObj: {\n                                activeUser: {\n                                    rankfour: {\n                                        Title: \"Active User\",\n                                        Type: \"Gold\",\n                                        Rank: \"Rank4\",\n                                        Replies: 350,\n                                    }\n                                }\n                            }\n                        },\n                    },\n                    platinum: {\n                        rankone: {\n                            Title: \"Active User\",\n                            Type: \"Platinum\",\n                            Rank: \"Rank1\",\n                            Replies: 401,\n                            pushObj: {\n                                activeUser: {\n                                    rankone: {\n                                        Title: \"Active User\",\n                                        Type: \"Platinum\",\n                                        Rank: \"Rank1\",\n                                        Replies: 401,\n                                    }\n                                }\n                            }\n                        },\n                        ranktwo: {\n                            Title: \"Active User\",\n                            Type: \"Platinum\",\n                            Rank: \"Rank2\",\n                            Replies: 580,\n                            pushObj: {\n                                activeUser: {\n                                    ranktwo: {\n                                        Title: \"Active User\",\n                                        Type: \"Platinum\",\n                                        Rank: \"Rank2\",\n                                        Replies: 580,\n                                    }\n                                }\n                            }\n                        },\n                        rankthree: {\n                            Title: \"Active User\",\n                            Type: \"Platinum\",\n                            Rank: \"Rank3\",\n                            Replies: 1000,\n                            pushObj: {\n                                activeUser: {\n                                    rankthree: {\n                                        Title: \"Active User\",\n                                        Type: \"Platinum\",\n                                        Rank: \"Rank3\",\n                                        Replies: 1000,\n                                    }\n                                }\n                            }\n                        },\n                        rankfour: {\n                            Title: \"Active User\",\n                            Type: \"Platinum\",\n                            Rank: \"Rank4\",\n                            Replies: 5000,\n                            pushObj: {\n                                activeUser: {\n                                    rankfour: {\n                                        Title: \"Active User\",\n                                        Type: \"Platinum\",\n                                        Rank: \"Rank4\",\n                                        Replies: 5000,\n                                    }\n                                }\n                            }\n\n                        },\n                    }\n                }\n            })\n        }\n    }\n\n})(angular);","(function(angular) {\n    var app = angular.module('ForumApp');\n\n    app.service('dateService', dateService)\n\n    function dateService() {\n        this.formatDate = function(date) {\n\n            switch (date) {\n                case (typeof date != 'object'):\n                    return null;\n                    break;\n\n                default:\n                    var year = date.getFullYear();\n                    var month = date.getUTCMonth();\n                    var day = date.getUTCDate();\n\n                    //month 2 digits\n                    month = (\"0\" + (month + 1)).slice(-2);\n\n                    //year 2 digits\n                    year = year.toString().substr(2, 2);\n\n                    var formattedDate = month + '/' + day + \"/\" + year;\n                      \n                      return formattedDate;\n\n            }\n\n\n\n        }\n    }\n})(angular);","(function(){\n    var app = angular.module('ForumApp')\n    \n    app.service('editReplyService', [editReplyService])\n    \n    function editReplyService(){\n        this.topicCreatorName = null;\n        this.nonParsedDate = null;\n        this.topicCreatorUID = null;\n        this.pushK = null;\n        \n        this.setInfo = function(push,name,date,uid){\n            this.topicCreatorName = name;\n            this.nonParsedDate = date;\n            this.topicCreatorUID = uid;\n            this.pushK = push;\n        }\n        this.getName = function(){\n            return (this.topicCreatorName);\n        }\n        \n        this.getDatee = function(){\n            return (this.nonParsedDate);\n        }\n        \n        this.getTopicUID = function(){\n            return (this.topicCreatorUID);\n        }\n        this.getPushK = function(){\n            return (this.pushK);\n        }\n    }\n})(angular);","(function(angular){\n    var app = angular.module('ForumApp');\n    \n    app.service('editTopicService', [ editTopicFuncService])\n    \n    function editTopicFuncService(){\n        this.dateCreated = null;\n        this.setDateCreated = function(value){\n            this.dateCreated = value;\n        }\n        this.getDateCreated = function(){\n            return (this.dateCreated);\n        }\n    }\n})(angular);","(function(angular){\n    var app = angular.module('ForumApp');\n    \n    app.service('emojiListService', [emojiListFunc]);\n    \n    function emojiListFunc(){\n        String.prototype.replaceAt=function(index, character) {\n            return this.substr(0, index) + character + this.substr(index+character.length);\n        }\n        String.prototype.replaceAll = function(str1, str2, ignore) {\n            return this.replace(new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g,\"\\\\$&\"),(ignore?\"gi\":\"g\")),(typeof(str2)==\"string\")?str2.replace(/\\$/g,\"$$$$\"):str2);\n        } \n        this.currentRenderEmojies = function(valRend) {\n             valRend = valRend.replaceAll(':)', 'views/assets/emoji/emoji-E056.png');\n        }\n        this.getEmojies = function(){\n            return({\n            ':)': '<img src=\"assets/emoji/emoji-E056.png\"/>',\n            ':smile:': '<img src=\"assets/emoji/emoji-E056.png\"/>',\n            ':(': '<img src=\"assets/emoji/emoji-E058.png\"/> ',\n            ':sad:': '<img src=\"assets/emoji/emoji-E058.png\"/> ',\n            ':D': '<img src=\"assets/emoji/emoji-E415.png\"/> ',\n            ':smiley:': '<img src=\"assets/emoji/emoji-E415.png\"/> ',\n            ':;': '<img src=\"assets/emoji/emoji-E057.png\"/> ',\n            ':very_happy:': '<img src=\"assets/emoji/emoji-E057.png\"/> ',\n            ':P': '<img src=\"assets/emoji/emoji-E105.png\"/> ',\n            ':tounge_stuck_out:': '<img src=\"assets/emoji/emoji-E105.png\"/> ',\n            ':X': '<img src=\"assets/emoji/emoji-E40C.png\"/>',\n            ':cant_talk:': '<img src=\"assets/emoji/emoji-E40C.png\"/>',\n            'xD': '<img src=\"assets/emoji/emoji-E770.png\"/>',\n            ':laugh_dang:' : '<img src=\"assets/emoji/emoji-E770.png\"/>',\n            '-1': '<img src=\"assets/emoji/emoji-E421.png\"/>',\n            ':minus_one:': '<img src=\"assets/emoji/emoji-E421.png\"/>',\n            '+1': '<img src=\"assets/emoji/emoji-E00E.png\"/>',\n            ':plus_one:': '<img src=\"assets/emoji/emoji-E00E.png\"/>'\n          })\n        }\n    }\n})(angular);","(function(){\n    angular \n           .module('ForumApp')\n           .service('emojieTool', [emojieToolfunc])\n           \n           function emojieToolfunc() {\n                   this.elementInfo = null;\n                   this.setElementInfo = function(elem){\n                       this.elementInfo = elem;\n                   }\n                   this.getElementInfo = function(){\n                       return(this.elementInfo);\n                   }\n                   this.resetElementInfo = function(){\n                       this.elementInfo = null;\n                   }\n           }\n})(angular);\n","(function(angular) {\n    var app = angular.module('ForumApp')\n\n    app.service('encodeImageToBase64', ['replyService', encodeImageToBase64]);\n    \n    function b64toBlob(b64, onsuccess, onerror) {\n    var img = new Image();\n\n    img.onerror = onerror;\n\n    img.onload = function onload() {\n        var canvas = document.createElement('canvas');\n        canvas.width = img.width;\n        canvas.height = img.height;\n\n        var ctx = canvas.getContext('2d');\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n        canvas.toBlob(onsuccess);\n    };\n\n    img.src = b64;\n}\n\n    function encodeImageToBase64(replyService) {\n\n        this.encode = function(document, file, ref, UID) {\n\n            if (file.length > 0) {\n                var fileToLoad = file[0];\n                var fileReader = new FileReader();\n\n                fileReader.onload = function(fileLoadedEvent) {\n                    var srcData = fileLoadedEvent.target.result; // <--- data: base64\n                   \n\n\nb64toBlob(srcData,\n    function(blob) {\n        var url = window.URL.createObjectURL(blob);\n        \n        ref.child(\"UserAuthInfo\").child(UID).update({\n                              Image: srcData\n                     })\n                     ref.child(\"Topics\").once(\"value\", function(snapshot) {\n\n                         snapshot.forEach(function(childSnapshot) {\n                             var key = childSnapshot.key();\n                             var childData = childSnapshot.val();\n                             if (childData.UID == UID) {\n                                 ref.child(\"Topics\").child(childData.pushKey).update({\n                                     Avatar: srcData\n                                 })\n                             }\n                         })\n                     })\n                    \n                     ref.child(\"Replies\").once(\"value\", function(snapshot) {\n\n                         snapshot.forEach(function(childSnapshot) {\n                             var key = childSnapshot.key();\n                             var childData = childSnapshot.val();\n                             childSnapshot.forEach(function(EvenChild){\n                                 var keyNest = EvenChild.key();\n                                 var childDataNest = EvenChild.val();\n                                 if(childDataNest.replyCreatorUID == UID){\n                                   ref.child(\"Replies\").child(key).child(childDataNest.pushKey).update\n                                     ({\n                                         replyCreatorAvatar : srcData                   \n                                     })\n                                 }\n                             })\n                         })\n                     })\n        \n        \n    }, function(error) {\n        // handle error\n    });\n                    return srcData;\n                }\n\n                fileReader.readAsDataURL(fileToLoad);\n            }\n\n        }\n\n    }\n})(angular);","(function(angular){\n    \n    var app = angular.module('ForumApp')\n    \n    app.service('letterAvatarService', ['$http',letterAvatarServiceFunc])\n    \n    function letterAvatarServiceFunc($http){\n        \n        this.letters = {\n\t\"letters\": {\n\n\t\t\"a\": {\n\t\t\t\"letter\": \"A\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/80702e6a48.png\"\n\t\t},\n\n\t\t\"b\": {\n\t\t\t\"letter\": \"B\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/8071bc0a44.png\"\n\t\t},\n\n\t\t\"c\": {\n\t\t\t\"letter\": \"C\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/8074bcecd7.png\"\n\t\t},\n\n\t\t\"d\": {\n\t\t\t\"letter\": \"D\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/8076021adb.png\"\n\t\t},\n\n\t\t\"e\": {\n\t\t\t\"letter\": \"E\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/8076c1e58c.png\"\n\t\t},\n\n\t\t\"f\": {\n\t\t\t\"letter\": \"F\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/8077d37398.png\"\n\t\t},\n\t\t\"g\": {\n\t\t\t\"letter\": \"G\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/8078c68317.png\"\n\t\t},\n\t\t\"h\": {\n\t\t\t\"letter\": \"H\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/807961a8bd.png\"\n\t\t},\n\t\t\"i\": {\n\t\t\t\"letter\": \"I\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/8079fcc67d.png\"\n\t\t},\n\t\t\"j\": {\n\t\t\t\"letter\": \"J\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/807a8d7f0f.png\"\n\t\t},\n\t\t\"k\": {\n\t\t\t\"letter\": \"K\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/807b86c6f3.png\"\n\t\t},\n\t\t\"l\": {\n\t\t\t\"letter\": \"L\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/807c95d97d.png\"\n\t\t},\n\t\t\"m\": {\n\t\t\t\"letter\": \"M\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/807e3ac2d8.png\"\n\t\t},\n\t\t\"n\": {\n\t\t\t\"letter\": \"N\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/807f4f28f3.png\"\n\t\t},\n\t\t\"o\": {\n\t\t\t\"letter\": \"O\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/80804f11ee.png\"\n\t\t},\n\t\t\"p\": {\n\t\t\t\"letter\": \"P\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/808141e6d7.png\"\n\t\t},\n\t\t\"q\": {\n\t\t\t\"letter\": \"Q\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/8081fc5643.png\"\n\t\t},\n\t\t\"r\": {\n\t\t\t\"letter\": \"R\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/8082bc920e.png\"\n\t\t},\n\t\t\"s\": {\n\t\t\t\"letter\": \"S\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/808407a7c8.png\"\n\t\t},\n\t\t\"t\": {\n\t\t\t\"letter\": \"T\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/80850ef5bc.png\"\n\t\t},\n\t\t\"u\": {\n\t\t\t\"letter\": \"U\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/8085d081ef.png\"\n\t\t},\n\t\t\"v\": {\n\t\t\t\"letter\": \"V\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/8086a80704.png\"\n\t\t},\n\t\t\"w\": {\n\t\t\t\"letter\": \"W\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/80876e07ac.png\"\n\t\t},\n\t\t\"x\": {\n\t\t\t\"letter\": \"X\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/808811fc04.png\"\n\t\t},\n\t\t\"y\": {\n\t\t\t\"letter\": \"Y\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/8088daddd7.png\"\n\t\t},\n\t\t\"z\": {\n\t\t\t\"letter\": \"Z\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/8089ce1ead.png\"\n\t\t}\n\n\t},\n\n\t\"numbers\": {\n\n\t\t\"0\": {\n\t\t\t\"number\": \"0\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/808b5e9427.png\"\n\t\t},\n\t\t\"1\": {\n\t\t\t\"number\": \"1\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/808c31726a.png\"\n\t\t},\n\t\t\"2\": {\n\t\t\t\"number\": \"2\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/808e69280f.png\"\n\t\t},\n\t\t\"3\": {\n\t\t\t\"number\": \"3\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/808f82b8e4.png\"\n\t\t},\n\t\t\"4\": {\n\t\t\t\"number\": \"4\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/8090c37df7.png\"\n\t\t},\n\t\t\"5\": {\n\t\t\t\"number\": \"5\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/809177bd5e.png\"\n\t\t},\n\t\t\"6\": {\n\t\t\t\"number\": \"6\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/809295a3dc.png\"\n\t\t},\n\t\t\"7\": {\n\t\t\t\"number\": \"7\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/80938a0f43.png\"\n\t\t},\n\t\t\"8\": {\n\t\t\t\"number\": \"8\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/809490f006.png\"\n\t\t},\n\t\t\"9\": {\n\t\t\t\"number\": \"9\",\n\t\t\t\"URL\": \"https://i.imgsafe.org/8095cb42bd.png\"\n\t\t}\n\n\t},\n\n\t\"Mystery\": \"https://i.imgsafe.org/80971f0be0.png\"\n};\n          \n            \n            \n        this.loadJSON = function(){\n            $http.get('services/assets/json/letterJSON.json').then(function(value) {\n                this.letters = value.data\n            })\n        }    \n        \n        this.logLetter = function(){\n            console.log(this.letters);\n        }\n        this.getLetterURL = function(string,loaderData){\n            \n                  var char = string.charAt(0);\n                    var len = 0;\n                    var lenNum = 0;\n                    var URLVALUE = '';\n                    \n                    for(var i in this.letters.letters){\n                        len++;\n                        if(i == (char.toLowerCase())){\n                            URLVALUE = this.letters.letters[i].URL;\n                        }\n                    }\n                    \n                    for(var i in this.letters.numbers){\n                        lenNum++;\n                        if(i == (char)){\n                            URLVALUE = this.letters.numbers[i].URL;\n                        }\n                    }\n                    \n                    if(!URLVALUE){\n                        URLVALUE = this.letters.Mystery\n                    }\n                    \n                    return URLVALUE;\n            \n            \n            \n\n        }    \n    \n    }\n})(angular);","(function(angular){\n    var app = angular.module('ForumApp')\n    \n    app.service('loadingService', [loadingServiceFunc])\n    \n    function loadingServiceFunc() {\n        this.loadingTo = null;\n        this.setLoadingTo = function(value) {\n            this.loadingTo = value;\n        }\n        this.getLoadingTo = function() {\n            return (this.loadingTo);\n        }\n    }\n})(angular);","(function(){\n    var app = angular.module('ForumApp')\n    \n    app.service('otherUserProfilePageService', [otherUserProfilePageServicefunc])\n    \n    function otherUserProfilePageServicefunc(){\n        this.otherUserID = ''\n        \n        this.setID = function(ID){\n            this.otherUserID = ID;\n        }\n        \n        this.getID = function(){\n            return (this.otherUserID);\n        }\n    }\n})(angular);","(function(angular) {\n    var app = angular.module('ForumApp')\n\n    app.service('otherUserService', [refService])\n    \n    function refService(){\n        this.otherUserInfo = null;\n        this.otherACTUALINFO = null;\n        this.setUserInfo = function(info){\n            this.otherUserInfo = info;\n        }\n        this.getUserInfo = function(){\n            return (this.otherUserInfo);\n        }\n        this.ACTUALsetUserInfo = function(info){\n            this.otherACTUALINFO = info;\n        }\n        this.ACTUALgetUserInfo = function(){\n            return (this.otherACTUALINFO);\n        }\n    }\n})(angular);","(function(angular) {\n    var app = angular.module('ForumApp')\n\n    app.service('refService', [\"$firebaseAuth\", refService])\n    \n    function refService($firebaseAuth){\n        this.ref = function() {\n            return new Firebase('https://uniquecodersforums.firebaseio.com/');\n        }\n        this.refAuth = function() {\n            return $firebaseAuth(this.ref());\n        }\n    \n    }\n})(angular);","(function(angular){\n    'use strict';\n    \n    var app = angular.module('ForumApp')\n    \n    app.service('replaceService', [replaceServicefunc])\n    \n    function replaceServicefunc(){\n        this.replaceAllString = function(str1, str2, ignore) {\n                 return this.replace(new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g,\"\\\\$&\"),(ignore?\"gi\":\"g\")),(typeof(str2)==\"string\")?str2.replace(/\\$/g,\"$$$$\"):str2);\n            } \n    }\n})(angular);","(function(angular){\r\n    var app = angular.module('ForumApp')\r\n\r\n    app.service('replyService', [replyService])\r\n    function replyService(){\r\n        this.topicTitle = \"\";\r\n        this.creatorTitle = \"\";\r\n        this.creatorUID = \"\"\r\n        this.creatorUsername = \"\"\r\n        this.creatorValue = \"\"\r\n        this.creatorDate = \"\"\r\n        this.creatorAvatar = \"\";\r\n        this.creatorEmail = \"\"\r\n        this.timeSinceCreated = \"\";\r\n        this.postNum = \"\"\r\n        this.setTopicInfo = function(title,creator,uid,username,value,date,email,since,avatar,postNum){\r\n            this.topicTitle = title;\r\n            this.creatorTitle = creator;\r\n            this.creatorUID = uid;\r\n            this.creatorUsername = username;\r\n            this.creatorValue = value;\r\n            this.creatorDate = date;\r\n            this.creatorEmail = email;\r\n            this.timeSinceCreated = since;\r\n            this.creatorAvatar = avatar;\r\n            this.postNum = postNum;\r\n            return title,creator,uid,username,value,date,email,since;\r\n        }\r\n        this.getTopicInfo = function () {\r\n            return this.topicTitle,this.creatorTitle,\r\n                   this.creatorUID,this.creatorUsername,\r\n                   this.creatorValue,this.creatorDate,\r\n                   this.creatorEmail,this.timeSinceCreated\r\n                   this.creatorAvatar,this.postNum;\r\n        }\r\n    }\r\n})(angular);","(function(angular) {\n    var app = angular.module('ForumApp')\n    app.service('timeService', [timeService])\n\n    function timeService() {\n        this.getTimeF = function(time) {\n            switch (typeof time) {\n                case 'number':\n                    break;\n                case 'string':\n                    time = +new Date(time);\n                    break;\n                case 'object':\n                    if (time.constructor === Date) time = time.getTime();\n                    break;\n                default:\n                    time = +new Date();\n            }\n            var time_formats = [\n                [60, 'seconds', 1], // 60\n                [120, '1 min ago', '1 min from now'], // 60*2\n                [3600, 'min', 60], // 60*60, 60\n                [7200, '1h ago', '1h from now'], // 60*60*2\n                [86400, 'h', 3600], // 60*60*24, 60*60\n                [172800, 'Yesterday', 'Tomorrow'], // 60*60*24*2\n                [604800, 'days', 86400], // 60*60*24*7, 60*60*24\n                [1209600, 'Last week', 'Next week'], // 60*60*24*7*4*2\n                [2419200, 'weeks', 604800], // 60*60*24*7*4, 60*60*24*7\n                [4838400, 'Last month', 'Next month'], // 60*60*24*7*4*2\n                [29030400, 'months', 2419200], // 60*60*24*7*4*12, 60*60*24*7*4\n                [58060800, 'Last year', 'Next year'], // 60*60*24*7*4*12*2\n                [2903040000, 'years', 29030400], // 60*60*24*7*4*12*100, 60*60*24*7*4*12\n                [5806080000, 'Last century', 'Next century'], // 60*60*24*7*4*12*100*2\n                [58060800000, 'centuries', 2903040000] // 60*60*24*7*4*12*100*20, 60*60*24*7*4*12*100\n            ];\n            var seconds = (+new Date() - time) / 1000,\n                token = 'ago',\n                list_choice = 1;\n\n            if (seconds == 0) {\n                return 'Just now'\n            }\n            if (seconds < 0) {\n                seconds = Math.abs(seconds);\n                token = 'from now';\n                list_choice = 2;\n            }\n            var i = 0,\n                format;\n            while (format = time_formats[i++])\n                if (seconds < format[0]) {\n                    if (typeof format[2] == 'string')\n                        return format[list_choice];\n                    else\n                        return Math.floor(seconds / format[2]) + ' ' + format[1] + ' ' + token;\n                }\n            return time;\n        }\n\n        this.getTimeS = function(date) {\n\n            var seconds = Math.floor((new Date() - date) / 1000);\n\n            var interval = Math.floor(seconds / 31536000);\n\n            if (interval > 1) {\n                return interval + \" years\";\n            }\n            interval = Math.floor(seconds / 2592000);\n            if (interval > 1) {\n                return interval + \" months\";\n            }\n            interval = Math.floor(seconds / 86400);\n            if (interval > 1) {\n                return interval + \" days\";\n            }\n            interval = Math.floor(seconds / 3600);\n            if (interval > 1) {\n                return interval + \" hours\";\n            }\n            interval = Math.floor(seconds / 60);\n            if (interval > 1) {\n                return interval + \" minutes\";\n            }\n            return Math.floor(seconds) + \" seconds\";\n        }\n    }\n})(angular);","(function(){\n    'use strict';\n    \n        angular\n               .module('ForumApp')\n               .service('topicLikesService', [topicLikesServiceFunc])\n               \n               function topicLikesServiceFunc(){\n                   this.info = [];\n                   \n                   this.setInfo = function(info1, info2){\n                       this.info.push(info1);\n                       this.info.push(info2);\n                   }\n                   \n                   this.resetInfo = function(){\n                       this.info = [];\n                   }\n                   \n                   this.getInfo = function() {\n                       return (this.info);\n                   }\n                   \n                   this.getInfo1 = function(){\n                     return (this.info[0]);   \n                   }\n                   this.getInfo2 = function(){\n                     return (this.info[1]);   \n                   }\n               }\n})(angular);","(function(angular){\n   \n   'use strict';\n   \nangular\n\n   .module('ForumApp')\n   .controller('404Controller', [\"$scope\", ErrControllerFunc])\n   \n   function ErrControllerFunc($scope){\n       \n   }\n    \n})(angular);","(function(angular) {\n\n    'use strict';\n    \n    angular\n            .module('ForumApp')\n            .controller('authCtrl', [\"$scope\", \"$state\", \"refService\", \"$firebaseObject\", \"authCheckTrueService\", \"$firebaseArray\", \"$http\", \"$mdDialog\", \"letterAvatarService\", authCtrl]);\n\n    function authCtrl($scope, $state, refService, $firebaseObject, authCheckTrueService, $firebaseArray, $http, $mdDialog, letterAvatarService) {\n        $scope.loadImageJSON = 'NOTLOADED';\n        authCheckTrueService.checkAuth(refService.ref(), \"authHome.desc\");\n\n        function PASSWORDRESET(length) {\n            var possibleChars = ['abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!?_-'];\n            var password = '';\n            for (var i = 0; i < length; i += 1) {\n                password += possibleChars[Math.floor(Math.random() * possibleChars.length)];\n            }\n            return password;\n        }\n\n\n        $scope.toggleClass = function() {\n            $scope.enabled = true;\n        }\n        $scope.close = function() {\n            $scope.enabled = false;\n        }\n\n\n        $scope.forgotPass = function() {\n            alertify.prompt(\n                'Recover Password',\n                'Enter Email Of Account',\n                function(evt, value) {\n                    refService.ref().resetPassword({\n                        email: value\n                    }, function(error) {\n                        if (error) {\n                            switch (error.code) {\n                                case \"INVALID_USER\":\n                                    alertify.error(\"The specified user account does not exist.\");\n                                    break;\n                                default:\n                                    alertify.error(\"Error resetting password:\" + error);\n                            }\n                        }\n                        else {\n                            alertify.success(\"Password reset email sent successfully!\");\n                        }\n                    });\n                }\n            );\n        }\n        \n         $scope.oAuthLogin = function(provider) {\n\n            refService.ref().authWithOAuthPopup(provider, function(error, authData) {\n                if (error) {\n                    alertify.error(\"Log in Failed. See Console for more details\");\n                    console.error(\"ERROR LOGIN : \" + error);\n                    refService.ref().unauth();\n                }\n                else {\n\n                    var usernames = $firebaseArray(refService.ref().child(\"UserAuthInfo\"));\n                    refService.ref().child(\"UserAuthInfo\").child(authData.uid).once(\"value\", function(snapLog) {\n\n                        if (snapLog.val() == null) {\n                            // alertify.error(\"You Havent Signed Up With That Provider! Try Registering That Provider First!\");\n                            vex.dialog.prompt({\n                                message: 'What Email Do you want?',\n                                placeholder: 'Email...',\n                                callback: function(email) {\n\n                                    usernames.$loaded(function(data) {\n                                        for (var i = 0; i < data.length; i++) {\n\n                                            if (data[i].Username == authData[provider].username) {\n                                                $scope.isDupe = true;\n                                                break;\n                                            }\n                                        }\n\n                                        if ($scope.isDupe != true) {\n\n                                            refService.ref().createUser({\n                                                email: email,\n                                                password: PASSWORDRESET(16)\n                                            }, function(error, userData) {\n                                                if (error) {\n                                                    switch (error.code) {\n                                                        case \"EMAIL_TAKEN\":\n                                                            alertify.error(\"The new user account cannot be created because the email is already in use.\");\n                                                            break;\n                                                        case \"INVALID_EMAIL\":\n                                                            alertify.error(\"The specified email is not a valid email.\");\n                                                            break;\n                                                        default:\n                                                            alertify.error(\"Error creating user:\", error);\n                                                    }\n                                                }\n                                                else {\n\n                                                    if (provider == 'twitter' || provider == 'google') {\n\n                                                        if (provider == 'google') {\n                                                            refService.ref().child(\"UserAuthInfo\").child(authData.uid).set({\n                                                                Username: authData[provider].displayName,\n                                                                Email: email,\n                                                                UID: authData.uid,\n                                                                Image: authData[provider].profileImageURL,\n                                                                Moderator: false,\n                                                                BronzeBadge: 0,\n                                                                SilverBadge: 0,\n                                                                GoldBadge: 0,\n                                                                PlatinumBadge: 0,\n                                                                newUser: true,\n                                                                profileBackground: 'http://cine.nl/wp-content/uploads/2015/07/the-revenant-trailer.jpg',\n                                                                followers: 0,\n                                                                following: 0,\n                                                                profileViews: 0,\n                                                                Precence: -1,\n                                                                Points : 0,\n                                                                DateJoined : Date.now(),\n                                                            })\n                                                            alertify.success(\"Sucessfully Reistered. Login Now!\");\n                                                            refService.ref().unauth();\n                                                        }\n                                                        else {\n                                                            refService.ref().child(\"UserAuthInfo\").child(authData.uid).set({\n                                                                Username: authData[provider].username,\n                                                                Email: email,\n                                                                UID: authData.uid,\n                                                                Image: authData[provider].profileImageURL,\n                                                                Moderator: false,\n                                                                BronzeBadge: 0,\n                                                                SilverBadge: 0,\n                                                                GoldBadge: 0,\n                                                                PlatinumBadge: 0,\n                                                                newUser: true,\n                                                                profileBackground: authData[provider].cachedUserProfile.profile_background_image_url_https,\n                                                                followers: 0,\n                                                                following: 0,\n                                                                profileViews: 0,\n                                                                Precence: -1,\n                                                                Points : 0,\n                                                                DateJoined : Date.now(),\n                                                            })\n                                                            alertify.success(\"Sucessfully Reistered. Login Now!\");\n                                                            refService.ref().unauth();\n                                                        }\n                                                    }\n                                                    else {\n                                                        refService.ref().child(\"UserAuthInfo\").child(authData.uid).set({\n                                                            Username: authData[provider].username,\n                                                            Email: email,\n                                                            UID: authData.uid,\n                                                            Image: authData[provider].profileImageURL,\n                                                            Moderator: false,\n                                                            BronzeBadge: 0,\n                                                            SilverBadge: 0,\n                                                            GoldBadge: 0,\n                                                            PlatinumBadge: 0,\n                                                            newUser: true,\n                                                            profileBackground: 'http://cine.nl/wp-content/uploads/2015/07/the-revenant-trailer.jpg',\n                                                            followers: 0,\n                                                            following: 0,\n                                                            profileViews: 0,\n                                                            Precence: -1,\n                                                            Points : 0,\n                                                            DateJoined : Date.now(),\n                                                        })\n                                                        alertify.success(\"Sucessfully Reistered. Login Now!\");\n                                                        refService.ref().unauth();\n                                                    }\n\n\n                                                }\n                                            })\n\n                                        }\n                                        else {\n\n                                            vex.dialog.prompt({\n                                                message: 'Username is a duplicate. Please Choose another one.',\n                                                placeholder: 'Username..',\n                                                callback: function(username) {\n                                                    for (var i = 0; i < data.length; i++) {\n\n                                                        if (data[i].Username == username) {\n                                                            $scope.isUsernameDupeNested = true;\n                                                            break;\n                                                        }\n                                                    }\n\n                                                    if ($scope.isUsernameDupeNested == false) {\n                                                        refService.ref().createUser({\n                                                            email: email,\n                                                            password: PASSWORDRESET(16)\n                                                        }, function(error, userData) {\n                                                            if (error) {\n                                                                switch (error.code) {\n                                                                    case \"EMAIL_TAKEN\":\n                                                                        alertify.error(\"The new user account cannot be created because the email is already in use.\");\n                                                                        break;\n                                                                    case \"INVALID_EMAIL\":\n                                                                        alertify.error(\"The specified email is not a valid email.\");\n                                                                        break;\n                                                                    default:\n                                                                        alertify.error(\"Error creating user:\", error);\n                                                                }\n                                                            }\n                                                            else {\n\n                                                                if (provider == 'google') {\n                                                                    refService.ref().child(\"UserAuthInfo\").child(authData.uid).set({\n                                                                        Username: authData[provider].displayName,\n                                                                        Email: email,\n                                                                        UID: authData.uid,\n                                                                        Image: authData[provider].profileImageURL,\n                                                                        Moderator: false,\n                                                                        BronzeBadge: 0,\n                                                                        SilverBadge: 0,\n                                                                        GoldBadge: 0,\n                                                                        PlatinumBadge: 0,\n                                                                        newUser: true,\n                                                                        profileBackground: 'http://cine.nl/wp-content/uploads/2015/07/the-revenant-trailer.jpg',\n                                                                        followers: 0,\n                                                                        following: 0,\n                                                                        profileViews: 0,\n                                                                        Precence: -1,\n                                                                        Points : 0,\n                                                                        DateJoined : Date.now(),\n                                                                    })\n                                                                    alertify.success(\"Sucessfully Reistered. Login Now!\");\n                                                                    refService.ref().unauth();\n                                                                }\n                                                                else {\n                                                                    refService.ref().child(\"UserAuthInfo\").child(authData.uid).set({\n                                                                        Username: authData[provider].username,\n                                                                        Email: email,\n                                                                        UID: authData.uid,\n                                                                        Image: authData[provider].profileImageURL,\n                                                                        Moderator: false,\n                                                                        BronzeBadge: 0,\n                                                                        SilverBadge: 0,\n                                                                        GoldBadge: 0,\n                                                                        PlatinumBadge: 0,\n                                                                        newUser: true,\n                                                                        profileBackground: authData[provider].cachedUserProfile.profile_background_image_url_https,\n                                                                        followers: 0,\n                                                                        following: 0,\n                                                                        profileViews: 0,\n                                                                        Precence: -1,\n                                                                        Points : 0,\n                                                                        DateJoined : Date.now(),\n                                                                    })\n                                                                    alertify.success(\"Sucessfully Reistered. Login Now!\");\n                                                                    refService.ref().unauth();\n                                                                }\n\n                                                            }\n                                                        })\n                                                    }\n                                                    else {\n                                                        alertify.error(\"The username you entered is another dupe... Refresh will be made soon. Please Give a Unique Username next time you register.\")\n                                                        refService.ref().unauth();\n                                                        setTimeout(function() {\n                                                            location.reload(true);\n                                                        }, 10000)\n                                                    }\n\n\n\n                                                }\n                                            })\n\n\n\n                                        }\n                                    });\n\n\n                                }\n\n\n                            })\n\n\n\n                        }\n                        else {\n\n                            alertify.success(\"Sucessfully Logged In!\");\n                            $state.go('authHome.desc');\n\n                        }\n\n                    })\n\n\n\n                }\n            });\n        }\n        $scope.loginAUTH = function() {\n            refService.ref().authWithPassword({\n                \"email\": $scope.user.email,\n                \"password\": $scope.user.password\n            }, function(error, authData) {\n                if (error) {\n                    alertify.error(\"Unsucessfull Authentication. See console for details\")\n                    console.error(error);\n                }\n                else {\n                    alertify.success(\"Sucessfull Authentication\");\n                    $state.go('authHome')\n                }\n            });\n        }\n\n\n\n        $scope.regissterForm = function() {\n\n            $scope.isUsernameDupe = false;\n            refService.ref().child(\"UserAuthInfo\").on(\"value\", function(snapshot) {\n                snapshot.forEach(function(childSNap) {\n\n                    var key = childSNap.key();\n                    var childData = childSNap.val();\n\n                    if (childData.Username == $scope.register.username) {\n                        $scope.isUsernameDupe = true;\n                        return;\n                    }\n                })\n                if (($scope.isUsernameDupe != true)) {\n                    if ($scope.isUsernameDupe == false) {\n                        refService.ref().createUser({\n                            email: $scope.register.email,\n                            password: $scope.register.password\n                        }, function(error, userData) {\n                            if (error) {\n                                switch (error.code) {\n                                    case \"EMAIL_TAKEN\":\n                                        alertify.error(\"The new user account cannot be created because the email is already in use.\");\n                                        break;\n                                    case \"INVALID_EMAIL\":\n                                        alertify.error(\"The specified email is not a valid email.\");\n                                        break;\n                                    default:\n                                        alertify.error(\"Error creating user:\", error);\n                                }\n                            }\n                            else {\n                                $scope.$evalAsync(\n                                    function() {\n                                        var letterAvatar = letterAvatarService.getLetterURL($scope.register.username, $scope.loadImageJSON);\n                                        setTimeout(function() {\n                                            refService.ref().child(\"UserAuthInfo\").child(userData.uid).set({\n                                                Username: $scope.register.username,\n                                                Email: $scope.register.email,\n                                                UID: userData.uid,\n                                                Image: letterAvatarService.getLetterURL($scope.register.username),\n                                                Moderator: false,\n                                                BronzeBadge: 0,\n                                                SilverBadge: 0,\n                                                GoldBadge: 0,\n                                                PlatinumBadge: 0,\n                                                newUser: true,\n                                                profileBackground: 'http://rmdeaftheatre.com/wp-content/uploads/2012/11/gray-background-3.jpg',\n                                                followers: 0,\n                                                following: 0,\n                                                profileViews: 0,\n                                                Precence: -1,\n                                                Points : 0,\n                                                DateJoined : Date.now(),\n                                            });\n\n                                        }, 1500)\n\n                                        alertify.success(\"Sucessfully Registered\")\n                                    }\n                                );\n\n                            }\n                        });\n                    }\n\n                }\n                else {\n                    alertify.error(\"Username already in use. If you see a green sign above saying You sucessfully registered. Dont worry about this\");\n                }\n            })\n\n\n\n\n        }\n\n        $scope.setResponse = function() {\n\n            $mdDialog.show(\n                $mdDialog.alert()\n                .clickOutsideToClose(true)\n                .title('Sucess')\n                .textContent('Recaptcha Submited Sucessfully')\n                .ariaLabel('Offscreen Demo')\n                .ok('Redirecting...')\n                .openFrom({\n                    top: -50,\n                    width: 30,\n                    height: 80\n                })\n                .closeTo({\n                    left: 1500\n                })\n            );\n            setTimeout(function() {\n                $mdDialog.cancel();\n            }, 1000);\n        }\n\n    }\n\n})(angular);","(function(angular) {\n    \n    'use strict';\n    \n    angular\n           .module('ForumApp')\n           .controller('authDescCtrl', [\"$scope\", \"dateFilter\", \"$mdDialog\", \"$state\", \"$mdMedia\", \"$mdBottomSheet\", \"$firebaseObject\", \"refService\", \"$timeout\", \"$firebaseArray\", authDescCtrl])\n\n    function authDescCtrl($scope, dateFilter, $mdDialog, $state, $mdMedia, $mdBottomSheet, $firebaseObject, refService, $timeout, $firebaseArray) {\n\n        $scope.authDataDesc = refService.ref().getAuth();\n\n        $scope.topic = $firebaseObject(refService.ref().child(\"Topics\"))\n        $scope.topicName = $firebaseArray(refService.ref().child(\"Topics\"))\n        $scope.topicViewsLen = [];\n\n\n        //Setting Views\n        $scope.topicName.$loaded(function(data) {\n            data.forEach(function(dataChild) {\n                var x = dataChild.Views;\n                var len = 0;\n                for (var i in dataChild.Views) {\n                    len++;\n                }\n                $scope.topicViewsLen.push(len);\n            })\n            var times = 0;\n            data.forEach(function(dataChild) {\n                refService.ref().child(\"Topics\").child(dataChild.pushKey).update({\n                    ViewsLen: $scope.topicViewsLen[times]\n                })\n                times++;\n \n            })\n        })\n        \n       \n        \n        function bookmarked(rep){\n            var returne = \"False\"\n                refService.ref().child(\"Topics\").once(\"value\", function(snapshotBookMarkOutlineTopic) {\n                        snapshotBookMarkOutlineTopic.forEach(function(evenChildBook) {\n                                var bookkey = evenChildBook.key();\n                                var bookchildData = evenChildBook.val();\n                                if(bookchildData.Bookmarks) {\n                                    if(bookchildData.Bookmarks[$scope.authDataDesc.uid].Bookmark == true)\n                                        returne = \"True\"\n                                }\n                        })\n                })\n            return returne;\n        }\n        \n        $scope.bookmarked = function(rep){\n            if($scope.authDataDesc == null){\n                return false;\n            }\n            else{\n                if(bookmarked(rep) == \"True\")\n                    return true;\n                else\n                    return false;\n            }\n        }\n\n        $scope.goToPerson = function(person, event) {\n            $mdDialog.show(\n                $mdDialog.alert()\n                .title('Navigating')\n                .textContent('Inspect ' + person)\n                .ariaLabel('Person inspect demo')\n                .ok('Neat!')\n                .targetEvent(event)\n            );\n        };\n        \n         $scope.loadUsers = function(topic) {\n            // Use timeout to simulate a 650ms request.\n            return $timeout(function() {\n                $scope.tagsOption = topic.Tags;\n            }, 650);\n        };\n\n\n\n        $scope.showNewTopic = function(ev) {\n            if (ev) {\n                var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\n                $mdBottomSheet.show({\n                    controller: 'newTopicCtrl',\n                    templateUrl: 'app/components/newTopic/newTopic.html',\n                    parent: angular.element(document.body),\n                    resolve: {\n                        // controller will not be loaded until $waitForAuth resolves\n                        // Auth refers to our $firebaseAuth wrapper in the example above\n                        \"currentAuth\": [\"refService\", function(refService) {\n                            // $waitForAuth returns a promise so the resolve waits for it to complete\n                            return refService.refAuth().$requireAuth();\n                        }]\n                    },\n                    targetEvent: ev,\n                    clickOutsideToClose: true,\n                    fullscreen: useFullScreen\n                }).then(function(clickedItem) {\n                    $scope.alert = clickedItem['name'] + ' clicked!';\n                });\n\n            } else {\n\n\n            }\n        }\n\n        $scope.goToTOPICAUTCOMPLETE = function(info) {\n            $state.go(\"authHome.topic\", {\n                \"USERNAME\": info.Username,\n                \"POST\": info.Postnum\n            })\n        }\n        $scope.goToTopic = function(avatar, date, email, title, uid, username, value, postnum) {\n            $state.go(\"authHome.topic\", {\n                \"USERNAME\": username,\n                \"POST\": postnum\n            })\n\n        }\n\n\n    }\n})(angular);","(function(angular) {\n\n    'use strict';\n\n    angular\n        .module('ForumApp')\n        .controller('editReplyCtrl', [\"$scope\", 'emojiListService', \"$mdDialog\", \"currentAuth\", \"refService\", \"editTopicService\", \"editReplyService\", \"$mdMedia\", editReplyFunc])\n\n    function editReplyFunc($scope, emojiListService, $mdDialog, currentAuth, refService, editTopicService, editReplyService, $mdMedia) {\n        $scope.hide = function() {\n            $mdDialog.hide();\n        };\n        $scope.cancel = function() {\n            $mdDialog.cancel();\n        };\n        $scope.answer = function(answer) {\n            $mdDialog.hide(answer);\n        };\n        String.prototype.replaceAt = function(index, character) {\n            return this.substr(0, index) + character + this.substr(index + character.length);\n        }\n        String.prototype.replaceAll = function(str1, str2, ignore) {\n            return this.replace(new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g, \"\\\\$&\"), (ignore ? \"gi\" : \"g\")), (typeof(str2) == \"string\") ? str2.replace(/\\$/g, \"$$$$\") : str2);\n        }\n\n        var elem_hash = '';\n        $scope.dataTrib = [];\n        $scope.dataTribHash = [];\n        refService.ref().child(\"UserAuthInfo\").once(\"value\", function(snapUser) {\n            snapUser.forEach(function(snapUserEach) {\n                var key = snapUserEach.key();\n                var val = snapUserEach.val();\n                $scope.dataTrib.push({\n                    key: '<img src=\"' + val.Image + '\" width=\"30px\" height=\"30px\"/> ' + val.Username,\n                    value: val.Username\n                })\n                var tribute = new Tribute({\n                    trigger: '@',\n                    values: $scope.dataTrib,\n                })\n                angular.element(document).ready(function() {\n                    tribute.attach(document.getElementById('markdownUserType'));\n                })\n\n            })\n        })\n\n        refService.ref().child(\"Topics\").once(\"value\", function(snapTopic) {\n            snapTopic.forEach(function(snapTopicEven) {\n                var key = snapTopicEven.key();\n                var val = snapTopicEven.val();\n                $scope.dataTribHash.push({\n                    key: \"#\" + val.Postnum + \":\" + val.Title,\n                    value: \"#\" + (val.Postnum)\n                })\n            })\n            var tribute_hash = new Tribute({\n                trigger: '#',\n                values: ($scope.dataTribHash),\n                selectTemplate: function(item) {\n                    return (item.original.value).replace(\"@\", \"\");\n                },\n            })\n            angular.element(document).ready(function() {\n                setTimeout(function() {\n                    tribute_hash.attach(document.getElementById('markdownUserType'));\n                }, 500)\n            })\n        })\n\n\n        marked.setOptions({\n            renderer: new marked.Renderer(),\n            gfm: true,\n            tables: true,\n            breaks: false,\n            pedantic: false,\n            sanitize: false,\n            smartLists: true,\n            smartypants: false,\n            highlight: function(code, lang) {\n                if (lang) {\n                    return hljs.highlight(lang, code).value;\n                }\n                else {\n                    return hljs.highlightAuto(code).value;\n                }\n            }\n        });\n\n        $scope.emojieList = emojiListService.getEmojies();\n        $scope.myConfig = {\n            create: true,\n            onChange: function(value) {\n                console.log('onChange', value)\n            },\n            valueField: 'ID',\n            labelField: 'Name',\n            maxItems: 5,\n            required: true,\n        }\n\n        $scope.$watch('editValue', function(current, original) {\n            if (current)\n                $scope.outputText = marked(current);\n            //EMOJIE LIST {PARAM} {https://github.com/amanuel2/ng-forum/wiki/How-to-write-emotions}\n            if ($scope.outputText) {\n                for (var prop in $scope.emojieList)\n                    $scope.outputText = $scope.outputText.replaceAll(prop, $scope.emojieList[prop]);\n            }\n        });\n\n        $scope.shortcuts = function(shortcutName) {\n            var element = document.getElementById('markdownUserType');\n            switch (shortcutName) {\n                case 'bold':\n                    element.value += '**BoldTextHere**';\n                    break;\n                case 'italics':\n                    element.value += '_ItalicTextHere_';\n                    break;\n\n                case 'image':\n                    element.value += '![](http://)';\n                    break;\n\n                case 'url':\n                    element.value += '[](http://)';\n                    break;\n\n                case 'quote':\n                    element.value += '> Quote Here';\n                    break;\n\n                case 'number':\n                    element.value += '\\n\\n 1. List item'\n                    break;\n\n                case 'bullet':\n                    element.value += '\\n\\n * List item'\n                    break;\n                case 'header':\n                    element.value += '# Header Here.';\n                    break;\n\n                case 'code':\n                    element.value += \"```[languageName. If you dont know delete this bracket and leave it with three ticks]\\n\" + \"console.log('Code Here') \\n\" + \"```\";\n                    break;\n\n                case 'horizontal':\n                    element.value += \"\\n\\n -----\"\n                    break;\n\n                case 'paste':\n                    if (window.clipboardData) {\n                        element.value += window.clipboardData.getData(\"Text\");\n                    }\n                    else {\n                        alertify.error(window.clipboardData.getData('Text'));\n                    }\n\n                case 'emojies':\n\n                case 'help':\n                    window.open('https://simplemde.com/markdown-guide');\n                    break;\n\n                case 'emojies':\n                    window.open('https://github.com/amanuel2/ng-forum/wiki/How-to-write-emotions');\n\n            }\n        }\n\n        $scope.editREPLY = function() {\n            var topicPushKey = editReplyService.getPushK();\n            var POST = editReplyService.getDatee();\n            var USERNAME = editReplyService.getName();\n            var UIDUSERNAME = editReplyService.getTopicUID();\n\n\n            refService.ref().child(\"Replies\").child(USERNAME + POST).on(\"value\", function(snapshot) {\n                snapshot.forEach(function(childSnap) {\n                    var key = childSnap.key();\n                    var childData = childSnap.val();\n                    if (childData.pushKey == topicPushKey) {\n                        refService.ref().child(\"Replies\").child(USERNAME + POST).child(childData.pushKey).update({\n                            replyCreatorValue: $scope.editValue\n                        })\n                    }\n                })\n            })\n\n        }\n\n    }\n\n})(angular);","(function(angular) {\n    'use strict';\n\n    angular\n        .module('ForumApp')\n        .controller('editTopicPanelCtrl', ['$scope', 'emojiListService', 'refService', '$firebaseObject', '$stateParams', '$firebaseArray', '$mdDialog', '$mdMedia', editTopicPanelCtrlfunc]);\n\n    function editTopicPanelCtrlfunc($scope, emojiListService, refService, $firebaseObject, $stateParams, $firebaseArray, $mdDialog, $mdMedia) {\n        String.prototype.replaceAt = function(index, character) {\n            return this.substr(0, index) + character + this.substr(index + character.length);\n        }\n        String.prototype.replaceAll = function(str1, str2, ignore) {\n            return this.replace(new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g, \"\\\\$&\"), (ignore ? \"gi\" : \"g\")), (typeof(str2) == \"string\") ? str2.replace(/\\$/g, \"$$$$\") : str2);\n        }\n\n        var elem_hash = '';\n        $scope.dataTrib = [];\n        $scope.dataTribHash = [];\n        refService.ref().child(\"UserAuthInfo\").once(\"value\", function(snapUser) {\n            snapUser.forEach(function(snapUserEach) {\n                var key = snapUserEach.key();\n                var val = snapUserEach.val();\n                $scope.dataTrib.push({\n                    key: '<img src=\"' + val.Image + '\" width=\"30px\" height=\"30px\"/> ' + val.Username,\n                    value: val.Username\n                })\n                var tribute = new Tribute({\n                    trigger: '@',\n                    values: $scope.dataTrib,\n                })\n                angular.element(document).ready(function() {\n                    tribute.attach(document.getElementById('markdownUserType'));\n                })\n\n            })\n        })\n        \n        angular.element(document).ready(function() {\n             $(\"#e1\").select2({\n              placeholder: \"Tags...\",\n              allowClear: true,\n              \n              // match strings that begins with (instead of contains):\n              matcher: function(term, text) {\n                    return text.toUpperCase().indexOf(term.toUpperCase())==0;\n              }\n            });\n        })\n\n        refService.ref().child(\"Topics\").once(\"value\", function(snapTopic) {\n            snapTopic.forEach(function(snapTopicEven) {\n                var key = snapTopicEven.key();\n                var val = snapTopicEven.val();\n                $scope.dataTribHash.push({\n                    key: \"#\" + val.Postnum + \":\" + val.Title,\n                    value: \"#\" + (val.Postnum)\n                })\n            })\n            var tribute_hash = new Tribute({\n                trigger: '#',\n                values: ($scope.dataTribHash),\n                selectTemplate: function(item) {\n                    return (item.original.value).replace(\"@\", \"\");\n                },\n            })\n            angular.element(document).ready(function() {\n                setTimeout(function() {\n                    tribute_hash.attach(document.getElementById('markdownUserType'));\n                }, 500)\n            })\n        })\n\n\n        $scope.cancel = function() {\n            $mdDialog.cancel();\n        }\n\n        marked.setOptions({\n            renderer: new marked.Renderer(),\n            gfm: true,\n            tables: true,\n            breaks: false,\n            pedantic: false,\n            sanitize: false,\n            smartLists: true,\n            smartypants: false,\n            highlight: function(code, lang) {\n                if (lang) {\n                    return hljs.highlight(lang, code).value;\n                }\n                else {\n                    return hljs.highlightAuto(code).value;\n                }\n            }\n        });\n\n        $scope.emojieList = emojiListService.getEmojies();\n\n\n        $scope.outputTextFirebaseObject = $firebaseObject(refService.ref().child(\"Topics\"))\n        $scope.defaultTags = $firebaseArray(refService.ref().child(\"Constants\").child('Tags').child(\"Default\"));\n        $scope.outputTextFirebaseObject.$loaded(function(daDATA) {\n            for (var prop in daDATA) {\n                if (daDATA[prop] !== null) {\n                    if (daDATA[prop].Postnum == $stateParams.POST) {\n                        refService.ref().child(\"Topics\").child(daDATA[prop].pushKey).once(\"value\", function(daDATASNAP) {\n                            $scope.editTitle = daDATASNAP.val().Title\n                            $scope.editValue = daDATASNAP.val().Value;\n                        })\n\n                    }\n                }\n            }\n        })\n        \n          $scope.valTag;\n        angular.element(document).ready(function(){\n            $('#e1').on(\"change\", function(e) { \n               // what you would like to happen\n                $scope.valTag = (e.val);\n            });\n        })\n\n\n\n        $scope.myConfig = {\n            create: true,\n            onChange: function(value) {\n                console.log('onChange', value)\n            },\n            valueField: 'ID',\n            labelField: 'Name',\n            maxItems: 5,\n            required: true,\n        }\n        \n        //$scope.preTags;\n        \n        // refService.ref().child(\"Topics\").once(\"value\", function(snapTag){\n        //     snapTag.forEach(function(snapTagChild){\n        //         if(snapTagChild.val().Postnum == $stateParams.POST) {\n        //             $scope.tagsSelected = snapTagChild.val().Tags;\n        //         }\n        //     })\n        // })\n\n        $scope.$watch('editValue', function(current, original) {\n\n            $scope.outputText = marked(current);\n            //EMOJIE LIST {PARAM} {https://github.com/amanuel2/ng-forum/wiki/How-to-write-emotions}\n            for (var prop in $scope.emojieList)\n                $scope.outputText = $scope.outputText.replaceAll(prop, $scope.emojieList[prop]);\n        });\n\n        $scope.shortcuts = function(shortcutName) {\n            var element = document.getElementById('markdownUserType');\n            switch (shortcutName) {\n                case 'bold':\n                    element.value += '**BoldTextHere**';\n                    break;\n                case 'italics':\n                    element.value += '_ItalicTextHere_';\n                    break;\n\n                case 'image':\n                    element.value += '![](http://)';\n                    break;\n\n                case 'url':\n                    element.value += '[](http://)';\n                    break;\n\n                case 'quote':\n                    element.value += '> Quote Here';\n                    break;\n\n                case 'number':\n                    element.value += '\\n\\n 1. List item'\n                    break;\n\n                case 'bullet':\n                    element.value += '\\n\\n * List item'\n                    break;\n                case 'header':\n                    element.value += '# Header Here.';\n                    break;\n\n                case 'code':\n                    element.value += \"```[languageName. If you dont know delete this bracket and leave it with three ticks]\\n\" + \"console.log('Code Here') \\n\" + \"```\";\n                    break;\n\n                case 'horizontal':\n                    element.value += \"\\n\\n ----\"\n                    break;\n\n                case 'paste':\n                    if (window.clipboardData) {\n                        element.value += window.clipboardData.getData(\"Text\");\n                    }\n                    else {\n                        alertify.error(window.clipboardData.getData('Text'));\n                    }\n\n                case 'help':\n                    window.open('https://simplemde.com/markdown-guide');\n                    break;\n\n                case 'emojies':\n                    window.open('https://github.com/amanuel2/ng-forum/wiki/How-to-write-emotions');\n\n            }\n        }\n        $scope.editTopicPan = function() {\n            console.log($scope.valTag);\n            for(var i=0; i<$scope.valTag.length; i++)\n                $scope.valTag[i] = ($scope.valTag[i].replace(\":\", \"\")).replace(/[0-9]/g, \"\")\n                \n            $scope.tagsSelectedFireBase = [];\n            $scope.editTextStuff = $firebaseObject(refService.ref().child(\"Topics\"))\n            $scope.editTextStuff.$loaded(function(daDATA) {\n                for (var prop in daDATA) {\n                    if (daDATA[prop] !== null) {\n                        if (daDATA[prop].Postnum == $stateParams.POST) {\n                            refService.ref().child(\"Topics\").child(daDATA[prop].pushKey).update({\n                                Value: $scope.editValue,\n                                Title: $scope.editTitle,\n                                Tags: $scope.valTag\n                            })\n                        }\n                    }\n                }\n                $mdDialog.cancel();\n            })\n\n        }\n    }\n\n})(angular);","(function(angular) {\n\n  'use strict';\n  \n  angular\n        .module('ForumApp')\n        .controller('homeCtrl', [\"$scope\", \"$state\", \"refService\",\"loadingService\", homeCtrl])\n\n  function homeCtrl($scope, $state, refService,loadingService) {\n    //var checkAuth = refService.ref().getAuth() ? $state.go(\"authHome.desc\") : console.log(\"Not Logged In\");\n    // authCheckTrueService.checkAuth(refService.ref(), \"authHome.desc\");\n\n    var circle = document.querySelector('.material-btn');\n    var link = document.querySelector('.material-content').querySelectorAll('li');\n    var ham = document.querySelector('.material-hamburger');\n    var main = document.querySelector('main');\n    var win = window;\n\n    function openMenu(event) {\n\n      circle.classList.toggle('active');\n      ham.classList.toggle('material-close');\n      main.classList.toggle('active');\n      for (var i = 0; i < link.length; i++) {\n        link[i].classList.toggle('active');\n      }\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    }\n\n    function closeMenu() {\n      if (circle.classList.contains('active')) {\n        circle.classList.remove('active');\n        for (var i = 0; i < link.length; i++) {\n          link[i].classList.toggle('active');\n        }\n        ham.classList.remove('material-close');\n        main.classList.remove('active');\n      }\n    }\n\n    circle.addEventListener('click', openMenu, false);\n\n    win.addEventListener('click', closeMenu, false);\n\n\n  $scope.goTo = function(loc) {\n    loadingService.setLoadingTo(loc);\n    $state.go('loading')\n  }\n\n  }\n\n})(angular);","(function(angular){\n\n  'use strict';    \n    \n  angular\n      .module('ForumApp')\n      .controller('loadingCtrl', [\"$scope\",'$state','refService','loadingService', loadingCtrlfunc])\n    \n    function loadingCtrlfunc($scope,$state,refService,loadingService){\n        $scope.currentAuthGet = refService.ref().getAuth();\n        $scope.title = \"Ng-Forum\";\n        $scope.subTitle = \"Loading...\";\n         setTimeout(function(){\n             var loaderLoc = loadingService.getLoadingTo();\n             if(loaderLoc) \n                $state.go(loaderLoc)\n             else\n                window.location.href = ''\n         },3500)\n    }\n})(angular);","(function(angular) {\n    'use struct';\n    angular\n        .module('ForumApp')\n        .controller('newTopicCtrl', [\"$scope\", \"$mdDialog\", \"emojiListService\", \"$firebaseArray\", \"emojieTool\", \"$mdMedia\", \"emojiListService\", \"refService\", \"$firebaseArray\", \"$firebaseObject\", \"$mdBottomSheet\", '$http', newTopicCtrl])\n\n\n    function newTopicCtrl($scope, $mdDialog, emojiListService, $firebaseArray, emojieTool, $mdMedia, emojiListService, refService, $firebaseArray, $firebaseObject, $mdBottomSheet, $http) {\n\n\n        $scope.hide = function() {\n            $mdDialog.hide();\n        };\n\n        $scope.cancel = function() {\n            $mdDialog.cancel();\n        };\n        $scope.answer = function(answer) {\n            $mdDialog.hide(answer);\n        };\n        $scope.logicToGoBack = function() {\n            $mdBottomSheet.cancel()\n        }\n        String.prototype.replaceAt = function(index, character) {\n            return this.substr(0, index) + character + this.substr(index + character.length);\n        }\n        String.prototype.replaceAll = function(str1, str2, ignore) {\n            return this.replace(new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g, \"\\\\$&\"), (ignore ? \"gi\" : \"g\")), (typeof(str2) == \"string\") ? str2.replace(/\\$/g, \"$$$$\") : str2);\n        }\n\n        angular.element(document).ready(function() {\n            $(\"#e1\").select2({\n                placeholder: \"Tags...\",\n                allowClear: true,\n\n                // match strings that begins with (instead of contains):\n                matcher: function(term, text) {\n                    return text.toUpperCase().indexOf(term.toUpperCase()) == 0;\n                }\n            });\n        })\n        var elem_hash = '';\n        $scope.dataTrib = [];\n        $scope.dataTribHash = [];\n        refService.ref().child(\"UserAuthInfo\").once(\"value\", function(snapUser) {\n            snapUser.forEach(function(snapUserEach) {\n                var key = snapUserEach.key();\n                var val = snapUserEach.val();\n                $scope.dataTrib.push({\n                    key: '<img src=\"' + val.Image + '\" width=\"30px\" height=\"30px\"/> ' + val.Username,\n                    value: val.Username\n                })\n                var tribute = new Tribute({\n                    trigger: '@',\n                    values: $scope.dataTrib,\n                })\n                angular.element(document).ready(function() {\n                    tribute.attach(document.getElementById('markdownUserType'));\n                })\n\n            })\n        })\n\n        refService.ref().child(\"Topics\").once(\"value\", function(snapTopic) {\n            snapTopic.forEach(function(snapTopicEven) {\n                var key = snapTopicEven.key();\n                var val = snapTopicEven.val();\n                $scope.dataTribHash.push({\n                    key: \"#\" + val.Postnum + \":\" + val.Title,\n                    value: \"#\" + (val.Postnum)\n                })\n            })\n            var tribute_hash = new Tribute({\n                trigger: '#',\n                values: ($scope.dataTribHash),\n                selectTemplate: function(item) {\n                    return (item.original.value).replace(\"@\", \"\");\n                },\n            })\n            angular.element(document).ready(function() {\n                setTimeout(function() {\n                    tribute_hash.attach(document.getElementById('markdownUserType'));\n                }, 500)\n            })\n        })\n\n\n\n        $scope.currentAuthGet = refService.ref().getAuth();\n\n        marked.setOptions({\n            renderer: new marked.Renderer(),\n            gfm: true,\n            tables: true,\n            breaks: false,\n            pedantic: false,\n            sanitize: false,\n            smartLists: true,\n            smartypants: false,\n            highlight: function(code, lang) {\n                if (lang) {\n                    return hljs.highlight(lang, code).value;\n                }\n                else {\n                    return hljs.highlightAuto(code).value;\n                }\n            }\n        });\n\n        $scope.emojieList = emojiListService.getEmojies();\n        $scope.$watch('markdownData', function(current, original) {\n            $scope.outputText = marked(current);\n            //EMOJIE LIST {PARAM} {https://github.com/amanuel2/ng-forum/wiki/How-to-write-emotions}\n            for (var prop in $scope.emojieList)\n                $scope.outputText = $scope.outputText.replaceAll(prop, $scope.emojieList[prop]);\n        });\n\n        //Load Tags If Not Done...\n        var defaultTags = [\"Assembly\", \"C\", \"C++\", \"Java\", \"Javascript\", \"Firebase\", \"AngularFire\", \"MongoDB\", \"NodeJS\",\n            \"Go\", \"PHP\", \"MySQL\", \"Postgree\", \"Ruby\", \"Python\", \"Perl\", \".Net\", \"ASP.Net\", \"C#\", \"Visual Basic\", \"VB.net\", \"AngularJS\", \"Materializecss\"\n        ]\n\n        $scope.isThereTag = false;\n        $scope.defaultTags = $firebaseArray(refService.ref().child(\"Constants\").child('Tags').child(\"Default\"));\n\n        $scope.valTag;\n        angular.element(document).ready(function() {\n            $('#e1').on(\"change\", function(e) {\n                // what you would like to happen\n                $scope.valTag = e.val;\n            });\n        })\n\n        $scope.myConfig = {\n            create: true,\n            onChange: function(value) {\n                console.log('onChange', value)\n            },\n            valueField: 'ID',\n            labelField: 'Name',\n            maxItems: 5,\n            required: true,\n        }\n\n\n        $scope.tagCheckPrev = $firebaseObject(refService.ref().child(\"Constants\").child(\"Tags\"));\n\n        $scope.tagCheckPrev.$loaded(function(dataC) {\n            if (dataC.Default) {\n                console.log(\"Default Already Loaded\")\n            }\n            else {\n                for (var i = 0; i < defaultTags.length; i++) {\n                    refService.ref().child(\"Constants\").child(\"Tags\").child(\"Default\").push({\n                        ID: i,\n                        Name: defaultTags[i]\n                    })\n                }\n            }\n        })\n\n\n        $scope.undoAndRedo = function(ev, opt) {\n            if (opt == 'undo') {\n                $mdDialog.show(\n                    $mdDialog.alert()\n                    .parent(angular.element(document.querySelector('#popupContainer')))\n                    .clickOutsideToClose(true)\n                    .title('Undo')\n                    .textContent('Just Click Ctrl + Z Simultaneously to Undo Your Changes')\n                    .ariaLabel('Alert Dialog Demo')\n                    .ok('Got it!')\n                    .targetEvent(ev)\n                );\n            }\n\n            else {\n                $mdDialog.show(\n                    $mdDialog.alert()\n                    .parent(angular.element(document.querySelector('#popupContainer')))\n                    .clickOutsideToClose(true)\n                    .title('Redo')\n                    .textContent('Just Click Ctrl + Y Simultaneously to Redo Your Changes')\n                    .ariaLabel('Alert Dialog Demo')\n                    .ok('Got it!')\n                    .targetEvent(ev)\n                );\n            }\n        }\n\n        angular.element(document).ready(function() {\n            new Clipboard('.btn');\n        })\n        $scope.markdownData = \"# Type Your Markrdown Here\";\n\n        $scope.shortcuts = function(shortcutName) {\n            var element = document.getElementById('markdownUserType');\n            switch (shortcutName) {\n                case 'bold':\n                    element.value += '**BoldTextHere**';\n                    break;\n                case 'italics':\n                    element.value += '_ItalicTextHere_';\n                    break;\n\n                case 'image':\n                    element.value += '![](http://)';\n                    break;\n\n                case 'url':\n                    element.value += '[](http://)';\n                    break;\n\n                case 'quote':\n                    element.value += '> Quote Here';\n                    break;\n\n                case 'number':\n                    element.value += '\\n\\n 1. List item'\n                    break;\n\n                case 'bullet':\n                    element.value += '\\n\\n * List item'\n                    break;\n                case 'header':\n                    element.value += '# Header Here.';\n                    break;\n\n                case 'code':\n                    element.value += \"```[languageName. If you dont know delete this bracket and leave it with three ticks]\\n\" + \"console.log('Code Here') \\n\" + \"```\";\n                    break;\n\n                case 'horizontal':\n                    element.value += \"\\n\\n -----\"\n                    break;\n\n                case 'paste':\n                    if (window.clipboardData) {\n                        element.value += window.clipboardData.getData(\"Text\");\n                    }\n                    else {\n                        alertify.error(window.clipboardData.getData('Text'));\n                    }\n\n                case 'emojies':\n\n                case 'help':\n                    window.open('https://simplemde.com/markdown-guide');\n                    break;\n\n            }\n        }\n\n        $scope.emojieStart = function(ev) {\n            if (ev) {\n                var element = document.getElementById('markdownUserType');\n                emojieTool.setElementInfo(element);\n                var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\n                $mdDialog.show({\n                        controller: 'emojieToolCtrl',\n                        templateUrl: 'app/components/emojieTool/emojieTool.html',\n                        parent: angular.element(document.body),\n                        resolve: {\n                            // controller will not be loaded until $waitForAuth resolves\n                            // Auth refers to our $firebaseAuth wrapper in the example above\n                            \"currentAuth\": [\"refService\", function(refService) {\n                                // $waitForAuth returns a promise so the resolve waits for it to complete\n                                return refService.refAuth().$requireAuth();\n                            }]\n                        },\n                        targetEvent: ev,\n                        clickOutsideToClose: true,\n                        fullscreen: useFullScreen\n                    })\n                    .then(function(answer) {\n                        //Then Argument\n                    }, function() {\n                        //Canceled Dialog\n                    });\n            }\n            else {\n                return null;\n            }\n        }\n        $scope.submitNewTopic = function() {\n            for (var i = 0; i < $scope.valTag.length; i++)\n                $scope.valTag[i] = ($scope.valTag[i].replace(\":\", \"\")).replace(/[0-9]/g, \"\")\n\n            var search = $firebaseArray(refService.ref().child(\"Topics\"))\n            search.$loaded(function(data) {\n                refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGet.uid).on(\"value\", function(snapshot) {\n                    $scope.userAvatar = snapshot.val().Image;\n                    $scope.userName = snapshot.val().Username;\n                    $scope.userEmail = snapshot.val().Email;\n\n                    var pushing = refService.ref().child(\"Topics\").push({\n                        Title: $scope.topic.title,\n                        Value: $scope.markdownData,\n                        DateCreated: Date.now(),\n                        LastActivity: Date.now(),\n                        Username: $scope.userName,\n                        Email: $scope.userEmail,\n                        Avatar: $scope.userAvatar,\n                        UID: $scope.currentAuthGet.uid,\n                        Tags: $scope.valTag,\n                        Postnum: data.length,\n                        IsAcceptedAnwser: false,\n                        Votes: 0,\n                        AcceptedAnwserReplyNum: -1\n                    })\n\n                    refService.ref().child(\"Topics\").child(pushing.key()).update({\n                        pushKey: pushing.key()\n                    })\n                    $mdBottomSheet.cancel();\n                    $scope.topic.sentence = \"\";\n                    $scope.topic.title = \"\";\n                })\n            })\n\n\n        }\n        $scope.showhide = function(id) {\n            var e = document.getElementById(id);\n            e.style.display = (e.style.display == 'block') ? 'none' : 'block';\n        }\n\n\n\n\n    }\n})(angular);","(function(angular) {\n    \n    'use strict';\n    \n    angular\n    \n    .module('ForumApp')\n    .controller('otherUserProfileCtrl', [\"$scope\", \"$firebaseArray\", \"$stateParams\", \"refService\", \"$mdDialog\",\"otherUserProfilePageService\", \"$firebaseObject\", \"$state\", \"otherUserService\", \"timeService\", otherUserProfileCtrl])\n\n    function otherUserProfileCtrl($scope, $firebaseArray, $stateParams, refService, $mdDialog,otherUserProfilePageService, $firebaseObject, $state, otherUserService, timeService) {\n\n        var info = otherUserService.getUserInfo();\n        var obj = $firebaseObject(refService.ref().child(\"UserAuthInfo\").child(info.replyCreatorUID));\n        var topicLenObj = $firebaseArray(refService.ref().child(\"Topics\"));\n        $scope.precence = \"\";\n        $scope.timeSinceNoPageOBJ = \"Not Set\"\n        $scope.timeSinceNoPage = \"Not\";\n        $scope.currentAuthGetOTHER = refService.ref().getAuth();\n        $scope.info = otherUserService.getUserInfo()\n        $scope.otherUserUID = $scope.info.replyCreatorUID\n        $scope.otherUserUsername = '';\n\n\n\n        obj.$loaded(function(data) {\n                $scope.info = otherUserService.getUserInfo()\n                $scope.ACTUALinfo = otherUserService.ACTUALgetUserInfo();\n                $scope.otherUserEmail = $scope.info.replyCreatorEmail\n                $scope.otherUserImage = $scope.info.replyCreatorAvatar\n                $scope.otherUserUID = $scope.info.replyCreatorUID\n                $scope.otherUserUsername = $scope.info.replyCreatorUsername;\n                $scope.numFollowing = data.following;\n                $scope.numFollowers = data.followers;\n                if ($scope.ACTUALinfo.Moderator == false) {\n                    $scope.otherMod = \"Not a Moderator\";\n                }\n                else {\n                    $scope.otherMod = \"Respected Moderator\";\n                }\n                $scope.otherDesc = $scope.ACTUALinfo.Description || \"This user is silent as the butterflies\";\n                $scope.count = 0;\n\n                 topicLenObj.$loaded(function(topicData) {\n                     for (var i = 0; i < topicData.length; i++) {\n                         if (topicData[i].UID == $scope.otherUserUID) {\n                             $scope.count++;\n                         }\n                     }\n                 })\n\n                $scope.timeSINCEOBJ = $firebaseObject(refService.ref());\n                $scope.timeSINCEOBJ.$loaded(function(dataLOAD){\n                    var OBJPRECENCE = dataLOAD.presence;\n                    for(var prop in OBJPRECENCE){\n                        var id = $scope.otherUserUID\n                        $scope.timeSinceNoPageOBJ = OBJPRECENCE[id];\n                    }\n                })\n                \n                var userRef = new Firebase('https://uniquecodersforums.firebaseio.com/presence/' + $scope.otherUserUID);\n                userRef.once(\"value\", function(snapshotPrecence) {\n                    if (snapshotPrecence.val() == \"Online\")\n                        $scope.precence = true\n\n                    else if (snapshotPrecence.val() == \"Idle\")\n                        $scope.precence = \"Idle\"\n\n                    else{\n                        $scope.precence = false\n                        $scope.timeSinceNoPage = timeService.getTimeF(new Date(parseInt(snapshotPrecence.val())));\n                        console.log($scope.timeSinceNoPage)\n                    }\n\n                })\n            },\n            function(error) {\n                console.error(\"Error:\", error);\n            }\n        );\n       \n\n\n\n        $scope.hide = function() {\n            $mdDialog.hide();\n        };\n        $scope.cancel = function() {\n            $mdDialog.cancel();\n        };\n        $scope.answer = function(answer) {\n            $mdDialog.hide(answer);\n        };\n        \n        $scope.goToPage = function(){\n            console.log($scope.otherUserUsername);\n            otherUserProfilePageService.setID($scope.otherUserUID);\n            $state.go('authHome.otherUserPage', {\n                'USERNAME' : $scope.otherUserUsername\n            })\n        }\n\n\n         $scope.addFolower = function() {\n            $scope.followerCheck = $firebaseArray(refService.ref().child(\"UserAuthInfo\").child($scope.otherUserUID))\n            $scope.followingCheck = $firebaseArray(refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetOTHER.uid))\n\n\n            $scope.followerCheck.$loaded(function(dataCheckFollower) {\n                console.log(dataCheckFollower)\n                for (var i = 0; i < dataCheckFollower.length; i++) {\n                    if (dataCheckFollower[i].$id == \"followers\") {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.otherUserUID).child('followerLength').update({\n                            followers: (dataCheckFollower[i].$value + 1)\n                        })\n\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetOTHER.uid).on(\"value\", function(snap) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.otherUserUID).child('followerLength').child('followersInfo').push({\n                                UID: $scope.currentAuthGetOTHER.uid,\n                                Username: snap.val().Username,\n                                Avatar: snap.val().Image,\n                                Desc: snap.val().Description || \"The User is Silent as the butterflies...\"\n                            })\n                        })\n\n                    }\n                }\n\n            })\n\n            $scope.followingCheck.$loaded(function(dataCheckFollowing) {\n                console.log(dataCheckFollowing)\n                for (var i = 0; i < dataCheckFollowing.length; i++) {\n                    if (dataCheckFollowing[i].$id == \"following\") {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetOTHER.uid).child('followingLength').update({\n                            following: (dataCheckFollowing[i].$value + 1)\n                        })\n                        refService.ref().child(\"UserAuthInfo\").child($scope.otherUserUID).on(\"value\", function(snapp) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetOTHER.uid).child('followingLength').child('followingInfo').update({\n                                UID: $scope.currentAuthGetOTHER.uid,\n                                Username: snapp.val().Username,\n                                Avatar: snapp.val().Image,\n                                Desc: snapp.val().Description || \"The User is Silent as the butterflies...\"\n                            })\n                        })\n\n                    }\n                }\n\n            })\n\n        }\n\n\n        $scope.privateMessageStart = function(username, mod, desc, image) {\n            $state.go(\"authHome.privateMes\")\n        }\n        $scope.goToTopic = function(top) {\n            $state.go(\"authHome.topic\", {\n                \"AVATAR\": $scope.otherUserImage,\n                \"DATE\": top.DateCreated,\n                \"EMAIL\": $scope.otherUserEmail,\n                \"TITLE\": top.Title,\n                \"UID\": top.UID,\n                \"USERNAME\": top.Username,\n                \"VALUE\": top.Value\n            })\n        }\n\n    }\n})(angular);","(function(){\n    \n  'use strict';    \n     angular\n     .module('ForumApp')\n     .controller('otherUserProfilePageCtrl', [\"$scope\",\"$stateParams\",\"otherUserProfilePageService\", otherUserProfilePageCtrlFunc])\n    \n    \n    function otherUserProfilePageCtrlFunc($scope,$stateParams,otherUserProfilePageService){\n        $scope.otherUSERIDPAGE = otherUserProfilePageService.getID();\n        console.log($scope.otherUSERIDPAGE);\n        \n    }\n    \n    \n})(angular);","(function(angular){\n 'use strict';    \n     angular\n     .module('ForumApp')\n     .controller('profileCtrl', [\"$scope\",\"$firebaseObject\",\"refService\",\"timeService\",\"$stateParams\", profileCtrl])\n\n    function profileCtrl($scope,$firebaseObject,refService,timeService,$stateParams){\n       $scope.currentAuthGetPro = refService.ref().getAuth();\n       $scope.precence = \"\";\n       var userRef = new Firebase('https://uniquecodersforums.firebaseio.com/presence/' + $scope.currentAuthGetPro.uid);\n       userRef.on(\"value\", function(snapshotPrecence){\n           if(snapshotPrecence.val() == \"Online\")\n                $scope.precence = \"Online\"\n                \n            else if(snapshotPrecence.val() == \"Idle\")  \n                $scope.precence = \"Idle\"\n                \n            else\n                $scope.precence = timeService.getTimeF(new Date(parseInt(snapshotPrecence.val())));\n            \n                \n       })\n       \n      \n       String.prototype.replaceAll = function(str1, str2, ignore) {\n        return this.replace(new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g,\"\\\\$&\"),(ignore?\"gi\":\"g\")),(typeof(str2)==\"string\")?str2.replace(/\\$/g,\"$$$$\"):str2);\n       } \n\n\n        //  var arrayOfPrevious5Days = [];        \n        //  var date = Date.now();\n        //  var date = parseInt(date);\n        //  var newDate = new Date(parseInt(date));\n        \n        //  newDate = JSON.stringify(newDate);\n        //  newDate = newDate.replaceAll('\"', '');\n        //  newDate = newDate.substring(8,10);\n        //  var dateNum = parseInt(newDate);\n        //  var dateDiff5 = dateNum-5;\n        //  for(var i=dateNum; i>dateDiff5; i--)\n        //       arrayOfPrevious5Days.push(i);\n        //  var index_zero = arrayOfPrevious5Days[0];\n        //  var index_one = arrayOfPrevious5Days[1];\n        //  var index_two = arrayOfPrevious5Days[2];\n        //  var index_three = arrayOfPrevious5Days[3];\n        //  var index_four = arrayOfPrevious5Days[4];\n           \n\n         var obj = $firebaseObject(refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetPro.uid));\n         var objPres = $firebaseObject(refService.ref().child(\"presence\"));\n         \n         \n        obj.$loaded(function(data) {\n                $scope.Username = data.Username;\n                $scope.Email = data.Email;\n                $scope.UID = $scope.currentAuthGetPro.uid;\n                $scope.image = data.Image;\n                $scope.backImage = data.profileBackground\n                $scope.desc = data.Description || \"The User is Silent as the butterflies...\"\n                $scope.Moderator = data.Moderator;\n                $scope.ProfileViews = data.profileViews\n                $scope.Followers = data.followers;\n                $scope.Following = data.following;\n                \n                var count_b = 0;\n                var count_s = 0;\n                var coung_g = 0;\n                var coung_p = 0;\n                //Badges\n                if(data.BronzeBadge == 0)\n                    $scope.count_b = 0;\n                else{\n                    for(var i in data.BronzeBadge)\n                        count_b++;\n                    $scope.count_b = (count_b);    \n                }\n                \n                 if(data.SilverBadge == 0)\n                    $scope.count_s = 0;\n                else{\n                    for(var i in data.SilverBadge)\n                        count_s++;\n                    $scope.count_s = (count_s);    \n                }\n                \n                 if(data.GoldBadge == 0)\n                    $scope.count_g = 0;\n                else{\n                    for(var i in data.GoldBadge)\n                        coung_g++;\n                    $scope.count_g = (coung_g);    \n                }\n                \n                if(data.PlatinumBadge == 0)\n                    $scope.count_p = 0;\n                else{\n                    for(var i in data.PlatinumBadge)\n                        coung_p++;\n                    $scope.count_p = (coung_p);    \n                }\n            },\n            function(error) {\n                alertify.error(\"Error:\", error);\n            }\n        \n        );\n        \n        objPres.$loaded(function(data){\n            $scope.isPresent = data[$scope.currentAuthGetPro.uid];\n            if($scope.isPresent !== 'Online'){\n                $scope.isPresent = timeService.getTimeF(new Date(parseInt($scope.isPresent)));\n            }\n        })\n        \n       \n    }\n})(angular);","(function(angular) {\n\n    'use strict';\n    angular\n        .module('ForumApp')\n        .controller(\"settingsCtrl\", [\"$scope\", \"refService\", \"$stateParams\", \"$mdDialog\", \"$mdMedia\", \"$firebaseObject\", \"$state\", settingsCtrl])\n\n    function settingsCtrl($scope, refService, $stateParams, $mdDialog, $mdMedia, $firebaseObject, $state) {\n\n        //Setting Infos....\n        $scope.currentAuthSet = refService.ref().getAuth();\n\n        $scope.userInfo = $firebaseObject(refService.ref().child(\"UserAuthInfo\").child($stateParams.UID))\n        $scope.passwordSHARP = \"********\"\n        $scope.uid = $scope.currentAuthSet.uid;\n        $scope.desc = \"See your descripton in the profile.\"\n\n        function isPassChange() {\n            if ($scope.currentAuthSet.provider == 'twitter' || $scope.currentAuthSet.provider == 'google' ||\n                $scope.currentAuthSet.provider == 'github') {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n\n        if ($scope.currentAuthSet.uid == $stateParams.UID) {\n\n        }\n        else {\n            $state.go(\"auth\");\n        }\n\n\n        //SETTING UP CHANIGNE EMAIL\n        $scope.changeEmail = function(ev) {\n            var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\n            $mdDialog.show({\n                    controller: 'emailSettingsCtrl',\n                    templateUrl: 'app/components/settings/mini-view/emailChange.html',\n                    parent: angular.element(document.body),\n                    resolve: {\n                        // controller will not be loaded until $waitForAuth resolves\n                        // Auth refers to our $firebaseAuth wrapper in the example above\n                        \"currentAuth\": [\"refService\", function(refService) {\n                            // $waitForAuth returns a promise so the resolve waits for it to complete\n                            return refService.refAuth().$requireAuth();\n                        }]\n                    },\n                    targetEvent: ev,\n                    clickOutsideToClose: true,\n                    fullscreen: useFullScreen\n                })\n                .then(function(answer) {\n\n                }, function() {\n\n                });\n            $scope.$watch(function() {\n                return $mdMedia('xs') || $mdMedia('sm');\n            }, function(wantsFullScreen) {\n                $scope.customFullscreen = (wantsFullScreen === true);\n            });\n        }\n\n        $scope.descriptonChange = function(ev) {\n            var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\n            $mdDialog.show({\n                    controller: 'descChangeCtrl',\n                    templateUrl: 'app/components/settings/mini-view/descriptonChange.html',\n                    parent: angular.element(document.body),\n                    resolve: {\n                        // controller will not be loaded until $waitForAuth resolves\n                        // Auth refers to our $firebaseAuth wrapper in the example above\n                        \"currentAuth\": [\"refService\", function(refService) {\n                            // $waitForAuth returns a promise so the resolve waits for it to complete\n                            return refService.refAuth().$requireAuth();\n                        }]\n                    },\n                    targetEvent: ev,\n                    clickOutsideToClose: true,\n                    fullscreen: useFullScreen\n                })\n                .then(function(answer) {\n\n                }, function() {\n\n                });\n            $scope.$watch(function() {\n                return $mdMedia('xs') || $mdMedia('sm');\n            }, function(wantsFullScreen) {\n                $scope.customFullscreen = (wantsFullScreen === true);\n            });\n        }\n\n        $scope.changePassword = function(ev) {\n\n            if (isPassChange() == true) {\n                $mdDialog.show(\n                    $mdDialog.alert()\n                    .parent(angular.element(document.getElementsByTagName(\"body\")))\n                    .clickOutsideToClose(true)\n                    .title('Password')\n                    .textContent('Cant change password since your logged in from a provider')\n                    .ariaLabel('Alert Dialog Demo')\n                    .ok('Got it!')\n                    .targetEvent(ev)\n                );\n            }\n            else {\n                var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\n                $mdDialog.show({\n                        controller: 'passwordChangeCtrl',\n                        templateUrl: 'app/components/settings/mini-view/passwordChange.html',\n                        parent: angular.element(document.body),\n                        resolve: {\n                            // controller will not be loaded until $waitForAuth resolves\n                            // Auth refers to our $firebaseAuth wrapper in the example above\n                            \"currentAuth\": [\"refService\", function(refService) {\n                                // $waitForAuth returns a promise so the resolve waits for it to complete\n                                return refService.refAuth().$requireAuth();\n                            }]\n                        },\n                        targetEvent: ev,\n                        clickOutsideToClose: true,\n                        fullscreen: useFullScreen\n                    })\n                    .then(function(answer) {\n\n                    }, function() {\n\n                    });\n                $scope.$watch(function() {\n                    return $mdMedia('xs') || $mdMedia('sm');\n                }, function(wantsFullScreen) {\n                    $scope.customFullscreen = (wantsFullScreen === true);\n                });\n            }\n\n        }\n        $scope.changeUsername = function(ev) {\n            var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\n            $mdDialog.show({\n                    controller: 'usernameChangeCtrl',\n                    templateUrl: 'app/components/settings/mini-view/usernameChange.html',\n                    parent: angular.element(document.body),\n                    resolve: {\n                        // controller will not be loaded until $waitForAuth resolves\n                        // Auth refers to our $firebaseAuth wrapper in the example above\n                        \"currentAuth\": [\"refService\", function(refService) {\n                            // $waitForAuth returns a promise so the resolve waits for it to complete\n                            return refService.refAuth().$requireAuth();\n                        }]\n                    },\n                    targetEvent: ev,\n                    clickOutsideToClose: true,\n                    fullscreen: useFullScreen\n                })\n                .then(function(answer) {\n\n                }, function() {\n\n                });\n            $scope.$watch(function() {\n                return $mdMedia('xs') || $mdMedia('sm');\n            }, function(wantsFullScreen) {\n                $scope.customFullscreen = (wantsFullScreen === true);\n            });\n        }\n\n        $scope.changeImage = function(ev) {\n            var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\n            $mdDialog.show({\n                    controller: 'imageChangeCtrl',\n                    templateUrl: 'app/components/settings/mini-view/imageChange.html',\n                    parent: angular.element(document.body),\n                    resolve: {\n                        // controller will not be loaded until $waitForAuth resolves\n                        // Auth refers to our $firebaseAuth wrapper in the example above\n                        \"currentAuth\": [\"refService\", function(refService) {\n                            // $waitForAuth returns a promise so the resolve waits for it to complete\n                            return refService.refAuth().$requireAuth();\n                        }]\n                    },\n                    targetEvent: ev,\n                    clickOutsideToClose: true,\n                    fullscreen: useFullScreen\n                })\n                .then(function(answer) {\n\n                }, function() {\n\n                });\n            $scope.$watch(function() {\n                return $mdMedia('xs') || $mdMedia('sm');\n            }, function(wantsFullScreen) {\n                $scope.customFullscreen = (wantsFullScreen === true);\n            });\n        }\n\n        $scope.deleteUser = function() {\n            vex.dialog.confirm({\n                message: 'Are you sure you want to be removed?',\n                callback: function(value) {\n                    if (value == true) {\n                        if (isPassChange() == true) {\n\n\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthSet.uid).remove(function(err) {\n                                if (err)\n                                    alertify.error(\"ERROR DELETING USER \" + err);\n                                else {\n                                    refService.ref().unauth();\n                                    location.reload(true)\n                                    location.reload(true)\n\n                                }\n\n                            })\n\n\n\n                        }\n                        else {\n\n\n                            vex.dialog.prompt({\n                                message: 'Whats your Password?',\n                                placeholder: 'Passwprd....',\n                                callback: function(value) {\n\n                                    refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthSet.uid).once(\"value\", function(snap) {\n                                        console.log(snap.val())\n                                        refService.ref().removeUser({\n                                            email: snap.val().Email,\n                                            password: value\n                                        }, function(error) {\n                                            if (error) {\n                                                switch (error.code) {\n                                                    case \"INVALID_USER\":\n                                                        alertify.error(\"The specified user account does not exist.\");\n                                                        break;\n                                                    case \"INVALID_PASSWORD\":\n                                                        alertify.error(\"The specified user account password is incorrect.\");\n                                                        break;\n                                                    default:\n                                                        alertify.error(\"Error removing user:\", error);\n                                                }\n                                            }\n                                            else {\n\n                                                refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthSet.uid).remove(function(err) {\n                                                    if (err)\n                                                        alertify.error(\"ERROR DELETING USER \" + err);\n                                                    else {\n                                                        alertify.success(\"User account deleted successfully!\");\n                                                        location.reload(true);\n                                                        location.reload(true);\n                                                    }\n\n                                                })\n\n\n\n                                            }\n                                        });\n\n                                    })\n\n                                }\n                            });\n\n\n                        }\n\n                    }\n                }\n            })\n        }\n\n\n    }\n\n})(angular);","(function(angular) {\n\n    'use strict';\n    angular\n        .module('ForumApp')\n        .controller('topicCtrl', [\"$scope\",\"localStorageService\",\"emojiListService\", \"$stateParams\", \"refService\", \"editReplyService\", \"dateService\", \"$firebaseArray\", \"timeService\", \"$mdBottomSheet\", \"$mdMedia\", \"$mdDialog\", \"replyService\", \"$firebaseObject\", \"$state\", \"otherUserService\", \"editTopicService\", \"topicLikesService\", \"badgesService\", topicCtrl])\n\n\n    function topicCtrl($scope,localStorageService,emojiListService, $stateParams, refService, editReplyService, dateService, $firebaseArray, timeService, $mdBottomSheet, $mdMedia, $mdDialog, replyService, $firebaseObject, $state, otherUserService, editTopicService, topicLikesService, badgesService) {\n        var currentAuth = refService.ref().getAuth();\n        $scope.currentAuthGet = refService.ref().getAuth();\n\n\n\n        if($scope.currentAuthGet){\n           if(localStorageService.get($stateParams.POST) == null);\n           else \n               localStorageService.remove($stateParams.POST);\n        }\n        else{\n            if(localStorageService.get($stateParams.POST) == null)\n                localStorageService.set($stateParams.POST, generateUUID(16));\n        }\n            \n        function generateUUID(length) {\n            var d = new Date().getTime();\n            var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n                var r = (d + Math.random() * length) % 16 | 0;\n                d = Math.floor(d / 16);\n                return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n            });\n            return uuid;\n        };\n\n        if ($scope.currentAuthGet) {\n\n        }\n        else {\n            currentAuth = {\n                uid: localStorageService.get($stateParams.POST)\n            }\n        }\n\n        if($scope.currentAuthGet == null) {\n            $scope.currentAuthGet = {\n                uid : localStorageService.get($stateParams.POST)\n            }\n        }\n            \n        marked.setOptions({\n            renderer: new marked.Renderer(),\n            gfm: true,\n            tables: true,\n            breaks: false,\n            pedantic: false,\n            sanitize: false,\n            smartLists: true,\n            smartypants: false,\n            highlight: function(code, lang) {\n                if (lang) {\n                    return hljs.highlight(lang, code).value;\n                }\n                else {\n                    return hljs.highlightAuto(code).value;\n                }\n            }\n        });\n\n\n\n\n\n\n\n\n        $scope.notAuthReplyTopic = function() {\n                alertify.myAlert(\"Sorry , You must be logged in , to reply or have many feautres available.\");\n            }\n            //SETTING INFO\n        refService.ref().child(\"Topics\").on(\"value\", function(snapshot) {\n            snapshot.forEach(function(EVEN) {\n                var key = EVEN.key();\n                var childData = EVEN.val();\n\n                if (childData.Postnum == $stateParams.POST) {\n                    $scope.creatorAvatar = childData.Avatar\n                    $scope.creatorTitle = childData.Title;\n                    $scope.creatorUID = childData.UID;\n                    $scope.creatorUsername = childData.Username;\n                    $scope.creatorValue = childData.Value;\n                    $scope.creatorDate = childData.DateCreated;\n                    $scope.creatorEmail = childData.Email;\n                    $scope.repliesNum = childData.RepliesNum;\n                    $scope.timeSinceCreated = timeService.getTimeF(new Date(parseInt($scope.creatorDate)));\n                    var dateCheck = new Date(parseInt($scope.creatorDate));\n                    $scope.creatorDateParsed = timeService.getTimeF(dateCheck);\n                }\n            })\n\n\n            $scope.actualReplyUser = $firebaseObject(refService.ref().child(\"UserAuthInfo\").child($scope.creatorUID));\n            $scope.thisUser = $firebaseObject(refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGet.uid));\n            $scope.isModerator;\n            $scope.currentUserAvatar;\n            $scope.thisUser.$loaded(function(data) {\n                $scope.isModerator = data.Moderator;\n                $scope.currentUserAvatar = data.Image;\n\n            })\n        })\n\n\n        //Setting Views\n        //Adding Them..\n        $scope.views = $firebaseObject(refService.ref().child(\"Topics\"))\n        refService.ref().child(\"Topics\").once(\"value\", function(snapshot) {\n\n                snapshot.forEach(function(childSnapshot) {\n                    var key = childSnapshot.key();\n                    var childData = childSnapshot.val();\n                    if ($stateParams.POST == childData.Postnum) {\n                        refService.ref().child(\"Topics\").child(childData.pushKey).child(\"Views\").child(currentAuth.uid).set({\n                            Views: true\n                        })\n                    }\n                })\n            })\n            //Viewing them\n        refService.ref().child(\"Topics\").once(\"value\", function(snapshot) {\n            snapshot.forEach(function(childSnapshot) {\n                var key = childSnapshot.key();\n                var childData = childSnapshot.val();\n                if ($stateParams.POST == childData.Postnum) {\n                    refService.ref().child(\"Topics\").child(childData.pushKey).child(\"Views\").on(\"value\", function(snapshot) {\n                        $scope.countViews = snapshot.numChildren();\n                    })\n                }\n            })\n        })\n\n        /* var viewsCount = $firebaseArray(refService.ref().child(\"Topics\"));\n\n         viewsCount.$loaded(function(data) {\n             $scope.countViews = data.length;\n             console.log(data)\n         })*/\n\n\n\n\n        function voteHelper() {\n            $scope.didVote = true;\n            refService.ref().child(\"Topics\").once(\"value\", function(snapshot) {\n                snapshot.forEach(function(childSnapshot) {\n                    var key = childSnapshot.key();\n                    var childData = childSnapshot.val();\n                    childSnapshot.forEach(function(viewsCheck) {\n                        /*var keyCheck = viewsCheck.key();\n                        var childDataCheck = viewsCheck.val();\n                        console.log(childData.UpVotes);*/\n                        refService.ref().child(\"Topics\").child(childData.pushKey).child(\"Vote\").on(\"value\", function(snapshotViews) {\n                            snapshotViews.forEach(function(snapShotViewsForEach) {\n                                var keySNAPVIEWS = snapShotViewsForEach.key();\n                                var childDataSNAPVIEWS = snapShotViewsForEach.val();\n\n                                if (childDataSNAPVIEWS == currentAuth.uid) {\n                                    $scope.didVote = true;\n                                }\n                            })\n\n                        })\n\n                    })\n                })\n            })\n            if ($scope.didVote == true) {\n                return \"Voted\"\n            }\n            else {\n                return \"NotVoted\"\n            }\n        }\n        $scope.votedAlready = function() {\n            if (voteHelper() == \"Voted\")\n                return false;\n\n            else\n                return true;\n\n\n        }\n        \n        $scope.side = \"right\"\n\n\n        $scope.sideFunctoin = function() {\n            if($scope.side == 'right')\n                return 'left';\n            else\n                return 'right';\n        }\n         $scope.events = [{\n            badgeClass: 'info',\n            badgeIconClass: 'glyphicon-check',\n            title: 'First heading',\n            content: 'Some awesome content.'\n          }, {\n            badgeClass: 'warning',\n            badgeIconClass: 'glyphicon-credit-card',\n            title: 'Second heading',\n            content: 'More awesome content.'\n          }];\n  \n        $scope.scrollDownReply = function(){\n                  $(\"html, body\").animate({ scrollTop: $(document).height() }, 1000);\n            }\n        //Setting Voting\n        //Adding them...\n        function upVoteRegister(data) {\n            $scope.TOTAL_POINTS = 0;\n            refService.ref().child(\"UserAuthInfo\").child($scope.creatorUID).child(\"PointsOBJ\").child($scope.currentAuthGet.uid + \"TOPIC:\" + $stateParams.POST).set({\n                Point: +5\n            })\n            refService.ref().child(\"UserAuthInfo\").child($scope.creatorUID).child(\"PointsOBJ\").once(\"value\", function(downVoteCheck) {\n\n                for (var i in downVoteCheck.val())\n                    $scope.TOTAL_POINTS = $scope.TOTAL_POINTS + (downVoteCheck.val()[i].Point)\n\n                refService.ref().child(\"UserAuthInfo\").child($scope.creatorUID).update({\n                    Points: $scope.TOTAL_POINTS\n                })\n\n            })\n\n        }\n        $scope.upVote = function() {\n            refService.ref().child(\"Topics\").once(\"value\", function(snapshot) {\n                snapshot.forEach(function(childSnapshot) {\n                    var key = childSnapshot.key();\n                    var childData = childSnapshot.val();\n                    if ($stateParams.POST == childData.Postnum) {\n                        refService.ref().child(\"Topics\").child(childData.pushKey).child(\"Vote\").child(currentAuth.uid).set({\n                            Vote: 1\n                        })\n                        upVoteRegister(childData);\n                    }\n                })\n            })\n\n            var upVoteIcon = document.getElementById(\"upVoteIcon\");\n            upVoteIcon.classList.remove(\"thumb-icon\");\n            upVoteIcon.classList.add(\"upvote\");\n\n            var downVoteIcon = document.getElementById(\"downVoteIcon\");\n            downVoteIcon.classList.remove(\"downvote\");\n            downVoteIcon.classList.add(\"thumb-icon\");\n\n        }\n\n        function downVotePointRegister(data) {\n            $scope.TOTAL_POINTS = 0;\n            refService.ref().child(\"UserAuthInfo\").child($scope.creatorUID).child(\"PointsOBJ\").child($scope.currentAuthGet.uid + \"TOPIC:\" + $stateParams.POST).set({\n                Point: -2\n            })\n            refService.ref().child(\"UserAuthInfo\").child($scope.creatorUID).child(\"PointsOBJ\").once(\"value\", function(downVoteCheck) {\n\n                for (var i in downVoteCheck.val())\n                    $scope.TOTAL_POINTS = $scope.TOTAL_POINTS + (downVoteCheck.val()[i].Point)\n\n                refService.ref().child(\"UserAuthInfo\").child($scope.creatorUID).update({\n                    Points: $scope.TOTAL_POINTS\n                })\n\n            })\n\n        }\n\n        $scope.downVote = function() {\n            refService.ref().child(\"Topics\").once(\"value\", function(snapshot) {\n                snapshot.forEach(function(childSnapshot) {\n                    var key = childSnapshot.key();\n                    var childData = childSnapshot.val();\n                    if ($stateParams.POST == childData.Postnum) {\n                        refService.ref().child(\"Topics\").child(childData.pushKey).child(\"Vote\").child(currentAuth.uid).set({\n                            Vote: -1\n                        })\n                        downVotePointRegister(childData);\n                    }\n                })\n            })\n\n            var downVoteIcon = document.getElementById(\"downVoteIcon\");\n            downVoteIcon.classList.remove(\"thumb-icon\");\n            downVoteIcon.classList.add(\"downvote\");\n\n            var upVoteIcon = document.getElementById(\"upVoteIcon\");\n            upVoteIcon.classList.remove(\"upvote\");\n            upVoteIcon.classList.add(\"thumb-icon\");\n\n        }\n\n\n\n        $scope.countVote = 0;\n        //Viewing Them..\n        $scope.votesViewing = $firebaseObject(refService.ref().child(\"Topics\"))\n        refService.ref().child(\"Topics\").on(\"value\", function(snapshot) {\n            $scope.countVote = 0;\n            snapshot.forEach(function(childSnapshot) {\n                var key = childSnapshot.key();\n                var childData = childSnapshot.val();\n                if ($stateParams.POST == childData.Postnum) {\n                    refService.ref().child(\"Topics\").child(childData.pushKey).child(\"Vote\").on(\"value\", function(snapshotVote) {\n                        snapshotVote.forEach(function(VoteChild) {\n                            VoteChild.forEach(function(evenChildVote) {\n                                var keyCHILD = evenChildVote.key();\n                                var childDataCHILD = evenChildVote.val();\n                                $scope.countVote += (childDataCHILD);\n                            })\n                        })\n                    })\n                }\n            })\n        })\n\n\n\n\n\n\n\n        //SETTING REPLIES\n\n        $scope.replies = $firebaseObject(refService.ref().child(\"Replies\").child($scope.creatorUsername + $stateParams.POST));\n\n\n\n\n        //Setting Tags..\n        $scope.tagsTopic = $firebaseObject(refService.ref().child(\"Topics\"));\n\n        $scope.tagsTopic.$loaded(function(data) {\n            data.forEach(function(snapDataTag) {\n\n                if (snapDataTag.Postnum == $stateParams.POST) {\n\n                    $scope.tagsTopicRep = snapDataTag.Tags;\n\n                }\n            })\n        })\n\n\n        //Getting ClickProfile Set Up...\n        $scope.goToProfile = function(info, ev) {\n            if (ev) {\n                otherUserService.setUserInfo(info);\n                otherUserService.ACTUALsetUserInfo($scope.actualReplyUser);\n                $mdDialog.show({\n                        controller: 'otherUserProfileCtrl',\n                        templateUrl: 'app/components/otherUserProfile/otherUserProfile.html',\n                        parent: angular.element(document.body),\n                        resolve: {\n                            // controller will not be loaded until $waitForAuth resolves\n                            // Auth refers to our $firebaseAuth wrapper in the example above\n                            \"currentAuth\": [\"refService\", function(refService) {\n                                // $waitForAuth returns a promise so the resolve waits for it to complete\n                                return refService.refAuth().$requireAuth();\n                            }]\n                        },\n                        targetEvent: ev,\n                        clickOutsideToClose: true,\n                    },\n                    $mdDialog.alert()\n                    .openFrom({\n                        top: -50,\n                        width: 30,\n                        height: 80\n                    })\n                    .closeTo({\n                        left: 1500\n                    })\n                );\n            }\n            else {\n                return null;\n            }\n        }\n\n        $scope.editReply = function(ev, reps) {\n            if (ev) {\n                editReplyService.setInfo(\n                    reps.pushKey,\n                    $stateParams.USERNAME,\n                    $stateParams.POST,\n                    currentAuth.uid);\n                $mdDialog.show({\n                        controller: 'editReplyCtrl',\n                        templateUrl: 'app/components/editReply/editReply.html',\n                        parent: angular.element(document.body),\n                        resolve: {\n                            // controller will not be loaded until $waitForAuth resolves\n                            // Auth refers to our $firebaseAuth wrapper in the example above\n                            \"currentAuth\": [\"refService\", function(refService) {\n                                // $waitForAuth returns a promise so the resolve waits for it to complete\n                                return refService.refAuth().$requireAuth();\n                            }]\n                        },\n                        targetEvent: ev,\n                        clickOutsideToClose: true,\n                    },\n                    $mdDialog.alert()\n                    .openFrom({\n                        top: -50,\n                        width: 30,\n                        height: 80\n                    })\n                    .closeTo({\n                        left: 1500\n                    })\n                );\n            }\n            else {\n                if (true)\n                    return null;\n            }\n        }\n\n        $scope.editValue = function(ev) {\n\n            if (ev) {\n                editTopicService.setDateCreated($stateParams.DATE);\n                var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\n                $mdDialog.show({\n                        controller: 'editTopicCtrl',\n                        templateUrl: 'app/components/editTopic/editTopic.html',\n                        parent: angular.element(document.body),\n                        resolve: {\n                            // controller will not be loaded until $waitForAuth resolves\n                            // Auth refers to our $firebaseAuth wrapper in the example above\n                            \"currentAuth\": [\"refService\", function(refService) {\n                                // $waitForAuth returns a promise so the resolve waits for it to complete\n                                return refService.refAuth().$requireAuth();\n                            }]\n                        },\n                        targetEvent: ev,\n                        clickOutsideToClose: true,\n                        fullscreen: useFullScreen\n                    })\n                    .then(function(answer) {\n                        //Then Argument\n                    }, function() {\n                        //Canceled Dialog\n                    });\n\n            }\n            else {\n                return null;\n            }\n        }\n\n        $scope.deletePost = function(rep) {\n            alertify.confirm('Are you sure you want to delete your reply?', function() {\n                refService.ref().child(\"Replies\").child($stateParams.USERNAME + $stateParams.POST).child(rep.pushKey)\n                    .remove(function(error) {\n                        if (error)\n                            alertify.error(\"Deleting Failed : \" + error);\n                        else\n                            alertify.success(\"Sucessfully Deleted!\")\n                    })\n            }, function() {\n                alertify.warn('Canceled')\n            });\n        }\n\n\n\n        $scope.urlSHARINGCURRENT = 'https://ng-fourm-amanuel2.c9users.io/index.html#/authHome/topic/' + $stateParams.POST + '/' + $stateParams.USERNAME\n\n        $scope.openShareMenu = function($mdOpenMenu, ev) {\n            $mdOpenMenu(ev);\n        }\n\n        //////////////////////////////////////////////////////////////////////  CHECK IF YOUR SUPOSE TO SEE  ICONS ////////////////////////////////////////////////////\n\n        $scope.funcCheckEDIT = function(reps) {\n            if (currentAuth.uid == reps.replyCreatorUID)\n                return true;\n            else if ($scope.isModerator == true)\n                return true;\n            else\n                return false;\n        }\n        $scope.goBackTopic = function() {\n            $state.go('authHome.desc')\n        }\n\n        $scope.isReplyable = function(rep) {\n            if (currentAuth.uid == rep.replyCreatorUID)\n                return false;\n\n            else\n                return true;\n        }\n        $scope.isBestAnwser = function(rep) {\n            if ($scope.isModerator == true)\n                return true;\n            else if (currentAuth.uid == rep.replyCreatorUID)\n                return true;\n            else\n                return false;\n        }\n\n\n\n        $scope.isLikeable = function(rep) {\n            if (currentAuth.uid == rep.replyCreatorUID)\n                return false;\n            else if (currentAuth.uid == null)\n                return false;\n            else\n                return true;\n        }\n\n        $scope.isShareble = function(rep) {\n            if (true)\n                return true;\n            else\n                return false;\n        }\n\n        $scope.isFlaggable = function(rep) {\n            if (currentAuth.uid == rep.replyCreatorUID)\n                return false;\n\n            else\n                return true;\n        }\n        $scope.isBookmarkable = function(rep) {\n                if ($scope.currentAuthGet)\n                    return true;\n\n                else\n                    return false;\n            }\n            ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n        //////////////////////////////////////////////////////****** TOGGLING ICONS ***** //////////////////////////////////////////////////////////////\n\n\n\n        ////Check Box\n\n\n\n\n\n        function isCheckedHelper(rep) {\n            var returnerCheck = \"\";\n            refService.ref().child(\"Topics\").once(\"value\", function(snapshotBestAnwserOutlineTopic) {\n                snapshotBestAnwserOutlineTopic.forEach(function(evenChildBook) {\n                    var bookkey = evenChildBook.key();\n                    var bookchildData = evenChildBook.val();\n                    if (bookchildData.Postnum == $stateParams.POST) {\n                        refService.ref().child(\"Topics\").child(bookchildData.pushKey).child(\"BestAnwser\").once(\"value\", function(snapBest) {\n                            if(snapBest.val()) {\n                                if (snapBest.val().isBestAnwser == true && snapBest.val().replyNumber == rep.Replynum)\n                                    returnerCheck = \"True\";\n                                else\n                                    returnerCheck = \"False\";\n                            }\n                            else\n                                returnerCheck = \"False\";\n                        })\n                    }\n                })\n            })\n            return returnerCheck;\n        }\n\n        $scope.isChecked = function(rep) {\n            if (isCheckedHelper(rep) == \"True\")\n                return true;\n            else\n                return false;\n        }\n\n        $scope.classBestAnwser = function(rep) {\n            if (isCheckedHelper(rep) == \"True\")\n                return \"best-answer\";\n            else\n                return \"none\";\n        }\n\n       function bestAnwserRegister(rep) {\n            $scope.TOTAL_POINTS_BEST_ANWSERY_LIKES = 0;\n            refService.ref().child(\"UserAuthInfo\").child(rep.replyCreatorUID).child(\"PointsOBJ\").child($scope.currentAuthGet.uid + \"TOPIC:\" + $stateParams.POST + \"REPLY:\" + rep.Replynum + \"BESTANSWER\").set({\n                Point: 15\n            })\n            refService.ref().child(\"UserAuthInfo\").child(rep.replyCreatorUID).child(\"PointsOBJ\").once(\"value\", function(downVoteCheck) {\n\n                for (var i in downVoteCheck.val())\n                    $scope.TOTAL_POINTS_BEST_ANWSERY_LIKES = $scope.TOTAL_POINTS_BEST_ANWSERY_LIKES + (downVoteCheck.val()[i].Point)\n\n                refService.ref().child(\"UserAuthInfo\").child(rep.replyCreatorUID).update({\n                    Points: $scope.TOTAL_POINTS_BEST_ANWSERY_LIKES\n                })\n\n            })\n\n        }\n        function unbestAnwserRegister(rep) {\n            $scope.TOTAL_POINTS_BEST_ANSWERN_LIKES = 0;\n            refService.ref().child(\"UserAuthInfo\").child(rep.replyCreatorUID).child(\"PointsOBJ\").child($scope.currentAuthGet.uid + \"TOPIC:\" + $stateParams.POST + \"REPLY:\" + rep.Replynum + \"BESTANSWER\").set({\n                Point: 0\n            })\n            refService.ref().child(\"UserAuthInfo\").child(rep.replyCreatorUID).child(\"PointsOBJ\").once(\"value\", function(downVoteCheck) {\n\n                for (var i in downVoteCheck.val())\n                    $scope.TOTAL_POINTS_BEST_ANSWERN_LIKES = $scope.TOTAL_POINTS_BEST_ANSWERN_LIKES + (downVoteCheck.val()[i].Point)\n\n                refService.ref().child(\"UserAuthInfo\").child(rep.replyCreatorUID).update({\n                    Points: $scope.TOTAL_POINTS_BEST_ANSWERN_LIKES\n                })\n\n            })\n\n        }\n        \n        \n        $scope.notChecked = function(rep) {\n            $scope.isChecked = true;\n\n            refService.ref().child(\"Topics\").once(\"value\", function(snapshotBestAnwserOutlineTopic) {\n                snapshotBestAnwserOutlineTopic.forEach(function(evenChildBook) {\n                    var bookkey = evenChildBook.key();\n                    var bookchildData = evenChildBook.val();\n                    if (bookchildData.Postnum == $stateParams.POST) {\n                        refService.ref().child(\"Topics\").child(bookchildData.pushKey).child(\"BestAnwser\").update({\n                            isBestAnwser: true,\n                            replyNumber: rep.Replynum\n                        })\n                        bestAnwserRegister(rep);\n                    }\n                })\n            })\n\n        }\n\n        $scope.checked = function(rep) {\n            $scope.isChecked = false;\n            refService.ref().child(\"Topics\").once(\"value\", function(snapshotBestAnwserOutlineTopic) {\n                snapshotBestAnwserOutlineTopic.forEach(function(evenChildBook) {\n                    var bookkey = evenChildBook.key();\n                    var bookchildData = evenChildBook.val();\n                    if (bookchildData.Postnum == $stateParams.POST) {\n                        refService.ref().child(\"Topics\").child(bookchildData.pushKey).child(\"BestAnwser\").update({\n                            isBestAnwser: false,\n                            replyNumber: null\n                        })\n                        unbestAnwserRegister(rep);\n                    }\n                })\n            })\n        }\n\n        // $scope.checkBoxNot = false;\n        // $scope.checkBoxYes = false;\n        // $scope.checkBoxTrueCheck = $firebaseArray(refService.ref().child(\"Topics\"));\n\n        // function actualHelperYes(reps) {\n        //     $scope.inside;\n        //     $scope.checkBoxTrueCheck.$loaded(function(CHECKINGTRUE) {\n        //         for (var i = 0; i < CHECKINGTRUE.length; i++) {\n        //             if (CHECKINGTRUE[i].Postnum == $stateParams.POST) {\n        //                 if (CHECKINGTRUE[i].IsAcceptedAnwser == true && CHECKINGTRUE[i].AcceptedAnwserReplyNum == reps.Replynum) {\n        //                     console.log(CHECKINGTRUE[i].AcceptedAnwserReplyNum, reps.Replynum);\n        //                     $scope.inside = true;\n        //                 }\n        //                 else {\n        //                     $scope.inside = true;\n        //                 }\n        //             }\n        //         }\n        //     })\n        //     return $scope.inside;\n        // }\n        // $scope.checkFuncYes = function(reps) {\n        //     if (actualHelperYes(reps) == true) {\n        //         return true;\n        //     }\n        //     else {\n        //         console.log(actualHelperYes(reps));\n        //         return false;\n        //     }\n        // }\n        // $scope.checkBoxTrueCheck.$loaded(function(CHECKINGTRUE) {\n        //     for (var i = 0; i < CHECKINGTRUE.length; i++) {\n        //         if (CHECKINGTRUE[i].Postnum == $stateParams.POST) {\n        //             if (CHECKINGTRUE[i].IsAcceptedAnwser == true) {\n        //                 $scope.checkBoxYes = true;\n        //             }\n        //             else {\n        //                 $scope.checkBoxNot = true;\n        //             }\n        //         }\n        //     }\n        // })\n\n        // $scope.checkBoxNotNgClick = function(rep) {\n        //     $scope.checkBoxYes = true;\n        //     $scope.checkBoxNot = false;\n        //     $scope.dataNot = $firebaseArray(refService.ref().child(\"Topics\"));\n        //     $scope.dataNot.$loaded(function(dataNoNgClick) {\n        //         for (var i = 0; i < dataNoNgClick.length; i++) {\n        //             if (dataNoNgClick[i].Postnum == $stateParams.POST) {\n        //                 refService.ref().child(\"Topics\").child(dataNoNgClick[i].pushKey).update({\n        //                     IsAcceptedAnwser: true,\n        //                     AcceptedAnwserReplyNum: rep.Replynum\n        //                 })\n        //             }\n        //         }\n        //     })\n        // }\n\n        // function bestAnwserImageIfHelper() {\n        //     $scope.decicor;\n        //     $scope.dataNot = $firebaseArray(refService.ref().child(\"Topics\"));\n        //     $scope.dataNot.$loaded(function(dataNoNgClick) {\n        //         for (var i = 0; i < dataNoNgClick.length; i++) {\n        //             if (dataNoNgClick[i].Postnum == $stateParams.POST) {\n        //                 refService.ref().child(\"Topics\").child(dataNoNgClick[i].pushKey).on(\"value\", function(snapshotChild) {\n        //                     if (snapshotChild.val().IsAcceptedAnwser == true) {\n        //                         $scope.decicor = true\n        //                     }\n        //                     else {\n        //                         $scope.decicor = false\n        //                     }\n        //                 })\n\n        //             }\n        //         }\n\n        //         if ($scope.decicor == true) {\n        //             return \"True\"\n        //         }\n        //         else {\n        //             return \"Not\"\n        //         }\n        //     })\n        // }\n        // $scope.bestAnwserImageIf = function(rep) {\n        //     if (bestAnwserImageIfHelper() == \"True\") {\n        //         return true;\n        //     }\n        //     else {\n        //         return false;\n        //     }\n        // }\n\n\n        // $scope.checkBoxNgClick = function(rep) {\n        //     $scope.checkBoxYes = false;\n        //     $scope.checkBoxNot = true;\n        //     $scope.dataYes = $firebaseArray(refService.ref().child(\"Topics\"));\n        //     $scope.dataYes.$loaded(function(dataYesNgCLick) {\n        //         for (var i = 0; i < dataYesNgCLick.length; i++) {\n        //             if (dataYesNgCLick[i].Postnum == $stateParams.POST) {\n        //                 refService.ref().child(\"Topics\").child(dataYesNgCLick[i].pushKey).update({\n        //                     IsAcceptedAnwser: false,\n        //                     AcceptedAnwserReplyNum: -1\n        //                 })\n        //             }\n        //         }\n        //     })\n        // }\n\n        ////Like\n        $scope.likeBoxNo = true;\n        $scope.likeBoxYes = false;\n\n        function liked(rep) {\n            var returner = \"\";\n            refService.ref().child(\"Replies\").child($stateParams.USERNAME + $stateParams.POST).once(\"value\", function(snapshotLikeOutlineTopic) {\n                snapshotLikeOutlineTopic.forEach(function(evenChildBook) {\n                    var bookkey = evenChildBook.key();\n                    var bookchildData = evenChildBook.val();\n                    if (bookchildData.Replynum == (rep.Replynum)) {\n                        refService.ref().child(\"Replies\").child($stateParams.USERNAME + $stateParams.POST).child(bookchildData.pushKey).child(\"Likes\").child($scope.currentAuthGet.uid).once(\"value\", function(snapp) {\n                            if (snapp.val() == null)\n                                returner = \"False\";\n                            else {\n                                if (snapp.val().Like == true)\n                                    returner = \"True\"\n                                else\n                                    returner = \"False\";\n                            }\n                        })\n                    }\n                })\n            })\n            return returner;\n        }\n        $scope.likeBox = function(rep) {\n            if (liked(rep) == \"True\")\n                return true;\n            else if (liked(rep) == \"False\")\n                return false;\n        }\n\n        function likeRegister(rep) {\n            $scope.TOTAL_POINTS_REPLIES_LIKES = 0;\n            refService.ref().child(\"UserAuthInfo\").child(rep.replyCreatorUID).child(\"PointsOBJ\").child($scope.currentAuthGet.uid + \"TOPIC:\" + $stateParams.POST + \"REPLY:\" + rep.Replynum).set({\n                Point: 5\n            })\n            refService.ref().child(\"UserAuthInfo\").child(rep.replyCreatorUID).child(\"PointsOBJ\").once(\"value\", function(downVoteCheck) {\n\n                for (var i in downVoteCheck.val())\n                    $scope.TOTAL_POINTS_REPLIES_LIKES = $scope.TOTAL_POINTS_REPLIES_LIKES + (downVoteCheck.val()[i].Point)\n\n                refService.ref().child(\"UserAuthInfo\").child(rep.replyCreatorUID).update({\n                    Points: $scope.TOTAL_POINTS_REPLIES_LIKES\n                })\n\n            })\n\n        }\n        function unLikeRegister(rep) {\n            $scope.TOTAL_POINTS_REPLIES_LIKES = 0;\n            refService.ref().child(\"UserAuthInfo\").child(rep.replyCreatorUID).child(\"PointsOBJ\").child($scope.currentAuthGet.uid + \"TOPIC:\" + $stateParams.POST + \"REPLY:\" + rep.Replynum).set({\n                Point: 0\n            })\n            refService.ref().child(\"UserAuthInfo\").child(rep.replyCreatorUID).child(\"PointsOBJ\").once(\"value\", function(downVoteCheck) {\n\n                for (var i in downVoteCheck.val())\n                    $scope.TOTAL_POINTS_REPLIES_LIKES = $scope.TOTAL_POINTS_REPLIES_LIKES + (downVoteCheck.val()[i].Point)\n\n                refService.ref().child(\"UserAuthInfo\").child(rep.replyCreatorUID).update({\n                    Points: $scope.TOTAL_POINTS_REPLIES_LIKES\n                })\n\n            })\n\n        }\n        \n        $scope.likeBoxNoNgClick = function(rep) {\n            //Your About To Like the Post\n            $scope.likeBoxYes = true;\n            $scope.likeBoxNo = false;\n            refService.ref().child(\"Replies\").child($stateParams.USERNAME + $stateParams.POST).once(\"value\", function(snapshotLikeOutlineTopic) {\n                snapshotLikeOutlineTopic.forEach(function(evenChildBook) {\n                    var bookkey = evenChildBook.key();\n                    var bookchildData = evenChildBook.val();\n                    if (bookchildData.Replynum == (rep.Replynum)) {\n                        refService.ref().child(\"Replies\").child($stateParams.USERNAME + $stateParams.POST).child(bookchildData.pushKey).child(\"Likes\").child($scope.currentAuthGet.uid).update({\n                            Like: true,\n                            Avatar: $scope.currentUserAvatar\n                        })\n                        likeRegister(rep);\n                    }\n                })\n            })\n        }\n\n\n        $scope.likeBoxYesNgClick = function(rep) {\n            $scope.likeBoxYes = false;\n            $scope.likeBoxNo = true;\n            refService.ref().child(\"Replies\").child($stateParams.USERNAME + $stateParams.POST).once(\"value\", function(snapshotLikeOutlineTopic) {\n                snapshotLikeOutlineTopic.forEach(function(evenChildBook) {\n                    var bookkey = evenChildBook.key();\n                    var bookchildData = evenChildBook.val();\n                    if (bookchildData.Replynum == (rep.Replynum)) {\n                        refService.ref().child(\"Replies\").child($stateParams.USERNAME + $stateParams.POST).child(bookchildData.pushKey).child(\"Likes\").child($scope.currentAuthGet.uid).update({\n                            Like: false,\n                            Avarar: $scope.currentUserAvatar\n                        })\n                        unLikeRegister(rep);\n                    }\n                })\n            })\n        }\n\n\n        //Bookmark\n        $scope.bookmarkBoxNo = true;\n        $scope.bookmarkBoxYes = false;\n\n        $scope.bookmarkBoxNoNgClick = function(rep) {\n            $scope.bookmarkBoxYes = true;\n            $scope.bookmarkBoxNo = false;\n        }\n\n\n        $scope.bookmarkBoxYesNgClick = function(rep) {\n            $scope.bookmarkBoxYes = false;\n            $scope.bookmarkBoxNo = true;\n        }\n\n\n        //Like Views\n\n\n        /*\n        $scope.objBookmark = $firebaseObject(refService.ref().child(\"Topics\"))\n                             $scope.objBookmark.$loaded(function(dataBook){\n                                 for(var prop in dataBook){\n                                     console.log(prop);\n                                     if(dataBook[prop] !== null) {\n                                         if(dataBook[prop].Postnum == $stateParams.POST) {\n                                             refService.ref().child(\"Topics\").child(dataBook[prop].pushKey).child(\"Bookmarks\").child($scope.currentAuthGet.uid).on(\"value\", function(snapap){\n                                                   if(snapap.val() !== null) {\n                                                       $scope.bookMarkToggleTopic = !(snapap.val().Bookmark);\n                                                   }\n                                             })\n                                         }\n                                     }\n                                 }\n                             })\n                            \n                              $scope.tagCheckPrev = $firebaseObject(refService.ref().child(\"Constants\").child(\"Tags\"));\n\n         \n                            refService.ref().child(\"Topics\").once(\"value\", function(snapshotBookMarkOutlineTopic) {\n                                    snapshotBookMarkOutlineTopic.forEach(function(evenChildBook) {\n                                        var bookkey = evenChildBook.key();\n                                        var bookchildData = evenChildBook.val();\n                                        if (bookchildData.Postnum == $stateParams.POST) {\n                                            var firebaseCheckBookmark = $firebaseObject(refService.ref().child(\"Topics\").child(bookchildData.pushKey).child(\"Bookmarks\"))\n                                            firebaseCheckBookmark.$loaded(function(dataC) {\n                                                if(dataC[$scope.currentAuthGet.uid]){\n                                                    refService.ref().child(\"Topics\").child(bookchildData.pushKey).child(\"Bookmarks\").child($scope.currentAuthGet.uid).on(\"value\", function(snapap){\n                                                       if(snapap.val() !== null) {\n                                                           $scope.bookMarkToggleTopic = snapap.val().Bookmark;\n                                                       }\n                                                    })\n                                                }\n                                                else\n                                                    $scope.bookMarkToggleTopic = true;\n                                            })\n                                            \n                                        }\n                                    })\n                             })\n                    \n        */\n        //TOPIC BUTTONS//////////////////BEGIN//////////////////////////////////////\n\n        function VoteHelper() {\n            var returne = ''\n            refService.ref().child(\"Topics\").once(\"value\", function(snapshotBookMarkOutlineTopic) {\n                snapshotBookMarkOutlineTopic.forEach(function(evenChildBook) {\n                    var bookkey = evenChildBook.key();\n                    var bookchildData = evenChildBook.val();\n                    if (bookchildData.Postnum == $stateParams.POST) {\n                        refService.ref().child(\"Topics\").child(bookchildData.pushKey).child(\"Vote\").child($scope.currentAuthGet.uid).once(\"value\", function(snapSHOT) {\n                            if(snapSHOT.val()) {\n                                if (snapSHOT.val().Vote == 1)\n                                    returne = 'Up';\n                                else if (snapSHOT.val().Vote == -1)\n                                    returne = 'Down'\n                            }\n                        })\n                    }\n                })\n            })\n            return returne;\n        }\n        $scope.upVoteCheck = function() {\n            if (VoteHelper() == 'Up')\n                return 'upvote';\n        }\n\n        $scope.downVoteCheck = function() {\n            if (VoteHelper() == 'Down')\n                return 'downvote';\n        }\n\n        //BookMark\n        //Ng-if\n        //Toggle\n        //$scope.bookMarkToggleTopic = true;\n        $scope.objBookmark = $firebaseObject(refService.ref().child(\"Topics\"))\n        $scope.objBookmark.$loaded(function(dataBook) {\n                for (var prop in dataBook) {\n                    if (dataBook[prop] !== null) {\n                        if (dataBook[prop].Postnum == $stateParams.POST) {\n                            refService.ref().child(\"Topics\").child(dataBook[prop].pushKey).child(\"Bookmarks\").child($scope.currentAuthGet.uid).on(\"value\", function(snapap) {\n                                if (snapap.val() !== null) {\n                                    $scope.bookMarkToggleTopic = !(snapap.val().Bookmark);\n                                }\n                                else\n                                    $scope.bookMarkToggleTopic = true;\n                            })\n                        }\n                    }\n                }\n            })\n            //Ng-Click        \n        $scope.bookmarkClickOutlineTopic = function() {\n            refService.ref().child(\"Topics\").once(\"value\", function(snapshotBookMarkOutlineTopic) {\n                snapshotBookMarkOutlineTopic.forEach(function(evenChildBook) {\n                    var bookkey = evenChildBook.key();\n                    var bookchildData = evenChildBook.val();\n                    if (bookchildData.Postnum == $stateParams.POST) {\n                        refService.ref().child(\"Topics\").child(bookchildData.pushKey).child(\"Bookmarks\").child($scope.currentAuthGet.uid).update({\n                            Bookmark: true\n                        })\n                    }\n                })\n            })\n            $scope.bookMarkToggleTopic = false;\n        }\n        $scope.bookmarkClickNonOutlineTopic = function() {\n            refService.ref().child(\"Topics\").once(\"value\", function(snapshotBookMarkOutlineTopic) {\n                snapshotBookMarkOutlineTopic.forEach(function(evenChildBook) {\n                    var bookkey = evenChildBook.key();\n                    var bookchildData = evenChildBook.val();\n                    if (bookchildData.Postnum == $stateParams.POST) {\n                        refService.ref().child(\"Topics\").child(bookchildData.pushKey).child(\"Bookmarks\").child($scope.currentAuthGet.uid).update({\n                            Bookmark: false\n                        })\n                    }\n                })\n            })\n            $scope.bookMarkToggleTopic = true;\n        }\n\n        //Edit\n        //ng-if\n        $scope.editTopicPriv = function() {\n            if ($scope.isModerator == true)\n                return true;\n            else if ($scope.creatorUID == ($scope.currentAuthGet.uid || currentAuth.uid))\n                return true;\n            else\n                return false;\n        }\n        $scope.flagSee = function() {\n            if ($scope.isModerator == true)\n                return true;\n            else if (currentAuth.uid == $scope.creatorUID)\n                return false;\n            else if (currentAuth.uid == null)\n                return false;\n            else\n                return true;\n        }\n\n        //ng-click\n        $scope.editTopic = function(ev) {\n            if (ev) {\n                var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\n                $mdDialog.show({\n                        controller: 'editTopicPanelCtrl',\n                        templateUrl: 'app/components/editTopicPanel/editTopicPanel.html',\n                        parent: angular.element(document.body),\n                        resolve: {\n\n                            \"currentAuth\": [\"refService\", function(refService) {\n                             \n                            }]\n                        },\n                        targetEvent: ev,\n                        clickOutsideToClose: true,\n                        fullscreen: useFullScreen\n                    })\n                    .then(function(answer) {\n                      \n                    }, function() {\n                      \n                    });\n                 }\n\n           /* refService.ref().child(\"Topics\").once(\"value\", function(snap){\n                snap.forEach(function(snapChild){\n                    if(snapChild.val().Postnum == $stateParams.POST){\n                        $scope.markdownData = snapChild.val().Value;\n                         $(\"html, body\").animate({ scrollTop: $(document).height() }, 1000);\n                    }\n                })\n            })*/\n            \n        }\n        \n\n        \n        $scope.titleReply = \"Create a New Reply\";\n        $scope.replyTagsShow = false;\n\n        $scope.canDeleteCheck = function(rep) {\n            if ($scope.isModerator == true)\n                return true;\n            else\n                return false;\n        }\n\n        //Delete\n        //Ng-if\n        $scope.deleteTopicPriv = function() {\n            if ($scope.isModerator == true)\n                return true;\n            else\n                return false;\n        }\n\n        //Ng-Click\n        $scope.deleteTopic = function() {\n            vex.dialog.confirm({\n                message: 'Are you sure you want to delete this topic?',\n                callback: function(value) {\n                    if (value == true) {\n                        refService.ref().child(\"Topics\").once(\"value\", function(snapshotTopic) {\n                            snapshotTopic.forEach(function(evenChildBook) {\n                                var bookkey = evenChildBook.key();\n                                var bookchildData = evenChildBook.val();\n                                if (bookchildData.Postnum == $stateParams.POST) {\n                                    refService.ref().child(\"Topics\").child(bookchildData.pushKey)\n                                        .remove(function(error) {\n                                            if (error)\n                                                alertify.error(\"Deleting Topic Failed\");\n                                            else {\n                                                refService.ref().child(\"Replies\").child($stateParams.USERNAME + $stateParams.POST)\n                                                    .remove(function(error) {\n                                                        if (error)\n                                                            alertify.error(\"Deleting Topic Failed\");\n                                                        else {\n                                                            alertify.success(\"Deleted, Successfully\")\n                                                        }\n                                                    })\n                                            }\n                                        })\n                                }\n                            })\n                        })\n                    }\n                }\n            });\n        }\n        $scope.repliesLikesNum = [];\n        var count_likes = 0;\n        refService.ref().child(\"Replies\").child($stateParams.USERNAME + $stateParams.POST).on(\"value\", function(snapRepNum) {\n            snapRepNum.forEach(function(snapRepNumChild) {\n                var key = snapRepNumChild.key();\n                var childData = snapRepNumChild.val();\n                if (childData.Likes) {\n\n                    for (var i in childData.Likes)\n                        count_likes++;\n\n                    $scope.repliesLikesNum.push(count_likes)\n                    count_likes = 0;\n\n\n                }\n                //    $scope.repliesLikesNum.push(childData.Likes)\n                else\n                    $scope.repliesLikesNum.push(0)\n            })\n        })\n\n        $scope.seeTopicLikes = function(num_likes, rep, ev) {\n            if (ev) {\n                topicLikesService.setInfo(num_likes, rep);\n                var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\n                $mdDialog.show({\n                        controller: 'viewTopicLikes',\n                        templateUrl: 'app/components/viewTopicLikes/viewTopicLikes.html',\n                        parent: angular.element(document.body),\n                        resolve: {\n                            // controller will not be loaded until $waitForAuth resolves\n                            // Auth refers to our $firebaseAuth wrapper in the example above\n                            \"currentAuth\": [\"refService\", function(refService) {\n                                // $waitForAuth returns a promise so the resolve waits for it to complete\n                                return refService.refAuth().$requireAuth();\n                            }]\n                        },\n                        targetEvent: ev,\n                        clickOutsideToClose: true,\n                        fullscreen: useFullScreen\n                    })\n                    .then(function(answer) {\n                        //Then Argument\n                    }, function() {\n                        //Canceled Dialog\n                    });\n            }\n            else {\n                return null;\n            }\n        }\n        \n        \n        \n        \n        /////////////////////////////////REPLIES///////////////////////////////\n        \n        \n        \n        \n        \n                var elem_hash = '';\n        $scope.dataTrib = [];\n        $scope.dataTribHash = [];\n        refService.ref().child(\"UserAuthInfo\").once(\"value\", function(snapUser) {\n            snapUser.forEach(function(snapUserEach) {\n                var key = snapUserEach.key();\n                var val = snapUserEach.val();\n                $scope.dataTrib.push({\n                    key: '<img src=\"' + val.Image + '\" width=\"30px\" height=\"30px\"/> ' + val.Username,\n                    value: val.Username\n                })\n                var tribute = new Tribute({\n                    trigger: '@',\n                    values: $scope.dataTrib,\n                })\n                angular.element(document).ready(function() {\n                    tribute.attach(document.getElementById('markdownUserType'));\n                })\n\n            })\n        })\n\n        refService.ref().child(\"Topics\").once(\"value\", function(snapTopic) {\n            snapTopic.forEach(function(snapTopicEven) {\n                var key = snapTopicEven.key();\n                var val = snapTopicEven.val();\n                $scope.dataTribHash.push({\n                    key: \"#\" + val.Postnum + \":\" + val.Title,\n                    value: \"#\" + (val.Postnum)\n                })\n            })\n            var tribute_hash = new Tribute({\n                trigger: '#',\n                values: ($scope.dataTribHash),\n                selectTemplate: function(item) {\n                    return (item.original.value).replace(\"@\", \"\");\n                },\n            })\n            angular.element(document).ready(function() {\n                setTimeout(function() {\n                    tribute_hash.attach(document.getElementById('markdownUserType'));\n                }, 500)\n            })\n        })\n\n\n\n        marked.setOptions({\n            renderer: new marked.Renderer(),\n            gfm: true,\n            tables: true,\n            breaks: false,\n            pedantic: false,\n            sanitize: false,\n            smartLists: true,\n            smartypants: false,\n            highlight: function(code, lang) {\n                if (lang) {\n                    return hljs.highlight(lang, code).value;\n                }\n                else {\n                    return hljs.highlightAuto(code).value;\n                }\n            }\n        });\n\n        $scope.emojieList = emojiListService.getEmojies();\n        $scope.$watch('markdownData', function(current, original) {\n            if (current)\n                $scope.outputText = marked(current);\n            //EMOJIE LIST {PARAM} {https://github.com/amanuel2/ng-forum/wiki/How-to-write-emotions}\n            if ($scope.outputText) {\n                for (var prop in $scope.emojieList)\n                    $scope.outputText = $scope.outputText.replaceAll(prop, $scope.emojieList[prop]);\n            }\n        });\n\n        $scope.shortcuts = function(shortcutName) {\n            var element = document.getElementById('markdownUserType');\n            switch (shortcutName) {\n                case 'bold':\n                    element.value += '**BoldTextHere**';\n                    break;\n                case 'italics':\n                    element.value += '_ItalicTextHere_';\n                    break;\n\n                case 'image':\n                    element.value += '![](http://)';\n                    break;\n\n                case 'url':\n                    element.value += '[](http://)';\n                    break;\n\n                case 'quote':\n                    element.value += '> Quote Here';\n                    break;\n\n                case 'number':\n                    element.value += '\\n\\n 1. List item'\n                    break;\n\n                case 'bullet':\n                    element.value += '\\n\\n * List item'\n                    break;\n                case 'header':\n                    element.value += '# Header Here.';\n                    break;\n\n                case 'code':\n                    element.value += \"```[languageName. If you dont know delete this bracket and leave it with three ticks]\\n\" + \"console.log('Code Here') \\n\" + \"```\";\n                    break;\n\n                case 'horizontal':\n                    element.value += \"\\n\\n -----\"\n                    break;\n\n                case 'paste':\n                    if (window.clipboardData) {\n                        element.value += window.clipboardData.getData(\"Text\");\n                    }\n                    else {\n                        alertify.error(window.clipboardData.getData('Text'));\n                    }\n\n                case 'emojies':\n\n                case 'help':\n                    window.open('https://simplemde.com/markdown-guide');\n                    break;\n\n            }\n        }\n\n\n        $scope.emojieStart = function(ev) {\n            if (ev) {\n                var element = document.getElementById('markdownUserType');\n                //emojieTool.setElementInfo(element);\n                var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\n                $mdDialog.show({\n                        controller: 'emojieToolCtrl',\n                        templateUrl: 'app/components/emojieTool/emojieTool.html',\n                        parent: angular.element(document.body),\n                        resolve: {\n                            // controller will not be loaded until $waitForAuth resolves\n                            // Auth refers to our $firebaseAuth wrapper in the example above\n                            \"currentAuth\": [\"refService\", function(refService) {\n                                // $waitForAuth returns a promise so the resolve waits for it to complete\n                                return refService.refAuth().$requireAuth();\n                            }]\n                        },\n                        targetEvent: ev,\n                        clickOutsideToClose: true,\n                        fullscreen: useFullScreen\n                    })\n                    .then(function(answer) {\n                        //Then Argument\n                    }, function() {\n                        //Canceled Dialog\n                    });\n            }\n            else {\n                return null;\n            }\n        }\n\n       \n                    \n\n        $scope.submitNewReply = function() {\n            $scope.numRepliesAlready = $firebaseArray(refService.ref().child(\"Replies\").child($stateParams.USERNAME + $stateParams.POST))\n\n            $scope.numRepliesAlready.$loaded(function(data) {\n                refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGet.uid).on(\"value\", function(snapshot) {\n                    $scope.userAvatar = snapshot.val().Image;\n                    $scope.userName = snapshot.val().Username;\n                    $scope.userEmail = snapshot.val().Email;\n\n                })\n                var pushingR = refService.ref().child(\"Replies\").child($stateParams.USERNAME + $stateParams.POST).push({\n                    replyCreatorUsername: $scope.userName,\n                    replyCreatorAvatar: $scope.userAvatar,\n                    replyCreatorEmail: $scope.userEmail,\n                    replyCreatorUID: $scope.currentAuthGet.uid,\n                    replyCreatorValue: $scope.markdownData,\n                    replyCreatorDate: Date.now(),\n                    Replynum: data.length,\n                    replyCreatorDateParsed: timeService.getTimeF(new Date(parseInt(Date.now()))),\n                    topicCreatorUsername: replyService.creatorUsername,\n                    topicCreatorUID: replyService.creatorUID,\n                    topicCreatorTitle: replyService.creatorTitle,\n                    topicCreatorAvatar: replyService.creatorAvatar,\n                    topicCreatorSince: replyService.timeSinceCreated\n\n                })\n                refService.ref().child(\"Replies\").child($stateParams.USERNAME + $stateParams.POST).child(pushingR.key()).update({\n                    pushKey: pushingR.key()\n                })\n                \n               \n\n\n                //Last Active -Topic\n                $scope.lastAct = $firebaseObject(refService.ref().child(\"Topics\"));\n                $scope.lastAct.$loaded(function(dataLast) {\n                    dataLast.forEach(function(snapDataLastAct) {\n                        if (snapDataLastAct.Postnum == $stateParams.POST) {\n                            refService.ref().child(\"Topics\").child(snapDataLastAct.pushKey).update({\n                                LastActivity: Date.now(),\n                            })\n                            refService.ref().child(\"Topics\").child(snapDataLastAct.pushKey).once(\"value\", function(snapREPVIEWS) {\n                                if (!snapREPVIEWS.val().RepliesNum) {\n                                    console.log(snapREPVIEWS)\n                                    refService.ref().child(\"Topics\").child(snapDataLastAct.pushKey).update({\n                                        RepliesNum: (1)\n                                    })\n                                }\n                                else {\n                                    refService.ref().child(\"Topics\").child(snapDataLastAct.pushKey).update({\n                                        RepliesNum: (snapREPVIEWS.val().RepliesNum + 1)\n                                    })\n                                }\n\n\n                            })\n                        }\n                    })\n                })\n                $scope.markdownData = '';\n                $mdDialog.cancel();\n\n\n            })\n            \n\n\n        }\n        \n        \n        \n        \n        \n        \n        \n        \n        ////////////////////////////REPLIES////////////////////////////////\n        \n        \n        \n    }\n})(angular);","(function(angular) {\n\n    'use strict';\n    angular\n        .module('ForumApp')\n        .controller('authHome', [\"$scope\", \"$firebaseObject\", \"$state\", \"$mdDialog\", \"badgesService\", \"$mdMedia\", \"$firebaseArray\", \"refService\",\n            \"$mdBottomSheet\", authHomeCtrl\n        ])\n\n    function authHomeCtrl($scope, $firebaseObject, $state, $mdDialog, badgesService, $mdMedia, $firebaseArray, refService, $mdBottomSheet) {\n        $state.go('authHome.desc')\n\n        $scope.currentAuthGetHome = refService.ref().getAuth();\n\n        if ($scope.currentAuthGetHome != null) {\n            var amOnline = refService.ref();\n            var userRef = refService.ref().child(\"presence\").child($scope.currentAuthGetHome.uid);\n            amOnline.on('value', function(snapshot) {\n                if (snapshot.val()) {\n                    userRef.onDisconnect().set(Firebase.ServerValue.TIMESTAMP);\n                    userRef.set(\"Online\");\n                }\n            });\n\n            document.onIdle = function() {\n                userRef.set('idle');\n            }\n            document.onAway = function() {\n                userRef.set('away');\n            }\n            document.onBack = function(isIdle, isAway) {\n                userRef.set('online');\n            }\n        }\n\n\n\n\n\n        //ADD TAGS\n        if (!alertify.myAlert) {\n            alertify.dialog('myAlert', function() {\n                return {\n                    main: function(message) {\n                        this.message = message;\n                    },\n                    setup: function() {\n                        return {\n                            buttons: [{\n                                text: \"Ok!\",\n                                key: 27 /*Esc*/\n                            }],\n                            focus: {\n                                element: 0\n                            }\n                        };\n                    },\n                    prepare: function() {\n                        this.setContent(this.message);\n                    }\n                }\n            });\n        }\n\n\n\n        $scope.authData = refService.ref().getAuth();\n\n        if ($scope.authData) {\n            var currentAuth = refService.ref().getAuth();\n            refService.ref().onAuth(function(authData) {})\n\n            var obj = $firebaseObject(refService.ref().child(\"UserAuthInfo\").child(currentAuth.uid));\n            obj.$loaded(function(data) {\n                    $scope.Username = data.Username;\n                    $scope.Email = data.Email;\n                    $scope.UID = currentAuth.uid;\n                    $scope.image = data.Image;\n\n                    if (data.newUser == true) {\n                        //NewUser Vec\n\n                    }\n                },\n                function(error) {\n                    console.error(\"Error:\", error);\n                }\n            );\n\n        }\n        else {\n            $scope.Username = \"Tester\";\n            $scope.Email = \"Tester@Tester.com\";\n            $scope.UID = \"3424j23k4j32n4un43ui\";\n            $scope.image = 'http://cs624223.vk.me/v624223037/2b1bb/GRTKddkmXiw.jpg'\n                //alertify.myAlert(\"Please Signup to get more feautres. Sign Up Button located at top right.\");\n            $mdDialog.show(\n                $mdDialog.alert()\n                .parent(angular.element(document.querySelector('#popupContainer')))\n                .clickOutsideToClose(true)\n                .title('Sign up!')\n                .textContent('YPlease Signup to get more feautres. Sign Up Button located at top right')\n                .ok('Got it!')\n                .targetEvent(document.body)\n            );\n        }\n\n        $scope.goToProfile = function() {\n            $state.go(\"authHome.profile\", {\n                \"UID\": $scope.currentAuthGetHome.uid\n            })\n        }\n        $scope.openMenu = function($mdOpenMenu, ev) {\n            $mdOpenMenu(ev);\n        }\n\n        $scope.logout = function() {\n            refService.ref().unauth();\n            location.reload(true);\n            location.reload(true);\n        }\n\n        $scope.goToSettings = function() {\n            $state.go(\"authHome.settings\", {\n                \"UID\": $scope.UID,\n                \"USERNAME\": $scope.Username\n            })\n        }\n\n        if ($scope.currentAuthGetHome) {\n            refService.ref().child(\"UserAuthInfo\").child($scope.authData.uid).once(\"value\", function(snapTour) {\n\n                if (snapTour.val().newUser == true) {\n                    $mdDialog.show(\n                        $mdDialog.alert()\n                        .clickOutsideToClose(true)\n                        .title('Welcome New User')\n                        .textContent('Hello, We will like to introduce you to Ng-Forum! First, you can naviagte through your profile, settings, go to this forum, or even logout by clicking on your avatar. If you would like to see badges, FAQ, etc.. you can click on the menu bar. You can navigate through the forum topics, below on this page. And to see replies and so on for a topic, just click on the topic you wish. If you want to create a new topic, just click the create a new topic button. If you have any questions be sure to PM(Private Message) Mods, or email me at abogale2@gmail.com. Hope you enjoy using this forum :) !')\n                        .ariaLabel('Touring New User')\n                        .ok('Got it!')\n                        .targetEvent(document.body)\n                    );\n                    refService.ref().child(\"UserAuthInfo\").child($scope.authData.uid).update({\n                        newUser : false\n                    })\n                }\n            })\n\n\n        }\n\n\n        \n\n        \n        ///////BADGES HANDLING START//////////////////////////////////////\n        if($scope.currentAuthGetHome){\n                $scope.arrBadges = badgesService.getReplyBadges();\n                $scope.activeUserBadgeCount = 0;\n                refService.ref().child(\"Replies\").once(\"value\", function(repSnap) {\n                    repSnap.forEach(function(repSnapChild) {\n                        //amanuelhi0\n                        repSnapChild.forEach(function(repSnapChild2) {\n                            //-KKQtkhkau9bMerPKVrk\n                            if (repSnapChild2.val().replyCreatorUID == $scope.currentAuthGetHome.uid) {\n                                $scope.activeUserBadgeCount++;\n                            }\n                        })\n        \n        \n                        //Bronze\n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.bronze.rankone.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Reply\").child(\"RankOne\").set({\n                                BronzeBadge: $scope.arrBadges.activeUser.bronze.rankone.pushObj\n                            })\n                        }\n                        else {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Reply\").child(\"RankOne\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n                        }\n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.bronze.ranktwo.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Reply\").child(\"RankTwo\").set({\n                                BronzeBadge: $scope.arrBadges.activeUser.bronze.ranktwo.pushObj\n                            })\n                        }\n                        else {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Reply\").child(\"RankTwo\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n                        }\n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.bronze.rankthree.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Reply\").child(\"RankThree\").set({\n                                BronzeBadge: $scope.arrBadges.activeUser.bronze.rankthree.pushObj\n                            })\n                        }\n                        else {\n        \n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Reply\").child(\"RankThree\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n        \n                        }\n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.bronze.rankfour.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Reply\").child(\"RankFour\").set({\n                                BronzeBadge: $scope.arrBadges.activeUser.bronze.rankfour.pushObj\n                            })\n                        }\n        \n                        else {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Reply\").child(\"RankFour\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n                        }\n        \n                        //SILVER        \n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.silver.rankone.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Reply\").child(\"RankOne\").set({\n                                SilverBadge: $scope.arrBadges.activeUser.silver.rankone.pushObj\n                            })\n                        }\n                        else {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Reply\").child(\"RankOne\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n                        }\n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.silver.ranktwo.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Reply\").child(\"RankTwo\").set({\n                                SilverBadge: $scope.arrBadges.activeUser.silver.ranktwo.pushObj\n                            })\n                        }\n                        else {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Reply\").child(\"RankTwo\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n                        }\n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.silver.rankthree.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Reply\").child(\"RankThree\").set({\n                                SilverBadge: $scope.arrBadges.activeUser.silver.rankthree.pushObj\n                            })\n                        }\n                        else {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Reply\").child(\"RankThree\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n                        }\n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.silver.rankfour.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Reply\").child(\"RankFour\").set({\n                                SilverBadge: $scope.arrBadges.activeUser.silver.rankfour.pushObj\n                            })\n                        }\n        \n                        else {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Reply\").child(\"RankFour\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n        \n                        }\n        \n                        //GOLD\n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.gold.rankone.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Reply\").child(\"RankOne\").set({\n                                GoldBadge: $scope.arrBadges.activeUser.gold.rankone.pushObj\n                            })\n                        }\n        \n                        else {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Reply\").child(\"RankOne\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n                        }\n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.gold.ranktwo.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Reply\").child(\"RankTwo\").set({\n                                GoldBadge: $scope.arrBadges.activeUser.gold.ranktwo.pushObj\n                            })\n                        }\n                        else {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Reply\").child(\"RankTwo\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n                        }\n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.gold.rankthree.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Reply\").child(\"RankThree\").set({\n                                GoldBadge: $scope.arrBadges.activeUser.gold.rankthree.pushObj\n                            })\n                        }\n        \n        \n                        else {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Reply\").child(\"RankThree\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n                        }\n        \n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.gold.rankfour.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Reply\").child(\"RankFour\").set({\n                                GoldBadge: $scope.arrBadges.activeUser.gold.rankfour.pushObj\n                            })\n                        }\n        \n                        else {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Reply\").child(\"RankFour\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n                        }\n        \n                        //PLATINUM\n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.platinum.rankone.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"PlatinumBadge\").child(\"Reply\").child(\"RankOne\").set({\n                                PlatinumBadge: $scope.arrBadges.activeUser.platinum.rankone.pushObj\n                            })\n                        }\n        \n                        else {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"PlatinumBadge\").child(\"Reply\").child(\"RankOne\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n                        }\n        \n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.platinum.ranktwo.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"PlatinumBadge\").child(\"Reply\").child(\"RankTwo\").set({\n                                PlatinumBadge: $scope.arrBadges.activeUser.platinum.ranktwo.pushObj\n                            })\n                        }\n                        else {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"PlatinumBadge\").child(\"Reply\").child(\"RankTwo\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n                        }\n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.platinum.rankthree.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"PlatinumBadge\").child(\"Reply\").child(\"RankThree\").set({\n                                PlatinumBadge: $scope.arrBadges.activeUser.platinum.rankthree.pushObj\n                            })\n                        }\n                        else {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"PlatinumBadge\").child(\"Reply\").child(\"RankThree\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n                        }\n        \n                        if ($scope.activeUserBadgeCount >= $scope.arrBadges.activeUser.platinum.rankfour.Replies) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"PlatinumBadge\").child(\"Reply\").child(\"RankFour\").set({\n                                PlatinumBadge: $scope.arrBadges.activeUser.platinum.rankfour.pushObj\n                            })\n                        }\n        \n                        else {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"PlatinumBadge\").child(\"Reply\").child(\"RankFour\").remove(\n                                function(error) {\n                                    if (error)\n                                        alertify.error(\"Internal Error\");\n                                    else {\n        \n                                    }\n                                })\n                        }\n        \n        \n                    })\n        \n                })\n        \n        \n        \n                $scope.topicBadges = badgesService.getTopicBadges();\n                $scope.topicCount = 0;\n                refService.ref().child(\"Topics\").once(\"value\", function(snapBadTopics) {\n                    snapBadTopics.forEach(function(snapBadTopicsChild) {\n                            if (snapBadTopicsChild.val().UID == $scope.currentAuthGetHome.uid)\n                                $scope.topicCount++;\n                        })\n                        //BRONZE\n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.bronze.rankone.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Topics\").child(\"RankOne\").set({\n                            BronzeBadge: $scope.topicBadges.questionLover.bronze.rankone.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Topics\").child(\"RankOne\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.bronze.ranktwo.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Topics\").child(\"RankTwo\").set({\n                            BronzeBadge: $scope.topicBadges.questionLover.bronze.ranktwo.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Topics\").child(\"RankTwo\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.bronze.rankthree.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Topics\").child(\"RankThree\").set({\n                            BronzeBadge: $scope.topicBadges.questionLover.bronze.rankthree.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Topics\").child(\"RankThree\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.bronze.rankfour.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Topics\").child(\"RankFour\").set({\n                            BronzeBadge: $scope.topicBadges.questionLover.bronze.rankfour.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"BronzeBadge\").child(\"Topics\").child(\"RankFour\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n        \n                    //SILVER\n        \n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.silver.rankone.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Topics\").child(\"RankOne\").set({\n                            SilverBadge: $scope.topicBadges.questionLover.silver.rankone.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Topics\").child(\"RankOne\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.silver.ranktwo.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Topics\").child(\"RankTwo\").set({\n                            SilverBadge: $scope.topicBadges.questionLover.silver.ranktwo.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Topics\").child(\"RankTwo\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.silver.rankthree.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Topics\").child(\"RankThree\").set({\n                            SilverBadge: $scope.topicBadges.questionLover.silver.rankthree.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Topics\").child(\"RankThree\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.silver.rankfour.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Topics\").child(\"RankFour\").set({\n                            SilverBadge: $scope.topicBadges.questionLover.silver.rankfour.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"SilverBadge\").child(\"Topics\").child(\"RankFour\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n        \n                    //GOLD\n        \n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.gold.rankone.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Topics\").child(\"RankOne\").set({\n                            GoldBadge: $scope.topicBadges.questionLover.gold.rankone.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Topics\").child(\"RankOne\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.gold.ranktwo.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Topics\").child(\"RankTwo\").set({\n                            GoldBadge: $scope.topicBadges.questionLover.gold.ranktwo.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Topics\").child(\"RankTwo\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.gold.rankthree.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Topics\").child(\"RankThree\").set({\n                            GoldBadge: $scope.topicBadges.questionLover.gold.rankthree.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Topics\").child(\"RankThree\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.gold.rankfour.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Topics\").child(\"RankFour\").set({\n                            GoldBadge: $scope.topicBadges.questionLover.gold.rankfour.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"GoldBadge\").child(\"Topics\").child(\"RankFour\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n        \n        \n                    //PLATNIUM\n        \n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.platinum.rankone.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"Topics\").child(\"RankOne\").set({\n                            Platinum: $scope.topicBadges.questionLover.platinum.rankone.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"Topics\").child(\"RankOne\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.platinum.ranktwo.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"Topics\").child(\"RankTwo\").set({\n                            Platinum: $scope.topicBadges.questionLover.platinum.ranktwo.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"Topics\").child(\"RankTwo\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.platinum.rankthree.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"Topics\").child(\"RankThree\").set({\n                            Platinum: $scope.topicBadges.questionLover.platinum.rankthree.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"Topics\").child(\"RankThree\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.topicCount >= $scope.topicBadges.questionLover.platinum.rankfour.Topics) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"Topics\").child(\"RankFour\").set({\n                            Platinum: $scope.topicBadges.questionLover.platinum.rankfour.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"Topics\").child(\"RankFour\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n        \n        \n                })\n        \n        \n                $scope.daysVistedBadge = badgesService.getDaysVisitedBadges();\n                refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).once(\"value\", function(daysVisited) {\n        \n                    $scope.daysSinceJoined = moment.duration((moment(new Date())).diff(moment(new Date(parseInt(daysVisited.val().DateJoined)))))._days\n        \n                    //Bronze\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.bronze.rankone.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Bronze\").child(\"DaysVisted\").child(\"RankOne\").set({\n                            Bronze: $scope.daysVistedBadge.daysVisited.bronze.rankone.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Bronze\").child(\"DaysVisted\").child(\"RankOne\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.bronze.ranktwo.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Bronze\").child(\"DaysVisted\").child(\"RankTwo\").set({\n                            Bronze: $scope.daysVistedBadge.daysVisited.bronze.ranktwo.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Bronze\").child(\"DaysVisted\").child(\"RankTwo\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.bronze.rankthree.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Bronze\").child(\"DaysVisted\").child(\"RankThree\").set({\n                            Bronze: $scope.daysVistedBadge.daysVisited.bronze.rankthree.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Bronze\").child(\"DaysVisted\").child(\"RankThree\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.bronze.rankfour.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Bronze\").child(\"DaysVisted\").child(\"RankFour\").set({\n                            Bronze: $scope.daysVistedBadge.daysVisited.bronze.rankfour.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Bronze\").child(\"DaysVisted\").child(\"RankFour\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n        \n        \n                    //Silver\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.silver.rankone.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Silver\").child(\"DaysVisted\").child(\"RankOne\").set({\n                            Silver: $scope.daysVistedBadge.daysVisited.silver.rankone.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Silver\").child(\"DaysVisted\").child(\"RankOne\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.silver.ranktwo.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Silver\").child(\"DaysVisted\").child(\"RankTwo\").set({\n                            Silver: $scope.daysVistedBadge.daysVisited.silver.ranktwo.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Silver\").child(\"DaysVisted\").child(\"RankTwo\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.silver.rankthree.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Silver\").child(\"DaysVisted\").child(\"RankThree\").set({\n                            Silver: $scope.daysVistedBadge.daysVisited.silver.rankthree.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Silver\").child(\"DaysVisted\").child(\"RankThree\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.silver.rankfour.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Silver\").child(\"DaysVisted\").child(\"RankFour\").set({\n                            Silver: $scope.daysVistedBadge.daysVisited.silver.rankfour.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Silver\").child(\"DaysVisted\").child(\"RankFour\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n        \n                    //Gold\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.gold.rankone.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Gold\").child(\"DaysVisted\").child(\"RankOne\").set({\n                            Gold: $scope.daysVistedBadge.daysVisited.gold.rankone.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Gold\").child(\"DaysVisted\").child(\"RankOne\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.gold.ranktwo.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Gold\").child(\"DaysVisted\").child(\"RankTwo\").set({\n                            Gold: $scope.daysVistedBadge.daysVisited.gold.ranktwo.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Gold\").child(\"DaysVisted\").child(\"RankTwo\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.gold.rankthree.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Gold\").child(\"DaysVisted\").child(\"RankThree\").set({\n                            Gold: $scope.daysVistedBadge.daysVisited.gold.rankthree.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Gold\").child(\"DaysVisted\").child(\"RankThree\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.gold.rankfour.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Gold\").child(\"DaysVisted\").child(\"RankFour\").set({\n                            Gold: $scope.daysVistedBadge.daysVisited.gold.rankfour.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Gold\").child(\"DaysVisted\").child(\"RankFour\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n        \n                    //platinum\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.platinum.rankone.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"DaysVisted\").child(\"RankOne\").set({\n                            Platinum: $scope.daysVistedBadge.daysVisited.platinum.rankone.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"DaysVisted\").child(\"RankOne\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.platinum.ranktwo.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"DaysVisted\").child(\"RankTwo\").set({\n                            Platinum: $scope.daysVistedBadge.daysVisited.platinum.ranktwo.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"DaysVisted\").child(\"RankTwo\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.platinum.rankthree.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"DaysVisted\").child(\"RankThree\").set({\n                            Platinum: $scope.daysVistedBadge.daysVisited.platinum.rankthree.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"DaysVisted\").child(\"RankThree\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n                    if ($scope.daysSinceJoined >= ($scope.daysVistedBadge.daysVisited.platinum.rankfour.Days)) {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"DaysVisted\").child(\"RankFour\").set({\n                            Platinum: $scope.daysVistedBadge.daysVisited.platinum.rankfour.pushObj\n                        })\n                    }\n                    else {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetHome.uid).child(\"Platinum\").child(\"DaysVisted\").child(\"RankFour\").remove(function(err) {\n                            if (err)\n                                alertify.error(\"Internal Error\")\n                        })\n                    }\n        \n        \n                })\n        \n                /////BADGES HANDLING END////////////////////////////////////////\n        }\n    }\n\n})(angular);","(function(){\n    'use strict';\n    \n    angular\n           .module('ForumApp')\n           .controller('emojieToolCtrl', [\"$scope\",\"emojieTool\",\"$mdDialog\",\"$rootScope\", emojieToolCtrlfunc])\n           \n           function emojieToolCtrlfunc($scope,emojieTool,$mdDialog,$rootScope) {\n                $scope.emojieListCtrl = [\n                    {name : ':smile:', img: '<img src=\"assets/emoji/emoji-E056.png\"/>'},\n                    {name : ':sad:' , img: '<img src=\"assets/emoji/emoji-E058.png\"/> '},\n                    {name : ':smiley:', img: '<img src=\"assets/emoji/emoji-E415.png\"/> '},\n                    {name : ':very_happy:', img: '<img src=\"assets/emoji/emoji-E057.png\"/>'},\n                    {name : ':tounge_stuck_out:', img: '<img src=\"assets/emoji/emoji-E105.png\"/> '},\n                    {name : ':cant_talk:', img:'<img src=\"assets/emoji/emoji-E40C.png\"/>'},\n                    {name : ':laugh_dang:' ,img: '<img src=\"assets/emoji/emoji-E770.png\"/>'},\n                    {name : ':minus_one:',img: '<img src=\"assets/emoji/emoji-E421.png\"/>'},\n                    {name : ':plus_one:',img: '<img src=\"assets/emoji/emoji-E00E.png\"/>'},\n                  ]\n                   $scope.hide = function() {\n                        $mdDialog.hide();\n                        $rootScope.markdownData= '# HELLO CHANGED'\n                    };\n                    $scope.cancel = function() {\n                        $mdDialog.cancel();\n                        $rootScope.markdownData= '# HELLO CHANGED'\n                    };\n                    $scope.answer = function(answer) {\n                        $mdDialog.hide(answer);\n                    };\n                    \n              emojieTool.resetElementInfo();\n              \n                $scope.emojieClick = function(val) {\n                  document.getElementById('markdownUserType').value += ( \" \" + val.name )\n                  $mdDialog.cancel();\n                }\n             \n           }\n})(angular);","(function(angular){\n    var app = angular.module('ForumApp');\n    \n    app.controller('descChangeCtrl',[\"$scope\",\"$mdDialog\",\"$mdMedia\",\"currentAuth\",\"refService\", descChangeCtrl])\n    \n    function descChangeCtrl($scope,$mdDialog,$mdMedia,currentAuth,refService){\n        $scope.hide = function() {\n            $mdDialog.hide();\n        };\n        $scope.cancel = function() {\n            $mdDialog.cancel();\n        };\n        $scope.answer = function(answer) {\n            $mdDialog.hide(answer);\n        };\n        \n        $scope.change = function(desc){\n            if(desc.length > 5){\n                refService.ref().child(\"UserAuthInfo\").child(currentAuth.uid).update({\n                    Description : desc\n                }, function(error) {\n                  if (error) {\n                    alertify.error('Synchronization failed');\n                  } else {\n                    alertify.success('Synchronization succeeded');\n                    $mdDialog.cancel();\n                  }\n                  })\n                \n            }else{\n                alertify.error(\"LEGNTH HAS TO BE ATLEAST 5 CHARACTERS!\")\n            }\n        }\n    }\n})(angular);","(function(angular){\n    var app = angular.module('ForumApp');\n    \n    app.controller('emailSettingsCtrl', [\"$scope\",\"refService\",\"currentAuth\",\"$mdDialog\", emailSettingsCtrl])\n    \n    function emailSettingsCtrl($scope,refService,currentAuth,$mdDialog){\n\n          $scope.getUID = refService.ref().getAuth();\n           \n           console.log($scope.getUID);\n        $scope.hide = function() {\n            $mdDialog.hide();\n        };\n        $scope.cancel = function() {\n            $mdDialog.cancel();\n        };\n        $scope.answer = function(answer) {\n            $mdDialog.hide(answer);\n        };\n\n        $scope.changeEmailDialog = function(){\n           \n           \n           if($scope.getUID.provider == 'twitter' || $scope.getUID.provider == 'github') {\n               \n                refService.ref().child(\"UserAuthInfo\").child(currentAuth.uid).update({\n                        Email: $scope.emailChange\n                    })\n                    \n                    \n                    alertify.success(\"User email changed successfully!\");\n            //Updating Topics\n                    refService.ref().child(\"Topics\").once(\"value\", function(snapshot) {\n\n                        snapshot.forEach(function(childSnapshot) {\n                            var key = childSnapshot.key();\n                            var childData = childSnapshot.val();\n                            if (childData.UID == currentAuth.uid) {\n                                refService.ref().child(\"Topics\").child(childData.pushKey).update({\n                                    Email: $scope.emailChange\n                                })\n                            }\n                        })\n                    })\n                    \n            //Updating Replise\n                    \n                    refService.ref().child(\"Replies\").once(\"value\", function(snapshot) {\n\n                        snapshot.forEach(function(childSnapshot) {\n                            var key = childSnapshot.key();\n                            var childData = childSnapshot.val();\n                            childSnapshot.forEach(function(EvenChild){\n                                var keyNest = EvenChild.key();\n                                var childDataNest = EvenChild.val();\n                                if(childDataNest.replyCreatorUID == currentAuth.uid){\n                                  refService.ref().child(\"Replies\").child(key).child(childDataNest.pushKey).update\n                                    ({\n                                        replyCreatorEmail : $scope.emailChange                   \n                                    })\n                                }\n                            })\n                        })\n                    })\n                    location.reload(true);\n                    location.reload(true);\n                    $mdDialog.cancel();\n               \n           }\n \n            else\n            {\n                 var email = $scope.emailChange || $scope.emailChange.toString;\n            var oldEmail = $scope.emailChangeOld;\n            refService.ref().changeEmail({\n                oldEmail: oldEmail,\n                newEmail: email,\n                password: $scope.passwordChangeOld\n            }, function(error) {\n                if (error) {\n                    switch (error.code) {\n                        case \"INVALID_PASSWORD\":\n                            alertify.error(\"The specified user account password is incorrect.\");\n                            break;\n                        case \"INVALID_USER\":\n                            alertify.error(\"The specified user account does not exist.\");\n                            break;\n                        default:\n                            alertify.error(\"Error creating user:\" +  error);\n                    }\n                } else {\n                    refService.ref().child(\"UserAuthInfo\").child(currentAuth.uid).update({\n                        Email: email\n                    })\n                    \n                    \n                    alertify.success(\"User email changed successfully!\");\n            //Updating Topics\n                    refService.ref().child(\"Topics\").once(\"value\", function(snapshot) {\n\n                        snapshot.forEach(function(childSnapshot) {\n                            var key = childSnapshot.key();\n                            var childData = childSnapshot.val();\n                            if (childData.UID == currentAuth.uid) {\n                                refService.ref().child(\"Topics\").child(childData.pushKey).update({\n                                    Email: email\n                                })\n                            }\n                        })\n                    })\n                    \n            //Updating Replise\n                    \n                    refService.ref().child(\"Replies\").once(\"value\", function(snapshot) {\n\n                        snapshot.forEach(function(childSnapshot) {\n                            var key = childSnapshot.key();\n                            var childData = childSnapshot.val();\n                            childSnapshot.forEach(function(EvenChild){\n                                var keyNest = EvenChild.key();\n                                var childDataNest = EvenChild.val();\n                                if(childDataNest.replyCreatorUID == currentAuth.uid){\n                                  refService.ref().child(\"Replies\").child(key).child(childDataNest.pushKey).update\n                                    ({\n                                        replyCreatorEmail : email                   \n                                    })\n                                }\n                            })\n                        })\n                    })\n                    location.reload(true);\n                    location.reload(true);\n                    $mdDialog.cancel();\n                }\n            });\n            }\n           \n        }\n    }\n})(angular);\n\n/*\n\n                    \n                    */","(function(angular) {\n    var app = angular.module('ForumApp')\n\n    app.controller('imageChangeCtrl', [\"$scope\", \"refService\", \"currentAuth\", \"$mdDialog\", \"encodeImageToBase64\", \"$firebaseObject\", imageChangeCtrl])\n\n    function imageChangeCtrl($scope, refService, currentAuth, $mdDialog, encodeImageToBase64, $firebaseObject) {\n        $scope.hide = function() {\n            $mdDialog.hide();\n        };\n        $scope.cancel = function() {\n            $mdDialog.cancel();\n        };\n        $scope.answer = function(answer) {\n            $mdDialog.hide(answer);\n        };\n\n\n        $scope.uploadFile = function(event) {\n            var doc = document.getElementById('inputFileToLoad');\n            var file = document.getElementById('inputFileToLoad').files;\n            var base64Image = encodeImageToBase64.encode(doc, file, refService.ref(), currentAuth.uid);\n\n            \n            \n            // setTimeout(function() {\n            //     location.reload(true);\n            //     location.reload(true);\n            // }, 3000)\n\n        };\n    }\n})(angular);\n","(function(angular){\n    var app = angular.module('ForumApp')\n    \n    app.controller('passwordChangeCtrl', [\"$scope\",\"refService\",\"currentAuth\",\"$mdDialog\", passwordChangeCtrl])\n    \n    function passwordChangeCtrl($scope,refService,currentAuth,$mdDialog){\n        $scope.hide = function() {\n            $mdDialog.hide();\n        };\n        $scope.cancel = function() {\n            $mdDialog.cancel();\n        };\n        $scope.answer = function(answer) {\n            $mdDialog.hide(answer);\n        };\n        \n        $scope.changePasswordDialog = function(){\n\n            refService.ref().changePassword({\n              email: $scope.emailNormal,\n              oldPassword: $scope.passwordChangeOld,\n              newPassword: $scope.passwordChangeNew\n            }, function(error) {\n              if (error) {\n                switch (error.code) {\n                  case \"INVALID_PASSWORD\":\n                    alertify.error(\"The specified user account password is incorrect.\");\n                    break;\n                  case \"INVALID_USER\":\n                    alertify.error(\"The specified user account does not exist.\");\n                    break;\n                  default:\n                    alertify.error(\"Error changing password:\", error);\n                }\n              } else {\n                alertify.success(\"User password changed successfully!\");\n                location.reload(true);\n                location.reload(true);\n                $mdDialog.cancel();\n              }\n            });\n        }\n    }\n})(angular);","(function(angular){\n    var app = angular.module('ForumApp')\n    \n    app.controller('usernameChangeCtrl', [\"$scope\",\"refService\",\"currentAuth\",\"$mdDialog\", usernameChangeCtrl])\n    \n    function usernameChangeCtrl($scope,refService,currentAuth,$mdDialog){\n        $scope.hide = function() {\n            $mdDialog.hide();\n        };\n        $scope.cancel = function() {\n            $mdDialog.cancel();\n        };\n        $scope.answer = function(answer) {\n            $mdDialog.hide(answer);\n        };\n        \n        $scope.changeUsernameDialog = function(){\n            var username = $scope.usernameNew;\n            refService.ref().child(\"UserAuthInfo\").child(currentAuth.uid).update({\n                Username : username\n            })\n            //Updating Topics\n                    refService.ref().child(\"Topics\").once(\"value\", function(snapshot) {\n\n                        snapshot.forEach(function(childSnapshot) {\n                            var key = childSnapshot.key();\n                            var childData = childSnapshot.val();\n                            if (childData.UID == currentAuth.uid) {\n                                refService.ref().child(\"Topics\").child(childData.pushKey).update({\n                                    Username: username\n                                })\n                            }\n                        })\n                    })\n                    \n            //Updating Replise\n                    \n                    refService.ref().child(\"Replies\").once(\"value\", function(snapshot) {\n\n                        snapshot.forEach(function(childSnapshot) {\n                            var key = childSnapshot.key();\n                            var childData = childSnapshot.val();\n                            childSnapshot.forEach(function(EvenChild){\n                                var keyNest = EvenChild.key();\n                                var childDataNest = EvenChild.val();\n                                if(childDataNest.replyCreatorUID == currentAuth.uid){\n                                  refService.ref().child(\"Replies\").child(key).child(childDataNest.pushKey).update\n                                    ({\n                                        replyCreatorUsername : username                   \n                                    })\n                                }\n                            })\n                        })\n                    })\n            location.reload(true);\n                location.reload(true);        \n            $mdDialog.cancel();\n        }\n    }\n})(angular);","(function(){\n    'use strict';\n    \n    angular\n          .module('ForumApp')\n          .controller('viewTopicLikes', [\"$scope\",\"$mdDialog\",\"topicLikesService\",\"refService\",\"$stateParams\", viewTopicLikesfunc])\n          \n          function viewTopicLikesfunc($scope,$mdDialog,topicLikesService,refService,$stateParams) {\n              $scope.hide = function() {\n            $mdDialog.hide();\n          };\n          $scope.cancel = function() {\n            topicLikesService.resetInfo();\n            $mdDialog.cancel();\n          };\n          $scope.answer = function(answer) {\n            $mdDialog.hide(answer);\n          };\n          $scope.avatars = [];\n              $scope.num_likes = topicLikesService.getInfo1();\n              $scope.rep = topicLikesService.getInfo2();\n              refService.ref().child(\"Replies\").child($stateParams.USERNAME+$stateParams.POST).child($scope.rep.pushKey).on(\"value\", function(snapRepNum){\n                  snapRepNum.forEach(function(snapRepNumChild){\n                        if(typeof snapRepNumChild.val() == 'object') {\n                              for(var i in snapRepNumChild.val())\n                                  $scope.avatars.push(snapRepNumChild.val()[i].Avatar);\n                        }\n                        \n                        setTimeout(function(){\n                            topicLikesService.resetInfo();\n                        },100)\n                  })\n              })\n              \n\n          }\n})(angular);\n"],"sourceRoot":"/source/"}